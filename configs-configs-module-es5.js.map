{"version":3,"sources":["webpack:///src/app/configs/warehousetype/warehousetype.component.ts","webpack:///src/app/configs/warehousetype/warehousetype.component.html","webpack:///src/app/configs/warehouses/warehouses.component.ts","webpack:///src/app/configs/warehouses/warehouses.component.html","webpack:///src/app/configs/configs.module.ts","webpack:///src/app/configs/racks/racks.component.ts","webpack:///src/app/configs/racks/racks.component.html","webpack:///src/app/configs/configs.component.ts"],"names":["WarehousetypeComponent","fb","_snackBar","http","rows","data","filteredData","columns","name","tb2columns","tb2data","tb2filteredData","editForm","group","id","type","fetch","tb2fetch","register","cb","req","XMLHttpRequest","open","onload","JSON","parse","response","send","event","val","target","value","toLowerCase","colsAmt","length","keys","Object","filter","item","i","toString","indexOf","table2","offset","row","rowIndex","setValue","selectedRowData","patchValue","arrayRemove","subscribe","showNotification","array","element","form","key","empdata","put","closeEditModal","nativeElement","click","push","post","reset","closeAddModal","table","min","max","Math","floor","random","message","duration","verticalPosition","horizontalPosition","panelClass","colorName","text","placementFrom","placementAlign","filterDatatable","addRow","onAddRowSave","onEditSave","selector","templateUrl","styleUrls","roleTemplate","WarehousesComponent","latitude","longitude","location","whtype","ConfigsModule","declarations","imports","RacksComponent","tag","ConfigsComponent"],"mappings":"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","file":"configs-configs-module-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\n\n@Component({\n  selector: 'app-warehousetype',\n  templateUrl: './warehousetype.component.html',\n  styleUrls: ['./warehousetype.component.sass']\n})\nexport class WarehousetypeComponent implements OnInit {\n\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'type' }\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'type' }\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  type: any;\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n      type: new FormControl(),\n\n    });\n  }\n  ngOnInit() {\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      type: [''],\n      id: [''],\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', 'http://localhost:3000/warehouse_type');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      type: row.type,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n      type: this.type\n    });\n  }\n  deleteRow(row) {\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n    this.data = this.arrayRemove(this.data, row.id);\n    this.http.delete('http://localhost:3000/warehouse_type/'+row.id).subscribe();\n    this.showNotification(\n      'bg-red',\n      'Delete Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.type = form.value.type;\n      }\n      let empdata = {\n        'type' : form.value.type,\n\n\n      }\n      this.http.put('http://localhost:3000/warehouse_type/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post('http://localhost:3000/warehouse_type', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  type: String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>WareHouse Type</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <ngx-datatable-column name=\"id\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"type\" [width]=\"130\"></ngx-datatable-column>\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              New Warehouse Type</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Warehouse Type</mat-label>\n                                                              <input matInput formControlName=\"type\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('type').hasError('required')\">\n                                                              type  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.type}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Type</mat-label>\n                                                              <input matInput formControlName=\"type\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('type').hasError('required')\">\n                                                                 typeis required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\n\n@Component({\n  selector: 'app-warehouses',\n  templateUrl: './warehouses.component.html',\n  styleUrls: ['./warehouses.component.sass']\n})\nexport class WarehousesComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'latitude' },\n    { name: 'longitude' },\n    { name: 'location' },\n    { name: 'name' },\n    { name: 'whtype' },\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'latitude' },\n    { name: 'longitude' },\n    { name: 'location' },\n    { name: 'name' },\n    { name: 'whtype' },\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  type: any;\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n      latitude: new FormControl(),\n      longitude: new FormControl(),\n      location: new FormControl(),\n      name: new FormControl(),\n      whtype: new FormControl(),\n\n    });\n  }\n  ngOnInit() {\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      latitude: [''],\n      id: [''],\n      longitude: [''],\n      location: [''],\n      name: [''],\n      whtype: [''],\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', 'http://localhost:3000/warehouse');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      latitude: row.latitude,\n      longitude: row.longitude,\n      location: row.location,\n      name: row.name,\n      whtype: row.whtype,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n      type: this.type\n    });\n  }\n  deleteRow(row) {\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n    this.data = this.arrayRemove(this.data, row.id);\n    this.http.delete('http://localhost:3000/warehouse/'+row.id).subscribe();\n    this.showNotification(\n      'bg-red',\n      'Delete Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.type = form.value.type;\n      }\n      let empdata = {\n        'latitude' : form.value.latitude,\n        'longitude' : form.value.longitude,\n        'location' : form.value.location,\n        'name' : form.value.name,\n        'whtype' : form.value.whtype,\n\n      }\n      this.http.put('http://localhost:3000/warehouse/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post('http://localhost:3000/warehouse', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n\n  latitude : String;\n        longitude : String;\n        location : String;\n        name : String;\n        whtype : String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>WareHouse </strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <ngx-datatable-column name=\"id\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"latitude\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"location\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"longitude\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"name\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"whtype\" [width]=\"130\"></ngx-datatable-column>\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              New Warehouse </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Warehouse name</mat-label>\n                                                              <input matInput formControlName=\"name\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('name').hasError('required')\">\n                                                              name  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>location</mat-label>\n                                                            <input matInput formControlName=\"location\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('location').hasError('required')\">\n                                                            location  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>face</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>latitude</mat-label>\n                                                          <input matInput formControlName=\"latitude\">\n                                                          <mat-error\n                                                          *ngIf=\"register.get('latitude').hasError('required')\">\n                                                          latitude  is required\n                                                      </mat-error>\n                                                          <mat-icon matSuffix>face</mat-icon>\n                                                      </mat-form-field>\n                                                  </div>\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>longitude</mat-label>\n                                                        <input matInput formControlName=\"longitude\">\n                                                        <mat-error\n                                                        *ngIf=\"register.get('longitude').hasError('required')\">\n                                                        longitude  is required\n                                                    </mat-error>\n                                                        <mat-icon matSuffix>face</mat-icon>\n                                                    </mat-form-field>\n                                                </div>\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>whtype</mat-label>\n                                                      <input matInput formControlName=\"whtype\">\n                                                      <mat-error\n                                                      *ngIf=\"register.get('whtype').hasError('required')\">\n                                                      whtype  is required\n                                                  </mat-error>\n                                                      <mat-icon matSuffix>face</mat-icon>\n                                                  </mat-form-field>\n                                              </div>\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.name}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>name</mat-label>\n                                                              <input matInput formControlName=\"name\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('name').hasError('required')\">\n                                                                  name required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>location</mat-label>\n                                                            <input matInput formControlName=\"location\" required>\n                                                            <mat-icon matSuffix>face</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('location').hasError('required')\">\n                                                                location required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>latitude</mat-label>\n                                                          <input matInput formControlName=\"latitude\" required>\n                                                          <mat-icon matSuffix>face</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('latitude').hasError('required')\">\n                                                              latitude required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>longitude</mat-label>\n                                                        <input matInput formControlName=\"longitude\" required>\n                                                        <mat-icon matSuffix>face</mat-icon>\n                                                        <mat-error\n                                                            *ngIf=\"editForm.get('longitude').hasError('required')\">\n                                                            longitude required\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>whtype</mat-label>\n                                                      <input matInput formControlName=\"whtype\" required>\n                                                      <mat-icon matSuffix>face</mat-icon>\n                                                      <mat-error\n                                                          *ngIf=\"editForm.get('whtype').hasError('required')\">\n                                                          whtype required\n                                                      </mat-error>\n                                                  </mat-form-field>\n                                              </div>\n\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { ChannelsComponent } from './channels/channels.component';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfigsComponent } from './configs.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\n\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { WarehousetypeComponent } from './warehousetype/warehousetype.component';\nimport { WarehousesComponent } from './warehouses/warehouses.component';\nimport { CategoryComponent } from './category/category.component';\nimport { RacksComponent } from './racks/racks.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductmasterComponent } from './productmaster/productmaster.component';\n\n// tslint:disable-next-line: import-spacing\nimport {configsRoutingModule} from './configs.routing.module';\nimport { ReasonappComponent } from './reasonapp/reasonapp.component';\n\n@NgModule({\n  // tslint:disable-next-line: max-line-length\n  declarations: [ConfigsComponent, WarehousetypeComponent, WarehousesComponent, CategoryComponent, RacksComponent, ProductsComponent, ProductmasterComponent, ChannelsComponent, ReasonappComponent],\n  imports: [\n    AutocompleteLibModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    configsRoutingModule,\n    NgxDatatableModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MaterialFileInputModule,\n    MatRadioModule,\n    MatMenuModule\n  ]\n})\nexport class ConfigsModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\n\n@Component({\n  selector: 'app-racks',\n  templateUrl: './racks.component.html',\n  styleUrls: ['./racks.component.sass']\n})\nexport class RacksComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'location' },\n    { name: 'tag' }\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'location' },\n    { name: 'tag' }\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n\n\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n\n      location: new FormControl(),\n      tag: new FormControl(),\n\n    });\n  }\n  ngOnInit() {\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      location: [''],\n      id: [''],\n      tag: [''],\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', 'http://localhost:3000/rack');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      tag: row.tag,\n      location: row.location,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n\n      // location: this.location\n    });\n  }\n  deleteRow(row) {\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n    this.data = this.arrayRemove(this.data, row.id);\n    this.http.delete('http://localhost:3000/rack/'+row.id).subscribe();\n    this.showNotification(\n      'bg-red',\n      'Delete Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.type = form.value.type;\n      }\n      let empdata = {\n        'type' : form.value.type,\n\n\n      }\n      this.http.put('http://localhost:3000/rack/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post('http://localhost:3000/rack', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  tag: String;\n  location: String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Rack</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <ngx-datatable-column name=\"id\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"location\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"tag\" [width]=\"130\"></ngx-datatable-column>\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              Racks</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>location</mat-label>\n                                                              <input matInput formControlName=\"location\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('location').hasError('required')\">\n                                                              location  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>tag</mat-label>\n                                                            <input matInput formControlName=\"tag\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('tag').hasError('required')\">\n                                                            tag  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>face</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.location}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>location</mat-label>\n                                                              <input matInput formControlName=\"location\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('location').hasError('required')\">\n                                                                  location required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>tag</mat-label>\n                                                            <input matInput formControlName=\"tag\" required>\n                                                            <mat-icon matSuffix>face</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('tag').hasError('required')\">\n                                                               tag required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configs',\n  templateUrl: './configs.component.html',\n  styleUrls: ['./configs.component.sass']\n})\nexport class ConfigsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n"]}