{"version":3,"sources":["./src/app/empboard/othreq/othreq.component.ts","./src/app/empboard/othreq/othreq.component.html","./src/app/empboard/empboard.module.ts","./node_modules/ng-mat-select-infinite-scroll/__ivy_ngcc__/fesm2015/ng-mat-select-infinite-scroll.js","./src/app/empboard/usersdashboard/usersdashboard.component.ts","./src/app/empboard/usersdashboard/usersdashboard.component.html","./src/app/empboard/userrequest/userrequest.component.ts","./src/app/empboard/userrequest/userrequest.component.html","./src/app/empboard/userstatus/userstatus.component.ts","./src/app/empboard/userstatus/userstatus.component.html","./src/app/empboard/empboard.routing.module.ts"],"names":[],"mappings":"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","file":"empboard-empboard-module-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ThemePalette } from '@angular/material/core';\nimport { Observable } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\nimport { User } from 'src/app/forms/advance-controls/advance-controls.component';\nimport { MyErrorStateMatcher } from 'src/app/forms/form-controls/form-controls.component';\nimport {formatDate } from '@angular/common';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-othreq',\n  templateUrl: './othreq.component.html',\n  styleUrls: ['./othreq.component.sass']\n})\nexport class OthreqComponent implements OnInit {\n\n  register: FormGroup;\n  hide = true;\n  agree = false;\n  customForm: FormGroup;\n  empdata: any = {};\n  productdata: any = {};\n  getchannel: any = {};\n  form: FormGroup = new FormGroup({\n    empname : new FormControl('',Validators.required),\n    issuedby: new FormControl('',),\n    channel: new FormControl('',Validators.required),\n    date : new FormControl('',Validators.required),\n    itemcode : new FormControl(''),\n    otherdescription :  new FormControl('',Validators.required),\n    quantity : new FormControl('',Validators.required),\n    remarks :  new FormControl(''),\n    specdrawing : new FormControl('',Validators.required),\n    totalprice: new FormControl('')\n\n\n  });\n\n  itemsdata: any = {};\n  totalcost: number;\n  today= new Date();\n  jstoday;\n  data: any[];\n  closeAddModal: any;\n  constructor(private fb: FormBuilder , private http: HttpClient, private router : Router  ) {\n\n      this.form = this.fb.group({\n        empname : ['',[Validators.required]],\n        issuedby: [''],\n        channel: ['',[Validators.required]],\n        date : ['',[Validators.required]],\n        itemcode : [''],\n        otherdescription : ['',[Validators.required]],\n        quantity : ['',[Validators.required]],\n        remarks : [''],\n        specdrawing : [''],\n        totalprice: [''],\n\n      });\n      this.jstoday = formatDate(this.today, 'dd-MM-yyyy hh:mm:ss a', 'en-US', '+0530');\n  }\n  searchMoviesCtrl = new FormControl();\n  filteredMovies: any;\n  isLoading = false;\n  errorMsg: string;\n  onChangeEvent(event: any){\n    this.totalcost = event.target.value * this.itemsdata.purchasecost;\n   // console.log(this.itemsdata.purchasecost);\n   // console.log(this.totalcost);\n\n  }\n  itemDetails(id){\n\n    this.http.get(this.mainurl + 'product/'+id).subscribe(res => {\n      this.itemsdata = res;\n     // console.log(\"all data for the request\", this.itemsdata);\n    });\n\n\n  }\n\n  thisformis(){\n\n    this.form = this.fb.group({\n\n      channel: null,\n\n\n      otherdescription : null,\n      quantity : null,\n      remarks : null,\n      specdrawing :null,\n      totalprice: null,\n\n    });\n  }\n  productdataname : any ={};\n  productdatadic1 : any ={};\n  productdatadic2 : any ={};\n  productdatacode : any ={};\nkeycode = 'productcode';\nuserid;\nmainurl;\n  ngOnInit(): void {\n    this.userid = localStorage.getItem('userid');\n    this.mainurl = localStorage.getItem('mainurl');\n    this.itemDetails(13842);\n    this.http.get(this.mainurl+'productcode').subscribe(res => {\n      this.productdatacode = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     //// console.log(\"all names\", this.productdatacode);\n    });\n    this.http.get(this.mainurl + 'emp/'+this.userid).subscribe(res => {\n      this.empdata = res;\n     // console.log(\"all data\", this.empdata);\n    });\n    this.http.get(this.mainurl + 'product').subscribe(res => {\n      this.productdata = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all data\", this.productdata);\n    });\n    this.http.get(this.mainurl + 'productname').subscribe(res => {\n      this.productdataname = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdataname);\n    });\n    this.http.get(this.mainurl + 'productdis1').subscribe(res => {\n      this.productdatadic1 = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdatadic1);\n    });\n    this.http.get(this.mainurl + 'productdis2').subscribe(res => {\n      this.productdatadic2 = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdatadic2);\n    });\n    this.http.get(this.mainurl + 'channel').subscribe(res => {\n      this.getchannel = res;\n     // console.log(\"all data\", this.getchannel);\n    });\n  }\n\nkey1 = 'description1';\nkey2 = 'description2';\n\n  getdatasearch(){}\n\n\n\n  tagresponce : any ;\n\n\n  successAlertNotification(tag){\n\n    // Swal.fire( 'new request came',dataget)\n    Swal.fire({\n      title: 'New Request Received' +tag,\n      text: tag,\n      icon: 'info',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, Acknowledge it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.router.navigate(['/storemng/main']);\n\n      }\n    })\n  }\n  onRegister() {\n     // console.log('Form Value', this.form.value);\n\nif(this.form.valid){\n      this.http.post(this.mainurl + 'empothrequest', this.form.value).subscribe(\n        (val) => {\n           // console.log(\"POST call successful value returned in body\",val);\n          this.tagresponce =val\n                        //  alert(this.tagresponce.message);\n                        Swal.fire({\n                          title: this.tagresponce.message,\n                          text: '',\n                          icon: 'info',\n                          showCancelButton: true,\n                          confirmButtonColor: '#3085d6',\n                          cancelButtonColor: '#d33',\n                          confirmButtonText: 'Yes, Acknowledge it!'\n                        }).then((result) => {\n                          if (result.isConfirmed) {\n                            this.router.navigate(['/empboard/reqs']);\n\n                          }\n                        })\n\n\n        },\n\n        response => {\n\n\n\n\n        },\n        () => {\n           // console.log(\"The POST observable is now completed.\");\n        });\n      this.data = [...this.data];\n\n\n\n      //// console.log(this.data);\n      this.form.reset();\n      this.closeAddModal.nativeElement.click();\n      this.showNotification(\n        'bg-green',\n        'Add Record Successfully',\n        'bottom',\n        'right'\n      );\n      }\n      else {\n        this.showNotification(\n          'bg-green',\n          'Please fill all the required fields',\n          'bottom',\n          'right'\n        );\n      }\n  }\n  showNotification(arg0: string, arg1: string, arg2: string, arg3: string) {\n    throw new Error('Method not implemented.');\n  }\n\nitemcodefroms ;\n\n  selectEvent(item) {\n    if(item){\n   // console.log(item.id);\n    this.itemDetails(item.id);\n this.itemcodefroms =item.id\nconsole.log('this is code',this.itemcodefroms);\n    }\n    // do something with selected item\n  }\n\n  onChangeSearch(val: string) {\n    // fetch remote data from here\n    // And reassign the 'data' which is binded to 'data' property.\n  }\n\n  onFocused(e){\n    if(e){\n   // console.log('this is selected',e.id);\n    this.itemDetails(e.id);\n    this.itemcodefroms =e.id\n   // console.log('this is code',this.itemcodefroms);\n    }\n  }\n  keyword = 'name';\n\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}\n","<!-- <section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"example-full-width\" class=\"ng-autocomplete\">\n      <ng-autocomplete\n        [data]=\"productdataname\"\n        [searchKeyword]=\"keyword\"\n        (selected)='selectEvent($event)'\n        (inputChanged)='onChangeSearch($event)'\n        (inputFocused)='onFocused($event)'\n        [itemTemplate]=\"itemTemplate\"\n        [notFoundTemplate]=\"notFoundTemplate\">\n      </ng-autocomplete>\n\n      <ng-template #itemTemplate let-item>\n      <a [innerHTML]=\"item.name\"></a>\n      </ng-template>\n\n      <ng-template #notFoundTemplate let-notFound>\n      <div [innerHTML]=\"notFound\"></div>\n      </ng-template>\n      </div>\n  </div>\n</section> -->\n\n\n<section class=\"content\">\n  <div class=\"container-fluid\">\n    <!-- Basic Validation -->\n    <div class=\"row clearfix\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>\n              <strong>Request</strong> Form</h2>\n            <ul class=\"header-dropdown m-r--5\">\n              <li class=\"dropdown\">\n                <a href=\"#\" onClick=\"return false;\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n                  aria-expanded=\"false\">\n                  <i class=\"material-icons\">more_vert</i>\n                </a>\n\n              </li>\n            </ul>\n          </div>\n          <div class=\"body\">\n            <form class=\"register-form m-4\" [formGroup]=\"form\" (ngSubmit)=\"onRegister()\">\n              <div class=\"row\">\n\n              <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                <div class=\"example-full-width\" class=\"ng-autocomplete\">\n                  <ng-autocomplete\n                    [data]=\"productdataname\"\n                    placeHolder=\"Enter the Item Name\"\n                    [searchKeyword]=\"keyword\"\n                    (selected)='selectEvent($event)'\n                    (inputChanged)='onChangeSearch($event)'\n                    (inputFocused)='onFocused($event)'\n                    [itemTemplate]=\"itemTemplate\"\n                    [notFoundTemplate]=\"notFoundTemplate\">\n                  </ng-autocomplete>\n\n                  <ng-template #itemTemplate let-item>\n                  <a [innerHTML]=\"item.name\"></a>\n                  </ng-template>\n\n                  <ng-template #notFoundTemplate let-notFound>\n                  <div [innerHTML]=\"notFound\"></div>\n                  </ng-template>\n                  </div>\n\n\n            </div>\n            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n              <div class=\"example-full-width\" class=\"ng-autocomplete\">\n                <ng-autocomplete\n                  [data]=\"productdatadic1\"\n                  [searchKeyword]=\"key1\"\n                  placeHolder=\"Enter the Item Description 1\"\n                  (selected)='selectEvent($event)'\n                  (inputChanged)='onChangeSearch($event)'\n                  (inputFocused)='onFocused($event)'\n                  [itemTemplate]=\"itemTemplates\"\n                  [notFoundTemplate]=\"notFoundTemplates\">\n                </ng-autocomplete>\n\n                <ng-template #itemTemplates let-item>\n                <a [innerHTML]=\"item.description1\"></a>\n                </ng-template>\n\n                <ng-template #notFoundTemplates let-notFound>\n                <div [innerHTML]=\"notFound\"></div>\n                </ng-template>\n                </div>\n\n\n          </div>\n          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n            <div class=\"example-full-width\" class=\"ng-autocomplete\">\n              <ng-autocomplete\n                [data]=\"productdatadic2\"\n                placeHolder=\"Enter the item Description 2\"\n                [searchKeyword]=\"key2\"\n                (selected)='selectEvent($event)'\n                (inputChanged)='onChangeSearch($event)'\n                (inputFocused)='onFocused($event)'\n                [itemTemplate]=\"itemTemplates2\"\n                [notFoundTemplate]=\"notFoundTemplates2\">\n              </ng-autocomplete>\n\n              <ng-template #itemTemplates2 let-item>\n              <a [innerHTML]=\"item.description2\"></a>\n              </ng-template>\n\n              <ng-template #notFoundTemplates2 let-notFound>\n              <div [innerHTML]=\"notFound\"></div>\n              </ng-template>\n              </div>\n\n\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\" >\n          <div class=\"example-full-width\" class=\"ng-autocomplete\">\n            <ng-autocomplete\n              [data]=\"productdatacode\"\n              placeHolder=\"Enter the Item Code\"\n              [searchKeyword]=\"keycode\"\n              (selected)='selectEvent($event)'\n              (inputChanged)='onChangeSearch($event)'\n              (inputFocused)='onFocused($event)'\n              [itemTemplate]=\"itemTemplatescode\"\n              [notFoundTemplate]=\"notFoundTemplatescode\">\n            </ng-autocomplete>\n\n            <ng-template #itemTemplatescode let-item>\n            <a [innerHTML]=\"item.productcode\"></a>\n            </ng-template>\n\n            <ng-template #notFoundTemplatescode let-notFound>\n            <div [innerHTML]=\"notFound\"></div>\n            </ng-template>\n            </div>\n\n\n      </div> -->\n          <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n            <div class=\"example-full-width\" class=\"ng-autocomplete\">\n              <ng-autocomplete\n                [data]=\"productdatadic2\"\n                [searchKeyword]=\"key2\"\n                (selected)='selectEvent($event)'\n                (inputChanged)='onChangeSearch($event)'\n                (inputFocused)='onFocused($event)'\n                [itemTemplate]=\"itemTemplate\"\n                [notFoundTemplate]=\"notFoundTemplate\">\n              </ng-autocomplete>\n\n              <ng-template #itemTemplate let-item>\n              <a [innerHTML]=\"item.description1\"></a>\n              </ng-template>\n\n              <ng-template #notFoundTemplate let-notFound>\n              <div [innerHTML]=\"notFound\"></div>\n              </ng-template>\n              </div>\n\n\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-full-width\" class=\"ng-autocomplete\">\n            <ng-autocomplete\n              [data]=\"productdataname\"\n              [searchKeyword]=\"keyword\"\n              (selected)='selectEvent($event)'\n              (inputChanged)='onChangeSearch($event)'\n              (inputFocused)='onFocused($event)'\n              [itemTemplate]=\"itemTemplate\"\n              [notFoundTemplate]=\"notFoundTemplate\">\n            </ng-autocomplete>\n\n            <ng-template #itemTemplate let-item>\n            <a [innerHTML]=\"item.name\"></a>\n            </ng-template>\n\n            <ng-template #notFoundTemplate let-notFound>\n            <div [innerHTML]=\"notFound\"></div>\n            </ng-template>\n            </div>\n\n\n      </div> -->\n\n\n\n      </div>\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Emp Name</mat-label>\n\n                    <input matInput  formControlName=\"empname\"   [(ngModel)]=\"empdata.empname\" value = \"{{empdata.empname}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Date</mat-label>\n\n                    <input matInput  formControlName=\"date\"   [(ngModel)]=\"jstoday\" value = \"{{jstoday}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Channel</mat-label>\n\n                    <mat-select formControlName=\"channel\"   >\n                      <mat-option *ngFor=\"let option of getchannel\"   [(ngModel)]=\"option.id\"  value=\"{{option.id}}\">{{ option.name }}</mat-option>\n                    </mat-select>\n                    <mat-icon matSuffix>star</mat-icon>\n                    <mat-error *ngIf=\"form.get('channel').hasError('required')\">\n                      Channel input is Required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Department</mat-label>\n\n                    <input matInput    [(ngModel)]=\"empdata.dept\" value = \"{{empdata.dept}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Machine</mat-label>\n\n                    <input matInput placeholder =\"remarks\" formControlName=\"remarks\" >\n\n\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Code</mat-label>\n\n                    <!-- <input matInput placeholder =\"itemcode\"    [value]=\"itemsdata.productcode\" [readonly]=\"true\"> -->\n                    <input matInput  formControlName=\"itemcode\"   [(ngModel)]=\"itemsdata.productcode\" value = \"{{itemsdata.productcode}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n\n                <!-- <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Code</mat-label>\n\n                    <mat-select formControlName=\"itemcode\" (selectionChange)=\"itemDetails($event.value)\" >\n                      <mat-option *ngFor=\"let option of productdata\"  [(ngModel)]=\"option.id  \" [value]=\"option.id\">{{ option.productcode }}</mat-option>\n                    </mat-select>\n\n\n                  </mat-form-field>\n                </div> -->\n\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Name</mat-label>\n\n                    <input matInput placeholder =\"Item Name\"   [value]=\"itemsdata.name\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Category</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"  formControlName=\"category\" [value]=\"itemsdata.category\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Description 1</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.description1\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n\n              </div>\n              <div class=\"row\">\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Description 2</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.description2\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>specdrawing</mat-label>\n\n                    <input matInput placeholder =\"specdrawing\" formControlName=\"specdrawing\"   >\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Unit Cost</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.purchasecost\"  [readonly]=\"true\" >\n\n\n                  </mat-form-field>\n                </div>\n\n              </div>\n              <div class=\"row\">\n\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\"  (change)=\"onChangeEvent($event)\">\n                    <mat-label>Quantity</mat-label>\n\n                    <input matInput placeholder =\"Qunatity\" formControlName=\"quantity\"  type=\"number\"  >\n                    <mat-icon matSuffix>star</mat-icon>\n                    <mat-error *ngIf=\"form.get('quantity').hasError('required')\">\n                      Quantity name is Number\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Total Price</mat-label>\n                    <input matInput placeholder =\"totalprice\" [(ngModel)]=\"totalcost\" formControlName=\"totalprice\" [value]=\"totalcost\" [readonly]=\"true\" >\n\n\n\n                  </mat-form-field>\n                </div>\n\n\n              </div>\n<div class=\"row\">\n  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n      <mat-label>Other Description</mat-label>\n      <textarea matInput placeholder =\"otherdescription\" formControlName=\"otherdescription\" style=\"height:60px\"></textarea>\n\n      <mat-icon matSuffix>star</mat-icon>\n      <mat-error *ngIf=\"form.get('channel').hasError('required')\">\n        Other Description input is Required\n      </mat-error>\n    </mat-form-field>\n  </div>\n\n</div>\n\n\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                  <button class=\"mr-3\" mat-raised-button color=\"primary\">Submit</button>\n                  <button type=\"button\" (click)=\" thisformis()\" mat-button>Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- #END# Basic Validation -->\n  </div>\n</section>\n","import { ChartjsComponent } from './../charts/chartjs/chartjs.component';\nimport { empboardRoutingModule } from './empboard.routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserrequestComponent } from './userrequest/userrequest.component';\nimport { UserstatusComponent } from './userstatus/userstatus.component';\nimport { UsersdashboardComponent } from './usersdashboard/usersdashboard.component';\nimport { FullCalendarModule } from '@fullcalendar/angular';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ChartsModule as chartjsModule } from 'ng2-charts';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport {MatSelectInfiniteScrollModule} from 'ng-mat-select-infinite-scroll';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { ArchwizardModule } from 'angular-archwizard';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { CustomFormsModule } from 'ngx-custom-validators';\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { FormsRoutingModule } from '../forms/forms-routing.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\nimport { OthreqComponent } from './othreq/othreq.component';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n@NgModule({\n  declarations: [UserrequestComponent, UserstatusComponent, UsersdashboardComponent,OthreqComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    empboardRoutingModule,\n    NgxMatSelectSearchModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSelectInfiniteScrollModule,\n    chartjsModule,\n    NgxEchartsModule,\n    FullCalendarModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    FormsRoutingModule,\n    FormsModule,\n    ArchwizardModule,\n    DropzoneModule,\n    ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' }),\n    CKEditorModule,\n    CustomFormsModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    AutocompleteLibModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    NgxMaskModule,\n    ColorPickerModule,\n    MaterialFileInputModule,\n    NgxDatatableModule,\n  ]\n})\nexport class EmpboardModule { }\n","import { EventEmitter, Directive, NgZone, Input, Output, NgModule } from '@angular/core';\nimport { SELECT_ITEM_HEIGHT_EM, MatSelect, MatSelectModule } from '@angular/material/select';\nimport { takeUntil, debounceTime, tap } from 'rxjs/operators';\nimport { Subject, fromEvent } from 'rxjs';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/select';\nclass MatSelectInfiniteScrollDirective {\n    constructor(matSelect, ngZone) {\n        this.matSelect = matSelect;\n        this.ngZone = ngZone;\n        this.threshold = '15%';\n        this.debounceTime = 150;\n        this.infiniteScroll = new EventEmitter();\n        this.thrPx = 0;\n        this.thrPc = 0;\n        this.singleOptionHeight = SELECT_ITEM_HEIGHT_EM;\n        this.destroyed$ = new Subject();\n    }\n    ngOnInit() {\n        this.evaluateThreshold();\n    }\n    ngAfterViewInit() {\n        this.matSelect.openedChange.pipe(takeUntil(this.destroyed$)).subscribe((opened) => {\n            if (opened) {\n                this.panel = this.matSelect.panel.nativeElement;\n                this.singleOptionHeight = this.getSelectItemHeightPx();\n                this.registerScrollListener();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.destroyed$.next(true);\n        this.destroyed$.complete();\n    }\n    evaluateThreshold() {\n        if (this.threshold.lastIndexOf('%') > -1) {\n            this.thrPx = 0;\n            this.thrPc = (parseFloat(this.threshold) / 100);\n        }\n        else {\n            this.thrPx = parseFloat(this.threshold);\n            this.thrPc = 0;\n        }\n    }\n    registerScrollListener() {\n        fromEvent(this.panel, 'scroll').pipe(takeUntil(this.destroyed$), debounceTime(this.debounceTime), tap((event) => {\n            this.handleScrollEvent(event);\n        })).subscribe();\n    }\n    handleScrollEvent(event) {\n        this.ngZone.runOutsideAngular(() => {\n            if (this.complete) {\n                return;\n            }\n            const countOfRenderedOptions = this.matSelect.options.length;\n            const infiniteScrollDistance = this.singleOptionHeight * countOfRenderedOptions;\n            const threshold = this.thrPc !== 0 ? (infiniteScrollDistance * this.thrPc) : this.thrPx;\n            const scrolledDistance = this.panel.clientHeight + event.target.scrollTop;\n            if ((scrolledDistance + threshold) >= infiniteScrollDistance) {\n                this.ngZone.run(() => this.infiniteScroll.emit());\n            }\n        });\n    }\n    getSelectItemHeightPx() {\n        return parseFloat(getComputedStyle(this.panel).fontSize) * SELECT_ITEM_HEIGHT_EM;\n    }\n}\nMatSelectInfiniteScrollDirective.ɵfac = function MatSelectInfiniteScrollDirective_Factory(t) { return new (t || MatSelectInfiniteScrollDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MatSelect), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSelectInfiniteScrollDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectInfiniteScrollDirective, selectors: [[\"\", \"msInfiniteScroll\", \"\"]], inputs: { threshold: \"threshold\", debounceTime: \"debounceTime\", complete: \"complete\" }, outputs: { infiniteScroll: \"infiniteScroll\" } });\nMatSelectInfiniteScrollDirective.ctorParameters = () => [\n    { type: MatSelect },\n    { type: NgZone }\n];\nMatSelectInfiniteScrollDirective.propDecorators = {\n    threshold: [{ type: Input }],\n    debounceTime: [{ type: Input }],\n    complete: [{ type: Input }],\n    infiniteScroll: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectInfiniteScrollDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[msInfiniteScroll]'\n            }]\n    }], function () { return [{ type: ɵngcc1.MatSelect }, { type: ɵngcc0.NgZone }]; }, { threshold: [{\n            type: Input\n        }], debounceTime: [{\n            type: Input\n        }], infiniteScroll: [{\n            type: Output\n        }], complete: [{\n            type: Input\n        }] }); })();\n\nclass MatSelectInfiniteScrollModule {\n}\nMatSelectInfiniteScrollModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectInfiniteScrollModule });\nMatSelectInfiniteScrollModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectInfiniteScrollModule_Factory(t) { return new (t || MatSelectInfiniteScrollModule)(); }, imports: [[\n            MatSelectModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectInfiniteScrollModule, { declarations: function () { return [MatSelectInfiniteScrollDirective]; }, imports: function () { return [MatSelectModule]; }, exports: function () { return [MatSelectInfiniteScrollDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectInfiniteScrollModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatSelectInfiniteScrollDirective],\n                imports: [\n                    MatSelectModule\n                ],\n                exports: [MatSelectInfiniteScrollDirective]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ng-mat-select-infinite-scroll\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSelectInfiniteScrollDirective, MatSelectInfiniteScrollModule };\n\n//# sourceMappingURL=ng-mat-select-infinite-scroll.js.map","import { Component, OnInit ,ViewChild} from '@angular/core';\nimport { FullCalendarComponent } from '@fullcalendar/angular';\nimport { EventInput } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport * as XLSX from 'xlsx';\nimport { DynamicScriptLoaderService } from './../../services/dynamic-script-loader.service';\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexDataLabels,\n  ApexStroke,\n  ApexMarkers,\n  ApexYAxis,\n  ApexGrid,\n  ApexTitleSubtitle,\n  ApexPlotOptions,\n  ApexFill,\n  ApexLegend\n} from 'ng-apexcharts';\nimport { Rgba } from 'ngx-color-picker';\nimport { HttpClient } from '@angular/common/http';\n\ndeclare var $: any;\ndeclare var Chart: any;\ndeclare var ApexCharts: any;\n\nvar d = new Date(),\n  date = d.getDate(),\n  month = d.getMonth(),\n  year = d.getFullYear();\n// var myFiles = [];\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  stroke: ApexStroke;\n  dataLabels: ApexDataLabels;\n  markers: ApexMarkers;\n  colors: string[];\n  yaxis: ApexYAxis;\n  grid: ApexGrid;\n  legend: ApexLegend;\n  title: ApexTitleSubtitle;\n};\n\nexport type ChartOptions2 = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n};\n\n@Component({\n  selector: 'app-usersdashboard',\n  templateUrl: './usersdashboard.component.html',\n  styleUrls: ['./usersdashboard.component.sass']\n})\n\n\n  export class UsersdashboardComponent implements OnInit {\n\n\n    totalpricehigh : any = {};\n    totalpricelow: any = {};\n    totalordershigh : any = {};\n    totalorderslow: any = {};\n\n  totalcount : any = {};\n  id;\n  penddingcount: any = {};\n  Rejected: any = {};\n  completed: any = {};\n  myFiles = [];\n\n\n  constructor( private http: HttpClient) { }\n  getDatatotalcount() {\n    this.http.get('http://localhost:2020/emprequestrount/'+ this.id).subscribe(res => {\n      this.totalcount = res;\n      console.log(this.totalcount.count);\n\n    });\n  }\n  getDatapenddingcount() {\n\n    this.http.get( 'http://localhost:2020/emprequestrountpendding/'+ this.id).subscribe(res => {\n      this.penddingcount = res;\n\n    });\n  }\n  getDataRejectedcount() {\n\n    this.http.get( 'http://localhost:2020/emprequestrountRejected/'+ this.id).subscribe(res => {\n      this.Rejected = res;\n    });\n  }\n  getDatacompletedcount() {\n\n    this.http.get( 'http://localhost:2020/emprequestrountcompleted/'+ this.id).subscribe(res => {\n      this.completed = res;\n    });\n  }\n  // area chart start\n\n  // barChart\n\n  // end bar chart\n  toprequestrountcompleted() {\n\n    this.http.get( 'http://localhost:2020/toprequestrountcompleted' ).subscribe(res => {\n      this.totalpricehigh = res;\n    });\n  }\n  lowrequestrountcompleted() {\n\n    this.http.get( 'http://localhost:2020/lowrequestrountcompleted' ).subscribe(res => {\n      this.totalpricelow = res;\n    });\n  }\n  topordersrequestrount() {\n\n    this.http.get( 'http://localhost:2020/topordersrequestrount' ).subscribe(res => {\n      this.totalordershigh = res;\n    });\n  }\n  lowordersrequestrount() {\n\n    this.http.get( 'http://localhost:2020/lowordersrequestrount' ).subscribe(res => {\n      this.totalorderslow = res;\n    });\n  }\n\n  onFileChange(event: any) {\n\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.myFiles.push(event.target.files[i]);\n    }\n    /* wire up file reader */\n    const frmData = new FormData();\n\n    // tslint:disable-next-line: prefer-for-of\n    for (var i = 0; i < this.myFiles.length; i++) {\n      frmData.append('fileUpload', this.myFiles[i]);\n    }\n\n\n    const target: DataTransfer = (event.target) as DataTransfer;\n    if (target.files.length !== 1) {\n      throw new Error('Cannot use multiple files');\n    }\n    const reader: FileReader = new FileReader();\n    reader.readAsBinaryString(target.files[0]);\n    reader.onload = (e: any) => {\n      /* create workbook */\n      const binarystr: string = e.target.result;\n      const wb: XLSX.WorkBook = XLSX.read(binarystr, { type: 'binary' });\n\n      /* selected the first sheet */\n      const wsname: string = wb.SheetNames[0];\n      const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n      /* save data */\n      const data = XLSX.utils.sheet_to_json(ws); // to get 2d array pass 2nd parameter as object {header: 1}\n      console.log('data length')\n      console.log((data.length));\n      // this.http.post('http://localhost:2020/fileupload', frmData).subscribe();\n\n      // tslint:disable-next-line: prefer-for-of\n      for (var i = 0; i < data.length; i++) {\n        var eachItems =\n                     {\n                       category: data[i]['Item Class'],\n                        productcode: data[i]['Item'],\n                        description2: data[i]['Extended description 2'],\n                        description1: data[i]['Extended description 1'],\n                        name: data[i]['Description'],\n                        purchasecost: data[i]['Std Cost'],\n                        // category: data[i]['Item_Class']\n                     };\n                     this.http.post('http://localhost:2020/uploadproduct', eachItems).subscribe();\n        // var eachItem =\n        //              {\n        //                  Whs: data[i]['Whs'],\n        //                  Item: data[i]['Item'],\n        //                  Extended_description_2: data[i]['Extended description 2'],\n        //                  Extended_description_1: data[i]['Extended description 1'],\n        //                  Description: data[i]['Description'],\n        //                  On_hand: data[i]['On-hand'],\n        //                  On_order: data[i]['On-order'],\n        //                  Std_Cost: data[i]['Std Cost'],\n        //                  Item_Class: data[i]['Item Class'],\n        //              };\n      // this.http.post('http://localhost:2020/fileupload', eachItem).subscribe();\n      }\n\n      console.log(data[0]); // Data will be logged in array format containing objects\n\n    };\n }\n\n  ngOnInit() {\n    this.id = localStorage.getItem('userid');\nthis.toprequestrountcompleted();\nthis.topordersrequestrount();\nthis.lowrequestrountcompleted();\nthis.lowordersrequestrount();\n    this.getDatapenddingcount();\n    this. getDatatotalcount();\n    this.getDataRejectedcount() ;\n    this.getDatacompletedcount();\n\n\n  }\n\n\n}\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <!-- Widgets -->\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-green order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h4 class=\"m-b-20\">Total Requests</h4>\r\n            <h2 class=\"text-right\"><i class=\"fas fa-cart-plus pull-left\"></i><span> {{totalcount.count }}</span></h2>\r\n            <p class=\"m-b-0\">1</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-purple order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h4 class=\"m-b-20\">Pending Requests</h4>\r\n            <h2 class=\"text-right\"><i class=\"fas fa-business-time pull-left\"></i><span>{{penddingcount.count}}</span></h2>\r\n            <p class=\"m-b-0\">1</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-orange order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h4 class=\"m-b-20\">Rejected Request</h4>\r\n            <h2 class=\"text-right\"><i class=\"fas fa-chart-line pull-left\"></i><span>{{Rejected.count}}</span></h2>\r\n            <p class=\"m-b-0\">2</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-cyan order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h4 class=\"m-b-20\">Completed Requests</h4>\r\n            <h2 class=\"text-right\"><i class=\"fas fa-dollar-sign pull-left\"></i><span>{{completed.count }}</span></h2>\r\n            <p class=\"m-b-0\">2</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- #END# Widgets -->\r\n\r\n    <input id=\"my-file-selector\" type=\"file\" (change)=\"onFileChange($event)\" name=\"uploadExcel\">\r\n  </div>\r\n</section>\r\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ThemePalette } from '@angular/material/core';\nimport { combineLatest, merge, Observable, Subject } from 'rxjs';\nimport { startWith, map, mapTo, scan, takeUntil } from 'rxjs/operators';\nimport { User } from 'src/app/forms/advance-controls/advance-controls.component';\nimport { MyErrorStateMatcher } from 'src/app/forms/form-controls/form-controls.component';\nimport {formatDate } from '@angular/common';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { MatSelect } from '@angular/material/select';\nexport interface Bank {\n  id: string;\n  name: string;\n}\n@Component({\n  selector: 'app-userrequest',\n  templateUrl: './userrequest.component.html',\n  styleUrls: ['./userrequest.component.sass']\n})\n\nexport class UserrequestComponent implements OnInit {\n  register: FormGroup;\n  hide = true;\n  agree = false;\n  customForm: FormGroup;\n  empdata: any = {};\n  productdata: any = {};\n  getchannel: any = {};\n\n\n  @ViewChild('matSelectInfiniteScroll', { static: true } )\n  infiniteScrollSelect: MatSelect;\n\n  /** list with all available data, mocks some sort of backend data source */\n\n\n  // private mockBankList: Bank[];\n  private mockBankList: any =[];\n  // private mockBankList: Bank[] = Array.from({ length: 100000 }).map((_, i) => ({\n  //   id: String(i),\n  //   name: `Bank ${i}`\n  // }));\n\n\n  /** control for the selected bank */\n  bankCtrl: FormControl = new FormControl();\n\n  /** control for the search input value */\n  searchCtrl: FormControl = new FormControl();\n\n  /** list of data corresponding to the search input */\n  private filteredData$: Observable<Bank[]> = this.searchCtrl.valueChanges.pipe(\n    startWith(''),\n    map(searchKeyword => {\n      if (!searchKeyword) {\n        console.log(\"list\",typeof(this.mockBankList),this.mockBankList);\n\n        return this.mockBankList;\n\n      }\n      return this.mockBankList.filter((bank) =>\n        bank.name.toLowerCase().indexOf(searchKeyword.toLowerCase()) > -1\n      );\n    })\n  );\n\n  /** number of items added per batch */\n  batchSize = 20;\n  getNextBatch(){\n    this.incrementBatchOffset$.next();\n  }\n  private incrementBatchOffset$: Subject<void> = new Subject<void>();\n  private resetBatchOffset$: Subject<void> = new Subject<void>();\n\n  /** minimum offset needed for the batch to ensure the selected option is displayed */\n  private minimumBatchOffset$: Observable<number> = combineLatest([\n    this.filteredData$,\n    this.searchCtrl.valueChanges\n  ]).pipe(\n    map(([filteredData, searchValue]) => {\n      if (!this.searchCtrl.value && this.bankCtrl.value) {\n        const index = filteredData.findIndex(bank => bank.id === this.bankCtrl.value);\n        this.itemDetails(this.bankCtrl.value);\n        return index + this.batchSize;\n      } else {\n        return 0;\n      }\n    }),\n    startWith(0)\n  );\n\n  /** length of the visible data / start of the next batch */\n  private batchOffset$ = combineLatest([\n    merge(\n      this.incrementBatchOffset$.pipe(mapTo(true)),\n      this.resetBatchOffset$.pipe(mapTo(false))\n    ),\n    this.minimumBatchOffset$\n  ]).pipe(\n    scan((batchOffset, [doIncrement, minimumOffset]) => {\n      if (doIncrement) {\n        return Math.max(batchOffset + this.batchSize, minimumOffset + this.batchSize);\n      } else {\n        return Math.max(minimumOffset, this.batchSize);\n      }\n    }, this.batchSize),\n  );\n\n\n  /** list of data, filtered by the search keyword, limited to the length accumulated by infinity scrolling */\n  filteredBatchedData$: Observable<Bank[]> = combineLatest([\n    this.filteredData$,\n    this.batchOffset$\n  ]).pipe(\n    map(([filteredData, batchOffset]) => filteredData.slice(0, batchOffset))\n  );\n\n  private destroy$: Subject<void> = new Subject<void>();\n\n  numberRegEx = /\\-?\\d*\\.?\\d{1,2}/;\n  form: FormGroup = new FormGroup({\n    empname : new FormControl(''),\n    issuedby: new FormControl(''),\n    channel: new FormControl('',Validators.required),\n    date : new FormControl(''),\n    itemcode : new FormControl(''),\n    otherdescription :  new FormControl(''),\n    quantity : new FormControl('',Validators.required),\n    remarks :  new FormControl(''),\n    specdrawing : new FormControl(''),\n    totalprice: new FormControl(''),\n\n\n  });\n\n  itemsdata: any = {};\n  totalcost: number;\n  today= new Date();\n  jstoday;\n  data: any[];\n  closeAddModal: any;\n  errormsg = 'Input should be Number'\n  constructor(private fb: FormBuilder , private http: HttpClient , private router : Router ) {\n\n      this.form = this.fb.group({\n        empname : [''],\n        issuedby: [''],\n        channel: ['',[Validators.required]],\n        date : [''],\n        itemcode : ['', Validators.pattern(this.numberRegEx)],\n        otherdescription : [''],\n        quantity : ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        remarks : [''],\n        specdrawing : [''],\n        totalprice: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n\n      });\n      this.jstoday = formatDate(this.today, 'dd-MM-yyyy hh:mm:ss a', 'en-US', '+0530');\n  }\n  searchMoviesCtrl = new FormControl();\n  filteredMovies: any;\n  isLoading = false;\n  errorMsg: string;\n  onChangeEvent(event: any){\n    this.totalcost = event.target.value * this.itemsdata.purchasecost;\n   //// console.log(this.itemsdata.purchasecost);\n   //// console.log(this.totalcost);\n\n  }\n\n\n\n  itemDetails(id){\n    if (String(id) != 'undefined'){\n      this.http.get(this.mainurl + 'product/'+id).subscribe(res => {\n        this.itemsdata = res;\n       //// console.log(\"all data for the request\", this.itemsdata);\n      });\n    }\n\n\n\n  }\n  thisformis(){\n\n    this.form = this.fb.group({\n      channel: [''],\n\n\n      otherdescription : [''],\n      quantity : [''],\n      remarks : [''],\n      specdrawing : [''],\n      totalprice: [''],\n\n    });\n  }\n  productdataname : any ={};\n  productdatadic1 : any ={};\n  productdatadic2 : any ={};\n  productdatacode : any ={};\nkeycode = 'name';\nuserid;\nmainurl;\nproductname: any ={};\nngOnDestroy() {\n  this.destroy$.next();\n}\n\n/**\n * Load the next batch\n */\n\n\n\n  ngOnInit(): void {\n\n    this.infiniteScrollSelect.openedChange.pipe(takeUntil(this.destroy$)).subscribe(opened => {\n      // after opening, reset the batch offset\n      if (opened) {\n        this.resetBatchOffset$.next();\n      }\n    });\n    this.userid = localStorage.getItem('userid');\n    this.mainurl = localStorage.getItem('mainurl');\n\n    this.http.get(this.mainurl + 'productcode').subscribe(res => {\n      this.productdatacode = res;\n\n      // this.updateList(this.productdatacode);\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdatacode);\n    });\n    this.http.get(this.mainurl + 'emp/'+this.userid).subscribe(res => {\n      this.empdata = res;\n     // console.log(\"all data\", this.empdata);\n    });\n    // this.http.get(this.mainurl + 'product').subscribe(res => {\n    //   this.productdata = res;\n    //  // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n    //  // console.log(\"all data\", this.productdata);\n    // });\n    this.http.get(this.mainurl + 'productname').subscribe(res => {\n      this.productdataname = res;\n      this.mockBankList =   res;\n\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdataname);\n    //  localStorage.setItem('productdataname', JSON.stringify(this.productdataname));\n    });\n\n   // this.productdataname =  JSON.parse(localStorage.getItem('productdataname'));\n    this.http.get(this.mainurl + 'productdis1').subscribe(res => {\n      this.productdatadic1 = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdatadic1);\n    });\n    this.http.get(this.mainurl + 'productdis2').subscribe(res => {\n      this.productdatadic2 = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdatadic2);\n    });\n    this.http.get(this.mainurl + 'channel').subscribe(res => {\n      this.getchannel = res;\n     // console.log(\"all data\", this.getchannel);\n    });\n  }\n\nkey1 = 'description1';\nkey2 = 'description2';\n\n  getdatasearch(){\n\n  }\n  // successAlertNotification(tag){\n  //   Swal.fire('Hi', 'Congrats! operation successfull', tag)\n  // }\n\n  successAlertNotification(tag){\n\n    // Swal.fire( 'new request came',dataget)\n    Swal.fire({\n      title: 'New Request Received' +tag,\n      text: tag,\n      icon: 'info',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, Acknowledge it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.router.navigate(['/storemng/main']);\n\n      }\n    })\n  }\n\n  tagresponce : any ;\n  onRegister() {\n     console.log('Form Value ************************', this.form.value);\n\nif(this.form.value != undefined   &&  this.form.value ){\n      this.http.post(this.mainurl + 'emprequest', this.form.value).subscribe(\n        (val) => {\n            //console.log(\"POST call successful value returned in body\",val);\n          this.tagresponce =val\n                        //  alert(this.tagresponce.message);\n\n                          // Swal.fire( this.tagresponce.message)\n                          Swal.fire({\n                            title: 'New Request Received' +this.tagresponce.message,\n                            text: '',\n                            icon: 'info',\n                            showCancelButton: true,\n                            confirmButtonColor: '#3085d6',\n                            cancelButtonColor: '#d33',\n                            confirmButtonText: 'Yes, Acknowledge it!'\n                          }).then((result) => {\n                            if (result.isConfirmed) {\n                              this.router.navigate(['/empboard/reqs']);\n\n                            }\n                          })\n\n        },\n\n        response => {\n\n\n\n\n        },\n        () => {\n            //console.log(\"The POST observable is now completed.\");\n        });\n      this.data = [...this.data];\n\n\n\n      //// console.log(this.data);\n      this.form.reset();\n      this.closeAddModal.nativeElement.click();\n      this.showNotification(\n        'bg-green',\n        'Add Record Successfully',\n        'bottom',\n        'right'\n      );\n      }\n  }\n  showNotification(arg0: string, arg1: string, arg2: string, arg3: string) {\n    throw new Error('Method not implemented.');\n  }\n\nitemcodefroms ;\n\n  selectEvent(item) {\n    if(item){\n   // console.log(item.id);\n    this.itemDetails(item.id);\n this.itemcodefroms =item.id\nconsole.log('this is code',this.itemcodefroms);\n    }\n    // do something with selected item\n  }\n\n  onChangeSearch(val: string) {\n    // fetch remote data from here\n    // And reassign the 'data' which is binded to 'data' property.\n  }\n\n  onFocused(e){\n    if(e){\n   // console.log('this is selected',e.id);\n    this.itemDetails(e.id);\n    this.itemcodefroms =e.id\n   //// console.log('this is code',this.itemcodefroms);\n    }\n  }\n  keyword = 'name';\n\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}\n","<!-- <section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"example-full-width\" class=\"ng-autocomplete\">\n      <ng-autocomplete\n        [data]=\"productdataname\"\n        [searchKeyword]=\"keyword\"\n        (selected)='selectEvent($event)'\n        (inputChanged)='onChangeSearch($event)'\n        (inputFocused)='onFocused($event)'\n        [itemTemplate]=\"itemTemplate\"\n        [notFoundTemplate]=\"notFoundTemplate\">\n      </ng-autocomplete>\n\n      <ng-template #itemTemplate let-item>\n      <a [innerHTML]=\"item.name\"></a>\n      </ng-template>\n\n      <ng-template #notFoundTemplate let-notFound>\n      <div [innerHTML]=\"notFound\"></div>\n      </ng-template>\n      </div>\n  </div>\n</section> -->\n\n\n<section class=\"content\">\n  <div class=\"container-fluid\">\n    <!-- Basic Validation -->\n    <div class=\"row clearfix\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>\n              <strong>Request</strong> Form</h2>\n            <ul class=\"header-dropdown m-r--5\">\n              <li class=\"dropdown\">\n                <a href=\"#\" onClick=\"return false;\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n                  aria-expanded=\"false\">\n                  <i class=\"material-icons\">more_vert</i>\n                </a>\n\n              </li>\n            </ul>\n          </div>\n          <div class=\"body\">\n            <form class=\"register-form m-4\" [formGroup]=\"form\" (ngSubmit)=\"onRegister()\">\n              <div class=\"row\">\n\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\" >\n                <!-- <p>\n                  Selected id: {{bankCtrl?.value}}\n                </p> -->\n\n                <mat-form-field style=\"    width: 600px;\">\n                  <mat-select #matSelectInfiniteScroll\n                              msInfiniteScroll\n                              (infiniteScroll)=\"getNextBatch()\"\n                              [formControl]=\"bankCtrl\"\n                              placeholder=\"Select Item Name\">\n                    <mat-option>\n                      <!--disableScrollToActiveOnOptionsChanged should be set to true-->\n                      <ngx-mat-select-search\n                        [formControl]=\"searchCtrl\"\n                        placeholderLabel=\"search\"\n                        [disableScrollToActiveOnOptionsChanged]=\"true\"\n                        noEntriesFoundLabel=\"No entry matches\">\n                      </ngx-mat-select-search>\n                    </mat-option>\n                    <mat-option *ngFor=\"let bank of filteredBatchedData$ | async\"\n                                [value]=\"bank.id\">\n                      {{bank.name}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n                </div>\n\n              <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                <div class=\"example-full-width\" class=\"ng-autocomplete\">\n                  <ng-autocomplete\n                    [data]=\"productdataname\"\n                    placeHolder=\"Enter the Item Name\"\n                    [searchKeyword]=\"keyword\"\n                    (selected)='selectEvent($event)'\n                    (inputChanged)='onChangeSearch($event)'\n                    (inputFocused)='onFocused($event)'\n                    [itemTemplate]=\"itemTemplate\"\n                    [notFoundTemplate]=\"notFoundTemplate\">\n                  </ng-autocomplete>\n\n                  <ng-template #itemTemplate let-item>\n                  <a [innerHTML]=\"item.name\"></a>\n                  </ng-template>\n\n                  <ng-template #notFoundTemplate let-notFound>\n                  <div [innerHTML]=\"notFound\"></div>\n                  </ng-template>\n                  </div>\n\n\n            </div> -->\n            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n              <div class=\"example-full-width\" class=\"ng-autocomplete\">\n                <ng-autocomplete\n                  [data]=\"productdatadic1\"\n                  [searchKeyword]=\"key1\"\n                  placeHolder=\"Enter the Item Description 1\"\n                  (selected)='selectEvent($event)'\n                  (inputChanged)='onChangeSearch($event)'\n                  (inputFocused)='onFocused($event)'\n                  [itemTemplate]=\"itemTemplates\"\n                  [notFoundTemplate]=\"notFoundTemplates\">\n                </ng-autocomplete>\n\n                <ng-template #itemTemplates let-item>\n                <a [innerHTML]=\"item.description1\"></a>\n                </ng-template>\n\n                <ng-template #notFoundTemplates let-notFound>\n                <div [innerHTML]=\"notFound\"></div>\n                </ng-template>\n                </div>\n\n\n          </div>\n          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n            <div class=\"example-full-width\" class=\"ng-autocomplete\">\n              <ng-autocomplete\n                [data]=\"productdatadic2\"\n                placeHolder=\"Enter the item Description 2\"\n                [searchKeyword]=\"key2\"\n                (selected)='selectEvent($event)'\n                (inputChanged)='onChangeSearch($event)'\n                (inputFocused)='onFocused($event)'\n                [itemTemplate]=\"itemTemplates2\"\n                [notFoundTemplate]=\"notFoundTemplates2\">\n              </ng-autocomplete>\n\n              <ng-template #itemTemplates2 let-item>\n              <a [innerHTML]=\"item.description2\"></a>\n              </ng-template>\n\n              <ng-template #notFoundTemplates2 let-notFound>\n              <div [innerHTML]=\"notFound\"></div>\n              </ng-template>\n              </div>\n\n\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\" >\n          <div class=\"example-full-width\" class=\"ng-autocomplete\">\n            <ng-autocomplete\n              [data]=\"productdatacode\"\n              placeHolder=\"Enter the Item Code\"\n              [searchKeyword]=\"keycode\"\n              (selected)='selectEvent($event)'\n              (inputChanged)='onChangeSearch($event)'\n              (inputFocused)='onFocused($event)'\n              [itemTemplate]=\"itemTemplatescode\"\n              [notFoundTemplate]=\"notFoundTemplatescode\">\n            </ng-autocomplete>\n\n            <ng-template #itemTemplatescode let-item>\n            <a [innerHTML]=\"item.name\"></a>\n            </ng-template>\n\n            <ng-template #notFoundTemplatescode let-notFound>\n            <div [innerHTML]=\"notFound\"></div>\n            </ng-template>\n            </div>\n\n\n      </div>\n          <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n            <div class=\"example-full-width\" class=\"ng-autocomplete\">\n              <ng-autocomplete\n                [data]=\"productdatadic2\"\n                [searchKeyword]=\"key2\"\n                (selected)='selectEvent($event)'\n                (inputChanged)='onChangeSearch($event)'\n                (inputFocused)='onFocused($event)'\n                [itemTemplate]=\"itemTemplate\"\n                [notFoundTemplate]=\"notFoundTemplate\">\n              </ng-autocomplete>\n\n              <ng-template #itemTemplate let-item>\n              <a [innerHTML]=\"item.description1\"></a>\n              </ng-template>\n\n              <ng-template #notFoundTemplate let-notFound>\n              <div [innerHTML]=\"notFound\"></div>\n              </ng-template>\n              </div>\n\n\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-full-width\" class=\"ng-autocomplete\">\n            <ng-autocomplete\n              [data]=\"productdataname\"\n              [searchKeyword]=\"keyword\"\n              (selected)='selectEvent($event)'\n              (inputChanged)='onChangeSearch($event)'\n              (inputFocused)='onFocused($event)'\n              [itemTemplate]=\"itemTemplate\"\n              [notFoundTemplate]=\"notFoundTemplate\">\n            </ng-autocomplete>\n\n            <ng-template #itemTemplate let-item>\n            <a [innerHTML]=\"item.name\"></a>\n            </ng-template>\n\n            <ng-template #notFoundTemplate let-notFound>\n            <div [innerHTML]=\"notFound\"></div>\n            </ng-template>\n            </div>\n\n\n      </div> -->\n\n\n\n      </div>\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Emp Name</mat-label>\n\n                    <input matInput  formControlName=\"empname\"   [(ngModel)]=\"empdata.empname\" value = \"{{empdata.empname}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Date</mat-label>\n\n                    <input matInput  formControlName=\"date\"   [(ngModel)]=\"jstoday\" value = \"{{jstoday}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Channel</mat-label>\n\n                    <mat-select formControlName=\"channel\"   >\n                      <mat-option *ngFor=\"let option of getchannel\"   [(ngModel)]=\"option.id\"  value=\"{{option.id}}\">{{ option.name }}</mat-option>\n                    </mat-select>\n                    <mat-icon matSuffix>star</mat-icon>\n                    <mat-error *ngIf=\"form.get('channel').hasError('required')\">\n                      Channel input is Required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Department</mat-label>\n\n                    <input matInput    [(ngModel)]=\"empdata.dept\" value = \"{{empdata.dept}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Machine</mat-label>\n\n                    <input matInput placeholder =\"remarks\" formControlName=\"remarks\" >\n                    <!-- <mat-icon matSuffix>star</mat-icon> -->\n\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Code</mat-label>\n\n                    <!-- <input matInput placeholder =\"itemcode\"    [value]=\"itemsdata.productcode\" [readonly]=\"true\"> -->\n                    <input matInput  formControlName=\"itemcode\"   [(ngModel)]=\"itemsdata.productcode\" value = \"{{itemsdata.productcode}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n\n                <!-- <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Code</mat-label>\n\n                    <mat-select formControlName=\"itemcode\" (selectionChange)=\"itemDetails($event.value)\" >\n                      <mat-option *ngFor=\"let option of productdata\"  [(ngModel)]=\"option.id  \" [value]=\"option.id\">{{ option.productcode }}</mat-option>\n                    </mat-select>\n\n\n                  </mat-form-field>\n                </div> -->\n\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Name</mat-label>\n\n                    <input matInput placeholder =\"Item Name\"   [value]=\"itemsdata.name\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Category</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"  formControlName=\"category\" [value]=\"itemsdata.category\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Description 1</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.description1\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n\n              </div>\n              <div class=\"row\">\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Description 2</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.description2\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Spec Drawing</mat-label>\n\n                    <input matInput placeholder =\"specdrawing\" formControlName=\"specdrawing\"   >\n                    <!-- <mat-icon matSuffix>star</mat-icon> -->\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Other Description</mat-label>\n                    <input matInput placeholder =\"otherdescription\" formControlName=\"otherdescription\" >\n\n                    <!-- <mat-icon matSuffix>star</mat-icon> -->\n\n                  </mat-form-field>\n                </div>\n\n              </div>\n              <div class=\"row\">\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Unit Cost</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.purchasecost\"  [readonly]=\"true\" >\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\"  (change)=\"onChangeEvent($event)\">\n                    <mat-label>Live Quantity</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.livestock\"  [readonly]=\"true\" >\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\"  (change)=\"onChangeEvent($event)\">\n                    <mat-label>Quantity</mat-label>\n\n                    <input matInput placeholder =\"Qunatity\" formControlName=\"quantity\"  type=\"number\" >\n                    <mat-icon matSuffix>star</mat-icon>\n                    <mat-error *ngIf=\"form.get('quantity').hasError('required')\">\n                      Quantity Number input is Required\n                    </mat-error>\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Total Price</mat-label>\n                    <input matInput placeholder =\"totalprice\" [(ngModel)]=\"totalcost\" formControlName=\"totalprice\" [value]=\"totalcost\" [readonly]=\"true\" >\n\n                    <mat-error *ngIf=\"form.get('totalprice').hasError('required')\">\n                      Total Cost Number input is Required\n                    </mat-error>\n\n                  </mat-form-field>\n                </div>\n\n\n              </div>\n\n\n\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                  <button class=\"mr-3\" mat-raised-button color=\"primary\">Submit</button>\n                  <button type=\"button\"  (click)=\"thisformis()\"mat-button>Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- #END# Basic Validation -->\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ColumnMode, DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-userstatus',\n  templateUrl: './userstatus.component.html',\n  styleUrls: ['./userstatus.component.sass']\n})\nexport class UserstatusComponent implements OnInit {\n\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  newselected : any = {};\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  empdatasss;\n  resondata ;\n  columns = [\n    { name: 'id' },\n    { name: 'acknowledge' },\n    { name: 'channel' },\n    { name: 'date' },\n    { name: 'empname' },\n    { name: 'issuedby' },\n    { name: 'itemcode' },\n    { name: 'itemname' },\n    { name: 'otherdescription' },\n    { name: 'otp' },\n    { name: 'quantity' },\n    { name: 'remark' },\n    { name: 'remarks' },\n    { name: 'specdrawing' },\n    { name: 'status' },\n    { name: 'totalprice' },\n    { name: 'rejectreason' },\n    { name: 'rack' },\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'acknowledge' },\n    { name: 'channel' },\n    { name: 'date' },\n    { name: 'empname' },\n    { name: 'issuedby' },\n    { name: 'itemcode' },\n    { name: 'itemname' },\n    { name: 'otherdescription' },\n    { name: 'otp' },\n    { name: 'quantity' },\n    { name: 'remark' },\n    { name: 'remarks' },\n    { name: 'specdrawing' },\n    { name: 'status' },\n    { name: 'totalprice' },\n    { name: 'rejectreason' },\n    { name: 'rack' },\n\n  ];\n  tb2data = [];\n  unitcostcost;\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  type: any;\n  name: any;\n  code: any;\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n      acknowledge: new FormControl(),\n      channel: new FormControl(),\n      date: new FormControl(),\n      empname: new FormControl(),\n      issuedby: new FormControl(),\n      itemcode: new FormControl(),\n      itemname: new FormControl(),\n      otherdescription: new FormControl(),\n      otp: new FormControl(),\n      quantity: new FormControl(),\n      remark: new FormControl(),\n      remarks: new FormControl(),\n      specdrawing: new FormControl(),\n      status: new FormControl(),\n      totalprice: new FormControl(),\n      safestock: new FormControl(),\n      rol: new FormControl(),\n      livestock: new FormControl(),\n      minstock: new FormControl(),\n      rejectreason : new FormControl(),\n      rack : new FormControl(),\n\n    });\n  }\n  username;\n  empdata;\n  totalcost\n  onChangeEvent(event: any){\n    this.totalcost = parseInt(this.unitcostcost) * parseInt(event.target.value) ;\n  console.log('total new price',this.totalcost);\n   console.log('new quantity',event.target.value);\n\n\n  }\n  mainurl;\n  userrole;\n  ngOnInit() {\n\n    this.mainurl = localStorage.getItem('mainurl');\n    this.username = localStorage.getItem('username');\n    this.userrole = localStorage.getItem('userrole');\n    console.log(this.username);\n    this.getdatareason();\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      id: [''],\n   acknowledge: [''],\n   channel: [''],\n   date: [''],\n   empname: [''],\n   issuedby: [''],\n   itemcode: [''],\n   itemname: [''],\n   otherdescription: [''],\n   otp: [''],\n   quantity: [''],\n   remark: [''],\n   remarks: [''],\n   specdrawing: [''],\n   status: [''],\n   totalprice: [''],\n   rejectreason : [''],\n   safestock: [''],\n   rol: [''],\n   livestock: [''],\n   minstock: [''],\n   rack: [''],\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n\n    if( this.userrole != 'Employee'){\n      req.open('GET', this.mainurl+'emprequestuser/'+ this.username);\n    }else{\n\n      req.open('GET', this.mainurl+'emprequestuser/'+ this.username);\n\n    }\n\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n      console.log('get json data',data);\n\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n   acknowledge: row.acknowledge,\n   channel: row.channel,\n   date: row.date,\n   empname: row.empname,\n   issuedby: row.issuedby,\n   itemcode: row.itemcode,\n   itemname: row.itemname,\n   otherdescription: row.otherdescription,\n   otp: row.otp,\n   quantity: row.quantity,\n   remark: row.remark,\n   remarks: row.remarks,\n   specdrawing: row.specdrawing,\n   status: row.status,\n   totalprice: row.totalprice,\n   rejectreason:row.rejectreason,\n   safestock:row.safestock,\n   rol: row.rol,\n   livestock: row.livestock,\n   minstock:row.minstock,\n   rack:row.rack,\n\n    });\n    this.selectedRowData = row;\n    this.newselected = row;\n    console.log('selected row' ,  row)\n\n\n   this.unitcostcost = row.totalprice / row.quantity ;\n   console.log('unit price' ,  this.unitcostcost)\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n      name: this.name,\n      code: this.code\n    });\n  }\n\n\n\n  deleteRow() {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, this.newselected.id);\n        this.http.delete(this.mainurl + 'emprequest/'+this.newselected.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted :)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.id = form.value.id;\n        value.acknowledge= form.value.acknowledge;\n        value.channel= form.value.channel;\n        value.date= form.value.date;\n        value.empname= form.value.empname;\n        value.issuedby= form.value.issuedby;\n        value.itemcode= form.value.itemcode;\n        value.itemname= form.value.itemname;\n        value.otherdescription= form.value.otherdescription;\n        value.otp= form.value.otp;\n        value.quantity= form.value.quantity;\n        value.remark= form.value.remark;\n        value.remarks= form.value.remarks;\n        value.specdrawing= form.value.specdrawing;\n        value.status= form.value.status;\n        value.totalprice= form.value.totalprice;\n        value.rejectreason= form.value.rejectreason;\n        value.safestock= form.value.safestock;\n        value.rol= form.value.rol;\n        value.livestock= form.value.livestock;\n        value.minstock= form.value.minstock;\n        value.rack= form.value.rack;\n\n      }\n      this.empdata = {\n\n        \"id\" : form.value.id,\n        \"acknowledge\" : form.value.acknowledge,\n        \"channel\" : form.value.channel,\n        \"date\" : form.value.date,\n        \"empname\" : form.value.empname,\n        \"issuedby\" : form.value.issuedby,\n        \"itemcode\" : form.value.itemcode,\n        \"itemname\" : form.value.itemname,\n        \"otherdescription\" : form.value.otherdescription,\n        \"otp\" : form.value.otp,\n        \"quantity\" : form.value.quantity,\n        \"remark\" : form.value.remark,\n        \"remarks\" : form.value.remarks,\n        \"specdrawing\" : form.value.specdrawing,\n        \"status\" : form.value.status,\n        \"totalprice\" : form.value.totalprice,\n        \"rejectreason\" : form.value.rejectreason,\n        \"safestock\" : form.value.safestock,\n        \"rol\" : form.value.rol,\n        \"livestock\" :form.value.livestock,\n         \"minstock\" : form.value.minstock,\n         \"rack\" : form.value.rack,\n\n\n\n\n      }\n      this.empdatasss = {\n\n        \"id\" : form.value.id,\n        \"acknowledge\" : form.value.acknowledge,\n        \"channel\" : form.value.channel,\n        \"date\" : form.value.date,\n        \"empname\" : form.value.empname,\n        \"issuedby\" : form.value.issuedby,\n        \"itemcode\" : form.value.itemcode,\n        \"itemname\" : form.value.itemname,\n        \"otherdescription\" : form.value.otherdescription,\n        \"otp\" : form.value.otp,\n        \"quantity\" : form.value.quantity,\n        \"remark\" : form.value.remark,\n        \"remarks\" : form.value.remarks,\n        \"specdrawing\" : form.value.specdrawing,\n        \"status\" : form.value.status,\n        \"totalprice\" : form.value.totalprice,\n        \"rejectreason\" : form.value.rejectreason,\n        \"safestock\" : form.value.safestock,\n       \"rol\" : form.value.rol,\n       \"livestock\" :form.value.livestock,\n        \"minstock\" : form.value.minstock,\n\n      }\n\n      // this.http.put(this.mainurl + 'emprequestakg/'+form.value.id, empdata).subscribe();\n\n      // this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.http.put(this.mainurl + 'emprequestakg/'+form.value.id, this.empdatasss).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n\n  getdatareason(){\n    this.http.get(this.mainurl + 'rejectcategory').subscribe(res => {\n      this.resondata = res;\n      console.log('this is reason ',  this.resondata );\n\n    });\n\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl + 'emprequest', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  acknowledge: String;\n  channel: String;\n  date: String;\n  empname: String;\n  issuedby: String;\n  itemcode: String;\n  itemname: String;\n  otherdescription: String;\n  otp: String;\n  quantity: String;\n  remark: String;\n  remarks: String;\n  specdrawing: String;\n  status: String;\n  totalprice: String;\n  rejectreason:String;\n}\n\n\n\n\n\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>View Requests</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                        <label for=\"search-input\"><i\n                                                class=\"material-icons search-icon\">search</i></label>\n                                        <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                            (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                    </li>\n                                  </ul>\n                                  <!-- <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul> -->\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Request ID</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"date\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Date</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"otherdescription\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Other Description</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                   <ngx-datatable-column name=\"itemcode\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Item Code</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"otp\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>OTP</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n\n                                  <!-- <ngx-datatable-column name=\"quantity\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Quantity</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <!-- <ngx-datatable-column name=\"totalprice\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Total Price</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n\n                                  <ngx-datatable-column name=\"status\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Status</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <!-- <ngx-datatable-column name=\"rejectreason\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Reject Reason</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n\n\n\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\"  sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.id}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Name</mat-label>\n                                                              <input matInput formControlName=\"empname\" required [readonly]=\"true\">\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('empname').hasError('required')\" >\n                                                                  empname required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Date</mat-label>\n                                                            <input matInput formControlName=\"date\" required  [readonly]=\"true\">\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('date').hasError('required')\">\n                                                                date required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n                                                  <div class=\"row\">\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Item Code</mat-label>\n                                                            <input matInput formControlName=\"itemcode\" required  [readonly]=\"true\">\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('itemcode').hasError('required')\">\n                                                                itemcode required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Item Name</mat-label>\n                                                          <input matInput formControlName=\"itemname\" required   [readonly]=\"true\" >\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('itemname').hasError('required')\">\n                                                              itemname required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n\n                                                </div>\n\n                                                <div class=\"row\">\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Quantity</mat-label>\n                                                          <input matInput formControlName=\"quantity\" required   [readonly]=\"true\"  (change)=\"onChangeEvent($event)\" >\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('quantity').hasError('required')\">\n                                                              quantity required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                      <mat-label>Status</mat-label>\n                                                      <input matInput formControlName=\"status\" required  [readonly]=\"true\">\n\n                                                      <mat-icon matSuffix>flag</mat-icon>\n                                                      <mat-error *ngIf=\"register.get('status').hasError('required')\">\n                                                        Status is required\n                                                      </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n\n\n\n                                              </div>\n\n                                              <div class=\"row\">\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Total Price</mat-label>\n                                                        <input matInput formControlName=\"totalprice\" required   [readonly]=\"true\" >\n\n\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                        <mat-error\n                                                            *ngIf=\"editForm.get('totalprice').hasError('required')\">\n                                                            totalprice required\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n\n\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>Machine</mat-label>\n                                                      <input matInput formControlName=\"remarks\" required   [readonly]=\"true\">\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                      <mat-error\n                                                          *ngIf=\"editForm.get('remarks').hasError('required')\">\n                                                          remarks required\n                                                      </mat-error>\n                                                  </mat-form-field>\n                                              </div>\n\n                                            </div>\n                                            <div class=\"row\">\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                  <mat-label>Reason</mat-label>\n                                                  <input matInput formControlName=\"rejectreason\" required   [readonly]=\"true\">\n                                                  <mat-icon matSuffix>flag</mat-icon>\n\n\n                                                  <mat-error *ngIf=\"register.get('rejectreason').hasError('required')\">\n                                                    rejectreason is required\n                                                  </mat-error>\n                                                </mat-form-field>\n                                              </div>\n\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\"\n                                                    appearance=\"outline\">\n                                                    <mat-label>Live Stock</mat-label>\n                                                    <input matInput formControlName=\"livestock\" required  [readonly]=\"true\">\n                                                    <mat-icon matSuffix>star</mat-icon>\n                                                    <mat-error\n                                                        *ngIf=\"editForm.get('livestock').hasError('required')\">\n                                                        livestock required\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                              <mat-form-field class=\"example-full-width\"\n                                                  appearance=\"outline\">\n                                                  <mat-label>Reviewed By</mat-label>\n                                                  <input matInput formControlName=\"issuedby\" required  [readonly]=\"true\">\n                                                  <mat-icon matSuffix>star</mat-icon>\n                                                  <mat-error\n                                                      *ngIf=\"editForm.get('issuedby').hasError('issuedby')\">\n                                                      issuedby required\n                                                  </mat-error>\n                                              </mat-form-field>\n                                          </div>\n\n\n\n                                          </div>\n\n\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n\n\n                                                        <div *ngIf=\"newselected.status == 'Completed'; else elseBlock\">\n                                                          <button type=\"submit\"\n                                                          class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                      <button type=\"button\"\n                                                          class=\"btn btn-outline-warning btn-border-radius\"\n                                                          data-dismiss=\"modal\">Cancel</button>\n\n\n\n\n                                                        </div>\n                                                        <ng-template #elseBlock>\n                                                          <button type=\"submit\"\n                                                          class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                      <button type=\"button\"\n                                                          class=\"btn btn-outline-warning btn-border-radius\"\n                                                          data-dismiss=\"modal\">Cancel</button>\n\n                                                          <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow()'>\n                                                            <i class=\"material-icons\">delete</i>\n                                                            </button>\n                                                        </ng-template>\n\n\n\n\n\n\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { OthreqComponent } from './othreq/othreq.component';\r\nimport { UsersdashboardComponent } from './usersdashboard/usersdashboard.component';\r\nimport { UserstatusComponent } from './userstatus/userstatus.component';\r\n\r\nimport { UserrequestComponent } from './userrequest/userrequest.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'reqboard',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'req',\r\n    component: UserrequestComponent\r\n  },\r\n  {\r\n    path: 'reqs',\r\n    component: UserstatusComponent\r\n  },\r\n  {\r\n    path: 'othreq',\r\n    component: OthreqComponent\r\n  },\r\n  {\r\n    path: 'reqboard',\r\n    component:  UsersdashboardComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n// tslint:disable-next-line: class-name\r\nexport class empboardRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}