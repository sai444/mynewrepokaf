{"version":3,"sources":["webpack:///src/app/authentication/locked/locked.component.ts","webpack:///src/app/authentication/locked/locked.component.html","webpack:///src/app/authentication/page404/page404.component.ts","webpack:///src/app/authentication/page404/page404.component.html","webpack:///src/app/authentication/page500/page500.component.ts","webpack:///src/app/authentication/page500/page500.component.html","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/signin/signin.component.ts","webpack:///src/app/authentication/signin/signin.component.html","webpack:///src/app/authentication/authentication-routing.module.ts","webpack:///src/app/authentication/signup/signup.component.ts","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/authentication/forgot-password/forgot-password.component.ts","webpack:///src/app/authentication/forgot-password/forgot-password.component.html"],"names":["LockedComponent","formBuilder","route","router","http","submitted","hide","url","ress","loginForm","group","password","required","returnUrl","snapshot","queryParams","$","each","on","val","trim","addClass","removeClass","invalid","post","value","subscribe","res","console","log","localStorage","setItem","username","id","token","role","navigate","err","error","showErrorAlert","name","message","status","fire","controls","onSubmit","selector","templateUrl","styleUrls","Page404Component","loginformcenter","window","height","css","Page500Component","AuthenticationModule","declarations","imports","SigninComponent","routes","path","redirectTo","pathMatch","component","AuthenticationRoutingModule","forChild","exports","SignupComponent","chide","email","minLength","cpassword","ForgotPasswordComponent","mainurl","getItem","newpwd","oldpwd","get","resetData","text"],"mappings":"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","file":"authentication-authentication-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport Swal from 'sweetalert2';\r\n\r\ndeclare const $: any;\r\n@Component({\r\n  selector: 'app-locked',\r\n  templateUrl: './locked.component.html',\r\n  styleUrls: ['./locked.component.scss']\r\n})\r\nexport class LockedComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router, private http: HttpClient\r\n  ) {}\r\n  url = 'http://30.118.179.12:2020/loginuid'\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      password: ['', Validators.required]\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n\r\n    //    [Focus input] * /\r\n    $('.input100').each(function() {\r\n      $(this).on('blur', function() {\r\n        if (\r\n          $(this)\r\n            .val()\r\n            .trim() != ''\r\n        ) {\r\n          $(this).addClass('has-val');\r\n        } else {\r\n          $(this).removeClass('has-val');\r\n        }\r\n      });\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  // onSubmit() {\r\n  //   this.submitted = true;\r\n\r\n  //   // stop here if form is invalid\r\n  //   if (this.loginForm.invalid) {\r\n  //     console.log('this.loginForm' ,this.loginForm.value);\r\n\r\n  //     return;\r\n  //   } else {\r\n  //     this.router.navigate(['/dashboard/main']);\r\n  //   }\r\n  // }\r\n\r\n  ress :any = {};\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n\r\n\r\n      return;\r\n    } else {\r\n\r\n\r\n\r\n        this.http.post(this.url, this.loginForm.value).subscribe(\r\n          res => {\r\n            console.log(res);\r\n            this.ress = res\r\n            localStorage.setItem('username', this.ress.username);\r\n            localStorage.setItem('userid', this.ress.id);\r\n            localStorage.setItem('usertoken', this.ress.token);\r\n            localStorage.setItem('userrole', this.ress.role);\r\n            localStorage.setItem('mainurl', 'http://30.118.179.12:2020/');\r\n\r\n            console.log('userrole', this.ress.role);\r\n            // tslint:disable-next-line: triple-equals\r\n            if (this.ress.role == 'Admin'){\r\n              this.router.navigate(['/storemng/main']);\r\n\r\n\r\n              }\r\n              else if (this.ress.role == 'Supervisor'){\r\n                this.router.navigate(['/empboard/othreq']);\r\n\r\n              } else if (this.ress.role == 'Store Executive'){\r\n                this.router.navigate(['/storemng/main']);\r\n\r\n              }\r\n              else if (this.ress.role == 'Store Manager'){\r\n                this.router.navigate(['/storemng/main']);\r\n\r\n              }\r\n              else{\r\n                this.router.navigate(['/empboard/othreq']);\r\n\r\n              }\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            console.log(err.error);\r\n            this.showErrorAlert();\r\n            console.log(err.name);\r\n            console.log(err.message);\r\n            console.log(err.status);\r\n          }\r\n        );\r\n\r\n\r\n    }\r\n  }\r\n  showErrorAlert() {\r\n    Swal.fire('Yikes!', 'uid  went wrong!', 'error')\r\n  }\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n\r\n      <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <img src=\"assets/images/skf.png\"       alt=\"\" style=\"width: 60%;margin-left: 20%;margin-top: 2%;\"/>\r\n        <span class=\"login100-form-title pb-5\">\r\n\r\n          <span >BREVIUM Login</span>\r\n\r\n        </span>\r\n        <div class=\"text-center\">\r\n          <p class=\"txt1 p-b-20\">\r\n            RFID\r\n          </p>\r\n        </div>\r\n        <div class=\"form-group mb-3\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>RFID</mat-label>\r\n            <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n            <mat-icon matSuffix (click)=\"hide = hide\">\r\n              {{hide ? 'visibility_off' : 'visibility_off'}}</mat-icon>\r\n            <mat-error *ngIf=\"loginForm.get('password').hasError('required')\">\r\n              Scan Again is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"container-login100-form-btn p-t-30\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\">\r\n            Login\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"text-left p-t-30 p-b-20\">\r\n          <span class=\"txt3\">\r\n            Or by Using <a routerLink=\"/authentication/signin\">\r\n              Login\r\n            </a>\r\n          </span>\r\n        </div>\r\n        <div class=\"text-left p-t-30 p-b-20\">\r\n          <span class=\"txt3\">\r\n            *********************************************************\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"container-login100-form-btn\">\r\n          <img src=\"assets/images/loading.jpg\"       alt=\"\" style=\"width: 40%;margin-left: 20%;margin-top: 2%;\"/>\r\n        </div>\r\n      </form>\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-01.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-page404',\r\n  templateUrl: './page404.component.html',\r\n  styleUrls: ['./page404.component.scss']\r\n})\r\nexport class Page404Component implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    var loginformcenter =\r\n      ($(window).height() - $('.login100-form').height()) / 2 - 34;\r\n    $('.login100-form').css('margin-top', loginformcenter);\r\n  }\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n      <form class=\"login100-form\">\r\n        <span class=\"error-header p-b-45\">\r\n          404\r\n        </span>\r\n        <span class=\"error-subheader p-b-5\">\r\n          Looks Like You're Lost\r\n        </span>\r\n        <span class=\"error-subheader2 p-b-5\">\r\n          The Page You Are Looking For Not Available!\r\n        </span>\r\n\r\n        <div class=\"container-login100-form-btn p-t-30\t\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\">\r\n            Go To Home Page\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n\r\n          <div>\r\n            <a href=\"#\" class=\"txt1\">\r\n              Need Help?\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-03.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-page500',\r\n  templateUrl: './page500.component.html',\r\n  styleUrls: ['./page500.component.scss']\r\n})\r\nexport class Page500Component implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    var loginformcenter =\r\n      ($(window).height() - $('.login100-form').height()) / 2 - 34;\r\n    $('.login100-form').css('margin-top', loginformcenter);\r\n  }\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n      <form class=\"login100-form\">\r\n        <span class=\"error-header p-b-45\">\r\n          500\r\n        </span>\r\n        <span class=\"error-subheader2 p-b-5\">\r\n          Oops, Something went wrong. Please try after some times.\r\n        </span>\r\n\r\n        <div class=\"container-login100-form-btn p-t-30\t\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\">\r\n            Go To Home Page\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n\r\n          <div>\r\n            <a href=\"#\" class=\"txt1\">\r\n              Need Help?\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n      </form>\r\n\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-03.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { Page500Component } from './page500/page500.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    Page500Component,\r\n    Page404Component,\r\n    SigninComponent,\r\n    SignupComponent,\r\n    LockedComponent,\r\n    ForgotPasswordComponent\r\n  ],\r\n  imports: [\r\n\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AuthenticationRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    // HttpModule\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport Swal from 'sweetalert2';\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.scss']\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  ress :any = {};\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router, private http: HttpClient\r\n  ) {}\r\n  url = 'http://30.118.179.12:5000/login'\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: [''],\r\n      password: ['']\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n\r\n    //    [Focus input] * /\r\n    $('.input100').each(function() {\r\n      $(this).on('blur', function() {\r\n        if (\r\n          $(this)\r\n            .val()\r\n            .trim() != ''\r\n        ) {\r\n          $(this).addClass('has-val');\r\n        } else {\r\n          $(this).removeClass('has-val');\r\n        }\r\n      });\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  showErrorAlert() {\r\n    Swal.fire('Yikes!', 'username or password  went wrong!', 'error')\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n\r\n\r\n      return;\r\n    } else {\r\n\r\n\r\n\r\n        this.http.post(this.url, this.loginForm.value).subscribe(\r\n          res => {\r\n            console.log(res);\r\n            this.ress = res\r\n            localStorage.setItem('username', this.ress.username);\r\n            localStorage.setItem('userid', this.ress.id);\r\n            localStorage.setItem('usertoken', this.ress.token);\r\n            localStorage.setItem('userrole', this.ress.role);\r\n            localStorage.setItem('mainurl', 'http://30.118.179.12:5000/');\r\n\r\n            console.log('userrole', this.ress.role);\r\n            // tslint:disable-next-line: triple-equals\r\n            if (this.ress.role == 'admin'){\r\n              this.router.navigate(['/storemng/main']);\r\n\r\n\r\n              }\r\n\r\n\r\n\r\n              else{\r\n                this.router.navigate(['/storemng/main']);\r\n              }\r\n\r\n          },\r\n          (err: HttpErrorResponse) => {\r\n            console.log(err.error);\r\n            this.showErrorAlert();\r\n            console.log(err.name);\r\n            console.log(err.message);\r\n            console.log(err.status);\r\n          }\r\n        );\r\n\r\n\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n      <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <!-- <img src=\"assets/images/skf.png\"       alt=\"\" style=\"width: 60%;margin-left: 20%;margin-top: 2%;\"/> -->\r\n        <span class=\"login100-form-title pb-5\">\r\n\r\n          <span >KafkaDrive Login</span>\r\n\r\n        </span>\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Username</mat-label>\r\n              <input matInput formControlName=\"username\" />\r\n              <mat-icon matSuffix>face</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Password</mat-label>\r\n              <input matInput type=\"password\" formControlName=\"password\">\r\n              <mat-icon matSuffix>vpn_key</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex-sb-m w-full p-t-15 p-b-20\">\r\n          <div class=\"form-check\">\r\n            <label class=\"form-check-label\">\r\n              <input class=\"form-check-input\" type=\"checkbox\" value=\"\"> Remember me\r\n              <span class=\"form-check-sign\">\r\n                <span class=\"check\"></span>\r\n              </span>\r\n            </label>\r\n          </div>\r\n          <!-- <div>\r\n            <a class=\"txt1\" routerLink=\"/authentication/forgot-password\">Forgot Password?</a>\r\n          </div> -->\r\n        </div>\r\n        <div class=\"container-login100-form-btn\">\r\n\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n            Login\r\n          </button>\r\n        </div>\r\n\r\n<!--\r\n        <div class=\"text-left p-t-30 p-b-20\">\r\n          <span class=\"txt3\">\r\n           <a routerLink=\"/authentication/forgot-password\">\r\n               Reset Password\r\n            </a>\r\n          </span>\r\n        </div> -->\r\n\r\n        <div class=\"text-left p-t-30 p-b-20\">\r\n          <span class=\"txt3\">\r\n            *********************************************************\r\n          </span>\r\n        </div>\r\n\r\n\r\n\r\n      </form>\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-01.png');\">\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { Page500Component } from './page500/page500.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'signin',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'signin',\r\n    component: SigninComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    component: ForgotPasswordComponent\r\n  },\r\n\r\n  {\r\n    path: 'page404',\r\n    component: Page404Component\r\n  },\r\n  {\r\n    path: 'page500',\r\n    component: Page500Component\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  chide = true;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      password: ['', Validators.required],\r\n      cpassword: ['', Validators.required]\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n\r\n    //    [Focus input] * /\r\n    $('.input100').each(function() {\r\n      $(this).on('blur', function() {\r\n        if (\r\n          $(this)\r\n            .val()\r\n            .trim() != ''\r\n        ) {\r\n          $(this).addClass('has-val');\r\n        } else {\r\n          $(this).removeClass('has-val');\r\n        }\r\n      });\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n\r\n      <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <span class=\"login100-form-title p-b-30\">\r\n          Register\r\n        </span>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Username</mat-label>\r\n          <input matInput formControlName=\"username\" required>\r\n          <mat-icon matSuffix>face</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('username').hasError('required')\">\r\n            Username is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput formControlName=\"email\" required>\r\n          <mat-icon matSuffix>mail</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('email').hasError('required') || loginForm.get('email').touched\">\r\n            Please enter a valid email address\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Password</mat-label>\r\n          <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n          <mat-icon matSuffix (click)=\"hide = !hide\">\r\n            {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('password').hasError('required')\">\r\n            Password is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Confirm Password</mat-label>\r\n          <input matInput formControlName=\"cpassword\" [type]=\"chide ? 'password' : 'text'\" required>\r\n          <mat-icon matSuffix (click)=\"chide = !chide\">\r\n            {{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('cpassword').hasError('required')\">\r\n            Confirm Password is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <div class=\"flex-sb-m w-full p-t-15 p-b-20\">\r\n          <div>\r\n            <span>Already Registered? <a routerLink=\"/authentication/signin\">\r\n                Login\r\n              </a></span>\r\n          </div>\r\n        </div>\r\n        <div class=\"container-login100-form-btn\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n            Register\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"text-center p-t-30 p-b-20\">\r\n          <span class=\"txt2\">\r\n            or sign up using\r\n          </span>\r\n        </div>\r\n        <div class=\"login100-form-social flex-c-m\">\r\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg1 m-r-5\">\r\n            <i class=\"fab fa-facebook-f\"></i>\r\n          </a>\r\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg2 m-r-5\">\r\n            <i class=\"fab fa-twitter\"></i>\r\n          </a>\r\n        </div>\r\n      </form>\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-02.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport Swal from 'sweetalert2';\r\n\r\ndeclare const $: any;\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  // http: any;\r\n  ress: any;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient\r\n  ) {}\r\n  mainurl\r\n\r\n  ngOnInit() {\r\n    this.mainurl = localStorage.getItem('mainurl');\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      newpwd : ['', Validators.required],\r\n      oldpwd : ['', Validators.required]\r\n    });\r\n\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\r\n\r\n    //    [Focus input] * /\r\n    $('.input100').each(function() {\r\n      $(this).on('blur', function() {\r\n        if (\r\n          $(this)\r\n            .val()\r\n            .trim() != ''\r\n        ) {\r\n          $(this).addClass('has-val');\r\n        } else {\r\n          $(this).removeClass('has-val');\r\n        }\r\n      });\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  showErrorAlert() {\r\n    Swal.fire('Yikes!', 'username or password  went wrong!', 'error')\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n\r\n      Swal.fire('Yikes!', 'username or password  wrong!', 'error')\r\n      return;\r\n    } else {\r\n      console.log(\"login form values\", this.loginForm.get('username').value)\r\n      let resetData = {\r\n        'username' : this.loginForm.get('username').value,\r\n        'oldpwd' : this.loginForm.get('oldpwd').value,\r\n        'newpwd' : this.loginForm.get('newpwd').value\r\n      }\r\n      console.log(\"data\", resetData, typeof(resetData))\r\n      this.http.post(this.mainurl + 'resetpwd', resetData).subscribe(\r\n        res => {\r\n          this.router.navigate(['/authentication/signin']);\r\n          console.log(res);\r\n          this.ress = res\r\n          console.log('this is the respoce for password',this.ress.text);\r\n\r\n\r\n          // tslint:disable-next-line: triple-equals\r\n          if (this.ress.text == 'Password Reset Successful'){\r\n            this.router.navigate(['/']);\r\n\r\n\r\n            }\r\n\r\n\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          console.log('this is the err.error',err.error);\r\n\r\n          console.log(err.name);\r\n          console.log(err.message);\r\n          console.log(err.status);\r\n          if(err.status == 200){\r\n            Swal.fire('Yikes!', 'username or password  sucess!', 'success')\r\n            console.log('this is the err.status',err.status);\r\n            this.router.navigate(['/authentication/signin']);\r\n\r\n\r\n          }else{\r\n            this.showErrorAlert();\r\n          }\r\n        }\r\n      );\r\n\r\n\r\n  }\r\n}\r\n\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n      <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <img src=\"assets/images/skf.png\"       alt=\"\" style=\"width: 60%;margin-left: 20%;margin-top: 2%;\"/>\r\n        <span class=\"login100-form-title p-b-45\">\r\n\r\n          Reset Password\r\n        </span>\r\n        <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n          <!-- Enter your registered email address. -->\r\n        </span>\r\n        <div class=\"form-group mb-5\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Username</mat-label>\r\n            <input matInput formControlName=\"username\" required>\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"loginForm.get('username').hasError('required')\">\r\n              Username is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"form-group mb-5\">\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Old Password</mat-label>\r\n          <input matInput formControlName=\"oldpwd\" required>\r\n          <mat-icon matSuffix>face</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('oldpwd').hasError('required')\">\r\n            Old Password is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"form-group mb-5\">\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>New Password</mat-label>\r\n          <input matInput formControlName=\"newpwd\" required>\r\n          <mat-icon matSuffix>face</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('newpwd').hasError('required')\">\r\n            New Password is required\r\n          </mat-error>\r\n          </mat-form-field>\r\n      </div>\r\n        <div class=\"container-login100-form-btn\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n            Reset My Password\r\n          </button>\r\n        </div>\r\n        <div class=\"w-full p-t-25 text-center\">\r\n          <div>\r\n            <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n              Login?\r\n            </a>\r\n\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"text-left p-t-30 p-b-20\">\r\n          <span class=\"txt3\">\r\n            *********************************************************\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"container-login100-form-btn\">\r\n          <img src=\"assets/images/loading.jpg\"       alt=\"\" style=\"width: 40%;margin-left: 20%;margin-top: 2%;\"/>\r\n        </div>\r\n      </form>\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-02.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"]}