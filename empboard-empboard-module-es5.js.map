{"version":3,"sources":["webpack:///src/app/empboard/othreq/othreq.component.ts","webpack:///src/app/empboard/othreq/othreq.component.html","webpack:///src/app/empboard/empboard.module.ts","webpack:///node_modules/ng-mat-select-infinite-scroll/__ivy_ngcc__/fesm2015/ng-mat-select-infinite-scroll.js","webpack:///src/app/empboard/usersdashboard/usersdashboard.component.ts","webpack:///src/app/empboard/usersdashboard/usersdashboard.component.html","webpack:///src/app/empboard/userrequest/userrequest.component.ts","webpack:///src/app/empboard/userrequest/userrequest.component.html","webpack:///src/app/empboard/userstatus/userstatus.component.ts","webpack:///src/app/empboard/userstatus/userstatus.component.html","webpack:///src/app/empboard/empboard.routing.module.ts"],"names":["OthreqComponent","fb","http","router","hide","agree","empdata","productdata","getchannel","form","empname","required","issuedby","channel","date","itemcode","otherdescription","quantity","remarks","specdrawing","totalprice","itemsdata","today","Date","searchMoviesCtrl","isLoading","productdataname","productdatadic1","productdatadic2","productdatacode","keycode","key1","key2","keyword","group","jstoday","event","totalcost","target","value","purchasecost","id","get","mainurl","subscribe","res","userid","localStorage","getItem","itemDetails","tag","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","navigate","valid","post","val","tagresponce","message","response","data","reset","closeAddModal","nativeElement","click","showNotification","arg0","arg1","arg2","arg3","Error","item","itemcodefroms","console","log","e","onRegister","onChangeEvent","selector","templateUrl","styleUrls","EmpboardModule","withConfig","warnOnNgModelWithFormControl","declarations","imports","MatSelectInfiniteScrollDirective","matSelect","ngZone","threshold","debounceTime","infiniteScroll","thrPx","thrPc","singleOptionHeight","destroyed$","evaluateThreshold","openedChange","pipe","opened","panel","getSelectItemHeightPx","registerScrollListener","next","complete","lastIndexOf","parseFloat","handleScrollEvent","runOutsideAngular","countOfRenderedOptions","options","length","infiniteScrollDistance","scrolledDistance","clientHeight","scrollTop","run","emit","getComputedStyle","fontSize","ɵfac","MatSelectInfiniteScrollDirective_Factory","t","ɵdir","type","selectors","inputs","outputs","ctorParameters","propDecorators","args","MatSelectInfiniteScrollModule","ɵmod","ɵinj","factory","MatSelectInfiniteScrollModule_Factory","ngJitMode","exports","d","getDate","month","getMonth","year","getFullYear","UsersdashboardComponent","totalpricehigh","totalpricelow","totalordershigh","totalorderslow","totalcount","penddingcount","Rejected","completed","myFiles","count","i","files","push","frmData","FormData","append","reader","FileReader","readAsBinaryString","onload","binarystr","wb","wsname","SheetNames","ws","Sheets","sheet_to_json","eachItems","category","productcode","description2","description1","name","toprequestrountcompleted","topordersrequestrount","lowrequestrountcompleted","lowordersrequestrount","getDatapenddingcount","getDatatotalcount","getDataRejectedcount","getDatacompletedcount","onFileChange","UserrequestComponent","mockBankList","bankCtrl","searchCtrl","filteredData$","valueChanges","searchKeyword","filter","bank","toLowerCase","indexOf","batchSize","incrementBatchOffset$","resetBatchOffset$","minimumBatchOffset$","filteredData","searchValue","index","findIndex","batchOffset$","batchOffset","doIncrement","minimumOffset","Math","max","filteredBatchedData$","slice","destroy$","numberRegEx","errormsg","productname","pattern","String","infiniteScrollSelect","undefined","getNextBatch","selectEvent","onChangeSearch","onFocused","thisformis","UserstatusComponent","_snackBar","rows","newselected","columns","tb2columns","tb2data","tb2filteredData","editForm","acknowledge","itemname","otp","remark","status","safestock","rol","livestock","minstock","rejectreason","rack","parseInt","unitcostcost","username","userrole","getdatareason","fetch","tb2fetch","register","cb","req","XMLHttpRequest","open","JSON","parse","send","colsAmt","keys","Object","toString","table2","offset","row","rowIndex","setValue","selectedRowData","patchValue","code","cancelButtonText","arrayRemove","dismiss","DismissReason","cancel","array","element","key","empdatasss","put","closeEditModal","resondata","table","min","floor","random","duration","verticalPosition","horizontalPosition","panelClass","colorName","placementFrom","placementAlign","filterDatatable","onEditSave","roleTemplate","routes","path","redirectTo","pathMatch","component","empboardRoutingModule","forChild"],"mappings":"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","file":"empboard-empboard-module-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ThemePalette } from '@angular/material/core';\nimport { Observable } from 'rxjs';\nimport { startWith, map } from 'rxjs/operators';\nimport { User } from 'src/app/forms/advance-controls/advance-controls.component';\nimport { MyErrorStateMatcher } from 'src/app/forms/form-controls/form-controls.component';\nimport {formatDate } from '@angular/common';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-othreq',\n  templateUrl: './othreq.component.html',\n  styleUrls: ['./othreq.component.sass']\n})\nexport class OthreqComponent implements OnInit {\n\n  register: FormGroup;\n  hide = true;\n  agree = false;\n  customForm: FormGroup;\n  empdata: any = {};\n  productdata: any = {};\n  getchannel: any = {};\n  form: FormGroup = new FormGroup({\n    empname : new FormControl('',Validators.required),\n    issuedby: new FormControl('',),\n    channel: new FormControl('',Validators.required),\n    date : new FormControl('',Validators.required),\n    itemcode : new FormControl(''),\n    otherdescription :  new FormControl('',Validators.required),\n    quantity : new FormControl('',Validators.required),\n    remarks :  new FormControl(''),\n    specdrawing : new FormControl('',Validators.required),\n    totalprice: new FormControl('')\n\n\n  });\n\n  itemsdata: any = {};\n  totalcost: number;\n  today= new Date();\n  jstoday;\n  data: any[];\n  closeAddModal: any;\n  constructor(private fb: FormBuilder , private http: HttpClient, private router : Router  ) {\n\n      this.form = this.fb.group({\n        empname : ['',[Validators.required]],\n        issuedby: [''],\n        channel: ['',[Validators.required]],\n        date : ['',[Validators.required]],\n        itemcode : [''],\n        otherdescription : ['',[Validators.required]],\n        quantity : ['',[Validators.required]],\n        remarks : [''],\n        specdrawing : [''],\n        totalprice: [''],\n\n      });\n      this.jstoday = formatDate(this.today, 'dd-MM-yyyy hh:mm:ss a', 'en-US', '+0530');\n  }\n  searchMoviesCtrl = new FormControl();\n  filteredMovies: any;\n  isLoading = false;\n  errorMsg: string;\n  onChangeEvent(event: any){\n    this.totalcost = event.target.value * this.itemsdata.purchasecost;\n   // console.log(this.itemsdata.purchasecost);\n   // console.log(this.totalcost);\n\n  }\n  itemDetails(id){\n\n    this.http.get(this.mainurl + 'product/'+id).subscribe(res => {\n      this.itemsdata = res;\n     // console.log(\"all data for the request\", this.itemsdata);\n    });\n\n\n  }\n\n  thisformis(){\n\n    this.form = this.fb.group({\n\n      channel: null,\n\n\n      otherdescription : null,\n      quantity : null,\n      remarks : null,\n      specdrawing :null,\n      totalprice: null,\n\n    });\n  }\n  productdataname : any ={};\n  productdatadic1 : any ={};\n  productdatadic2 : any ={};\n  productdatacode : any ={};\nkeycode = 'productcode';\nuserid;\nmainurl;\n  ngOnInit(): void {\n    this.userid = localStorage.getItem('userid');\n    this.mainurl = localStorage.getItem('mainurl');\n    this.itemDetails(13842);\n    this.http.get(this.mainurl+'productcode').subscribe(res => {\n      this.productdatacode = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     //// console.log(\"all names\", this.productdatacode);\n    });\n    this.http.get(this.mainurl + 'emp/'+this.userid).subscribe(res => {\n      this.empdata = res;\n     // console.log(\"all data\", this.empdata);\n    });\n    this.http.get(this.mainurl + 'product').subscribe(res => {\n      this.productdata = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all data\", this.productdata);\n    });\n    this.http.get(this.mainurl + 'productname').subscribe(res => {\n      this.productdataname = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdataname);\n    });\n    this.http.get(this.mainurl + 'productdis1').subscribe(res => {\n      this.productdatadic1 = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdatadic1);\n    });\n    this.http.get(this.mainurl + 'productdis2').subscribe(res => {\n      this.productdatadic2 = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdatadic2);\n    });\n    this.http.get(this.mainurl + 'channel').subscribe(res => {\n      this.getchannel = res;\n     // console.log(\"all data\", this.getchannel);\n    });\n  }\n\nkey1 = 'description1';\nkey2 = 'description2';\n\n  getdatasearch(){}\n\n\n\n  tagresponce : any ;\n\n\n  successAlertNotification(tag){\n\n    // Swal.fire( 'new request came',dataget)\n    Swal.fire({\n      title: 'New Request Received' +tag,\n      text: tag,\n      icon: 'info',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, Acknowledge it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.router.navigate(['/storemng/main']);\n\n      }\n    })\n  }\n  onRegister() {\n     // console.log('Form Value', this.form.value);\n\nif(this.form.valid){\n      this.http.post(this.mainurl + 'empothrequest', this.form.value).subscribe(\n        (val) => {\n           // console.log(\"POST call successful value returned in body\",val);\n          this.tagresponce =val\n                        //  alert(this.tagresponce.message);\n                        Swal.fire({\n                          title: this.tagresponce.message,\n                          text: '',\n                          icon: 'info',\n                          showCancelButton: true,\n                          confirmButtonColor: '#3085d6',\n                          cancelButtonColor: '#d33',\n                          confirmButtonText: 'Yes, Acknowledge it!'\n                        }).then((result) => {\n                          if (result.isConfirmed) {\n                            this.router.navigate(['/empboard/reqs']);\n\n                          }\n                        })\n\n\n        },\n\n        response => {\n\n\n\n\n        },\n        () => {\n           // console.log(\"The POST observable is now completed.\");\n        });\n      this.data = [...this.data];\n\n\n\n      //// console.log(this.data);\n      this.form.reset();\n      this.closeAddModal.nativeElement.click();\n      this.showNotification(\n        'bg-green',\n        'Add Record Successfully',\n        'bottom',\n        'right'\n      );\n      }\n      else {\n        this.showNotification(\n          'bg-green',\n          'Please fill all the required fields',\n          'bottom',\n          'right'\n        );\n      }\n  }\n  showNotification(arg0: string, arg1: string, arg2: string, arg3: string) {\n    throw new Error('Method not implemented.');\n  }\n\nitemcodefroms ;\n\n  selectEvent(item) {\n    if(item){\n   // console.log(item.id);\n    this.itemDetails(item.id);\n this.itemcodefroms =item.id\nconsole.log('this is code',this.itemcodefroms);\n    }\n    // do something with selected item\n  }\n\n  onChangeSearch(val: string) {\n    // fetch remote data from here\n    // And reassign the 'data' which is binded to 'data' property.\n  }\n\n  onFocused(e){\n    if(e){\n   // console.log('this is selected',e.id);\n    this.itemDetails(e.id);\n    this.itemcodefroms =e.id\n   // console.log('this is code',this.itemcodefroms);\n    }\n  }\n  keyword = 'name';\n\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}\n","<!-- <section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"example-full-width\" class=\"ng-autocomplete\">\n      <ng-autocomplete\n        [data]=\"productdataname\"\n        [searchKeyword]=\"keyword\"\n        (selected)='selectEvent($event)'\n        (inputChanged)='onChangeSearch($event)'\n        (inputFocused)='onFocused($event)'\n        [itemTemplate]=\"itemTemplate\"\n        [notFoundTemplate]=\"notFoundTemplate\">\n      </ng-autocomplete>\n\n      <ng-template #itemTemplate let-item>\n      <a [innerHTML]=\"item.name\"></a>\n      </ng-template>\n\n      <ng-template #notFoundTemplate let-notFound>\n      <div [innerHTML]=\"notFound\"></div>\n      </ng-template>\n      </div>\n  </div>\n</section> -->\n\n\n<section class=\"content\">\n  <div class=\"container-fluid\">\n    <!-- Basic Validation -->\n    <div class=\"row clearfix\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>\n              <strong>Request</strong> Form</h2>\n            <ul class=\"header-dropdown m-r--5\">\n              <li class=\"dropdown\">\n                <a href=\"#\" onClick=\"return false;\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n                  aria-expanded=\"false\">\n                  <i class=\"material-icons\">more_vert</i>\n                </a>\n\n              </li>\n            </ul>\n          </div>\n          <div class=\"body\">\n            <form class=\"register-form m-4\" [formGroup]=\"form\" (ngSubmit)=\"onRegister()\">\n              <div class=\"row\">\n\n              <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                <div class=\"example-full-width\" class=\"ng-autocomplete\">\n                  <ng-autocomplete\n                    [data]=\"productdataname\"\n                    placeHolder=\"Enter the Item Name\"\n                    [searchKeyword]=\"keyword\"\n                    (selected)='selectEvent($event)'\n                    (inputChanged)='onChangeSearch($event)'\n                    (inputFocused)='onFocused($event)'\n                    [itemTemplate]=\"itemTemplate\"\n                    [notFoundTemplate]=\"notFoundTemplate\">\n                  </ng-autocomplete>\n\n                  <ng-template #itemTemplate let-item>\n                  <a [innerHTML]=\"item.name\"></a>\n                  </ng-template>\n\n                  <ng-template #notFoundTemplate let-notFound>\n                  <div [innerHTML]=\"notFound\"></div>\n                  </ng-template>\n                  </div>\n\n\n            </div>\n            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n              <div class=\"example-full-width\" class=\"ng-autocomplete\">\n                <ng-autocomplete\n                  [data]=\"productdatadic1\"\n                  [searchKeyword]=\"key1\"\n                  placeHolder=\"Enter the Item Description 1\"\n                  (selected)='selectEvent($event)'\n                  (inputChanged)='onChangeSearch($event)'\n                  (inputFocused)='onFocused($event)'\n                  [itemTemplate]=\"itemTemplates\"\n                  [notFoundTemplate]=\"notFoundTemplates\">\n                </ng-autocomplete>\n\n                <ng-template #itemTemplates let-item>\n                <a [innerHTML]=\"item.description1\"></a>\n                </ng-template>\n\n                <ng-template #notFoundTemplates let-notFound>\n                <div [innerHTML]=\"notFound\"></div>\n                </ng-template>\n                </div>\n\n\n          </div>\n          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n            <div class=\"example-full-width\" class=\"ng-autocomplete\">\n              <ng-autocomplete\n                [data]=\"productdatadic2\"\n                placeHolder=\"Enter the item Description 2\"\n                [searchKeyword]=\"key2\"\n                (selected)='selectEvent($event)'\n                (inputChanged)='onChangeSearch($event)'\n                (inputFocused)='onFocused($event)'\n                [itemTemplate]=\"itemTemplates2\"\n                [notFoundTemplate]=\"notFoundTemplates2\">\n              </ng-autocomplete>\n\n              <ng-template #itemTemplates2 let-item>\n              <a [innerHTML]=\"item.description2\"></a>\n              </ng-template>\n\n              <ng-template #notFoundTemplates2 let-notFound>\n              <div [innerHTML]=\"notFound\"></div>\n              </ng-template>\n              </div>\n\n\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\" >\n          <div class=\"example-full-width\" class=\"ng-autocomplete\">\n            <ng-autocomplete\n              [data]=\"productdatacode\"\n              placeHolder=\"Enter the Item Code\"\n              [searchKeyword]=\"keycode\"\n              (selected)='selectEvent($event)'\n              (inputChanged)='onChangeSearch($event)'\n              (inputFocused)='onFocused($event)'\n              [itemTemplate]=\"itemTemplatescode\"\n              [notFoundTemplate]=\"notFoundTemplatescode\">\n            </ng-autocomplete>\n\n            <ng-template #itemTemplatescode let-item>\n            <a [innerHTML]=\"item.productcode\"></a>\n            </ng-template>\n\n            <ng-template #notFoundTemplatescode let-notFound>\n            <div [innerHTML]=\"notFound\"></div>\n            </ng-template>\n            </div>\n\n\n      </div> -->\n          <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n            <div class=\"example-full-width\" class=\"ng-autocomplete\">\n              <ng-autocomplete\n                [data]=\"productdatadic2\"\n                [searchKeyword]=\"key2\"\n                (selected)='selectEvent($event)'\n                (inputChanged)='onChangeSearch($event)'\n                (inputFocused)='onFocused($event)'\n                [itemTemplate]=\"itemTemplate\"\n                [notFoundTemplate]=\"notFoundTemplate\">\n              </ng-autocomplete>\n\n              <ng-template #itemTemplate let-item>\n              <a [innerHTML]=\"item.description1\"></a>\n              </ng-template>\n\n              <ng-template #notFoundTemplate let-notFound>\n              <div [innerHTML]=\"notFound\"></div>\n              </ng-template>\n              </div>\n\n\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-full-width\" class=\"ng-autocomplete\">\n            <ng-autocomplete\n              [data]=\"productdataname\"\n              [searchKeyword]=\"keyword\"\n              (selected)='selectEvent($event)'\n              (inputChanged)='onChangeSearch($event)'\n              (inputFocused)='onFocused($event)'\n              [itemTemplate]=\"itemTemplate\"\n              [notFoundTemplate]=\"notFoundTemplate\">\n            </ng-autocomplete>\n\n            <ng-template #itemTemplate let-item>\n            <a [innerHTML]=\"item.name\"></a>\n            </ng-template>\n\n            <ng-template #notFoundTemplate let-notFound>\n            <div [innerHTML]=\"notFound\"></div>\n            </ng-template>\n            </div>\n\n\n      </div> -->\n\n\n\n      </div>\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Emp Name</mat-label>\n\n                    <input matInput  formControlName=\"empname\"   [(ngModel)]=\"empdata.empname\" value = \"{{empdata.empname}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Date</mat-label>\n\n                    <input matInput  formControlName=\"date\"   [(ngModel)]=\"jstoday\" value = \"{{jstoday}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Channel</mat-label>\n\n                    <mat-select formControlName=\"channel\"   >\n                      <mat-option *ngFor=\"let option of getchannel\"   [(ngModel)]=\"option.id\"  value=\"{{option.id}}\">{{ option.name }}</mat-option>\n                    </mat-select>\n                    <mat-icon matSuffix>star</mat-icon>\n                    <mat-error *ngIf=\"form.get('channel').hasError('required')\">\n                      Channel input is Required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Department</mat-label>\n\n                    <input matInput    [(ngModel)]=\"empdata.dept\" value = \"{{empdata.dept}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Machine</mat-label>\n\n                    <input matInput placeholder =\"remarks\" formControlName=\"remarks\" >\n\n\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Code</mat-label>\n\n                    <!-- <input matInput placeholder =\"itemcode\"    [value]=\"itemsdata.productcode\" [readonly]=\"true\"> -->\n                    <input matInput  formControlName=\"itemcode\"   [(ngModel)]=\"itemsdata.productcode\" value = \"{{itemsdata.productcode}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n\n                <!-- <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Code</mat-label>\n\n                    <mat-select formControlName=\"itemcode\" (selectionChange)=\"itemDetails($event.value)\" >\n                      <mat-option *ngFor=\"let option of productdata\"  [(ngModel)]=\"option.id  \" [value]=\"option.id\">{{ option.productcode }}</mat-option>\n                    </mat-select>\n\n\n                  </mat-form-field>\n                </div> -->\n\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Name</mat-label>\n\n                    <input matInput placeholder =\"Item Name\"   [value]=\"itemsdata.name\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Category</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"  formControlName=\"category\" [value]=\"itemsdata.category\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Description 1</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.description1\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n\n              </div>\n              <div class=\"row\">\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Description 2</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.description2\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>specdrawing</mat-label>\n\n                    <input matInput placeholder =\"specdrawing\" formControlName=\"specdrawing\"   >\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Unit Cost</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.purchasecost\"  [readonly]=\"true\" >\n\n\n                  </mat-form-field>\n                </div>\n\n              </div>\n              <div class=\"row\">\n\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\"  (change)=\"onChangeEvent($event)\">\n                    <mat-label>Quantity</mat-label>\n\n                    <input matInput placeholder =\"Qunatity\" formControlName=\"quantity\"  type=\"number\"  >\n                    <mat-icon matSuffix>star</mat-icon>\n                    <mat-error *ngIf=\"form.get('quantity').hasError('required')\">\n                      Quantity name is Number\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Total Price</mat-label>\n                    <input matInput placeholder =\"totalprice\" [(ngModel)]=\"totalcost\" formControlName=\"totalprice\" [value]=\"totalcost\" [readonly]=\"true\" >\n\n\n\n                  </mat-form-field>\n                </div>\n\n\n              </div>\n<div class=\"row\">\n  <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n      <mat-label>Other Description</mat-label>\n      <textarea matInput placeholder =\"otherdescription\" formControlName=\"otherdescription\" style=\"height:60px\"></textarea>\n\n      <mat-icon matSuffix>star</mat-icon>\n      <mat-error *ngIf=\"form.get('channel').hasError('required')\">\n        Other Description input is Required\n      </mat-error>\n    </mat-form-field>\n  </div>\n\n</div>\n\n\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                  <button class=\"mr-3\" mat-raised-button color=\"primary\">Submit</button>\n                  <button type=\"button\" (click)=\" thisformis()\" mat-button>Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- #END# Basic Validation -->\n  </div>\n</section>\n","import { ChartjsComponent } from './../charts/chartjs/chartjs.component';\nimport { empboardRoutingModule } from './empboard.routing.module';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserrequestComponent } from './userrequest/userrequest.component';\nimport { UserstatusComponent } from './userstatus/userstatus.component';\nimport { UsersdashboardComponent } from './usersdashboard/usersdashboard.component';\nimport { FullCalendarModule } from '@fullcalendar/angular';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { NgxEchartsModule } from 'ngx-echarts';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\nimport { ChartsModule as chartjsModule } from 'ng2-charts';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport {MatSelectInfiniteScrollModule} from 'ng-mat-select-infinite-scroll';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\nimport { ArchwizardModule } from 'angular-archwizard';\nimport { ColorPickerModule } from 'ngx-color-picker';\nimport { CustomFormsModule } from 'ngx-custom-validators';\nimport { DropzoneModule } from 'ngx-dropzone-wrapper';\nimport { NgxMaskModule } from 'ngx-mask';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { FormsRoutingModule } from '../forms/forms-routing.module';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\nimport { OthreqComponent } from './othreq/othreq.component';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n@NgModule({\n  declarations: [UserrequestComponent, UserstatusComponent, UsersdashboardComponent,OthreqComponent],\n  imports: [\n    CommonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    empboardRoutingModule,\n    NgxMatSelectSearchModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatSelectInfiniteScrollModule,\n    chartjsModule,\n    NgxEchartsModule,\n    FullCalendarModule,\n    NgApexchartsModule,\n    PerfectScrollbarModule,\n    FormsRoutingModule,\n    FormsModule,\n    ArchwizardModule,\n    DropzoneModule,\n    ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' }),\n    CKEditorModule,\n    CustomFormsModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    AutocompleteLibModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    NgxMaskModule,\n    ColorPickerModule,\n    MaterialFileInputModule,\n    NgxDatatableModule,\n  ]\n})\nexport class EmpboardModule { }\n","import { EventEmitter, Directive, NgZone, Input, Output, NgModule } from '@angular/core';\nimport { SELECT_ITEM_HEIGHT_EM, MatSelect, MatSelectModule } from '@angular/material/select';\nimport { takeUntil, debounceTime, tap } from 'rxjs/operators';\nimport { Subject, fromEvent } from 'rxjs';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/select';\nclass MatSelectInfiniteScrollDirective {\n    constructor(matSelect, ngZone) {\n        this.matSelect = matSelect;\n        this.ngZone = ngZone;\n        this.threshold = '15%';\n        this.debounceTime = 150;\n        this.infiniteScroll = new EventEmitter();\n        this.thrPx = 0;\n        this.thrPc = 0;\n        this.singleOptionHeight = SELECT_ITEM_HEIGHT_EM;\n        this.destroyed$ = new Subject();\n    }\n    ngOnInit() {\n        this.evaluateThreshold();\n    }\n    ngAfterViewInit() {\n        this.matSelect.openedChange.pipe(takeUntil(this.destroyed$)).subscribe((opened) => {\n            if (opened) {\n                this.panel = this.matSelect.panel.nativeElement;\n                this.singleOptionHeight = this.getSelectItemHeightPx();\n                this.registerScrollListener();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.destroyed$.next(true);\n        this.destroyed$.complete();\n    }\n    evaluateThreshold() {\n        if (this.threshold.lastIndexOf('%') > -1) {\n            this.thrPx = 0;\n            this.thrPc = (parseFloat(this.threshold) / 100);\n        }\n        else {\n            this.thrPx = parseFloat(this.threshold);\n            this.thrPc = 0;\n        }\n    }\n    registerScrollListener() {\n        fromEvent(this.panel, 'scroll').pipe(takeUntil(this.destroyed$), debounceTime(this.debounceTime), tap((event) => {\n            this.handleScrollEvent(event);\n        })).subscribe();\n    }\n    handleScrollEvent(event) {\n        this.ngZone.runOutsideAngular(() => {\n            if (this.complete) {\n                return;\n            }\n            const countOfRenderedOptions = this.matSelect.options.length;\n            const infiniteScrollDistance = this.singleOptionHeight * countOfRenderedOptions;\n            const threshold = this.thrPc !== 0 ? (infiniteScrollDistance * this.thrPc) : this.thrPx;\n            const scrolledDistance = this.panel.clientHeight + event.target.scrollTop;\n            if ((scrolledDistance + threshold) >= infiniteScrollDistance) {\n                this.ngZone.run(() => this.infiniteScroll.emit());\n            }\n        });\n    }\n    getSelectItemHeightPx() {\n        return parseFloat(getComputedStyle(this.panel).fontSize) * SELECT_ITEM_HEIGHT_EM;\n    }\n}\nMatSelectInfiniteScrollDirective.ɵfac = function MatSelectInfiniteScrollDirective_Factory(t) { return new (t || MatSelectInfiniteScrollDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.MatSelect), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nMatSelectInfiniteScrollDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatSelectInfiniteScrollDirective, selectors: [[\"\", \"msInfiniteScroll\", \"\"]], inputs: { threshold: \"threshold\", debounceTime: \"debounceTime\", complete: \"complete\" }, outputs: { infiniteScroll: \"infiniteScroll\" } });\nMatSelectInfiniteScrollDirective.ctorParameters = () => [\n    { type: MatSelect },\n    { type: NgZone }\n];\nMatSelectInfiniteScrollDirective.propDecorators = {\n    threshold: [{ type: Input }],\n    debounceTime: [{ type: Input }],\n    complete: [{ type: Input }],\n    infiniteScroll: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectInfiniteScrollDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[msInfiniteScroll]'\n            }]\n    }], function () { return [{ type: ɵngcc1.MatSelect }, { type: ɵngcc0.NgZone }]; }, { threshold: [{\n            type: Input\n        }], debounceTime: [{\n            type: Input\n        }], infiniteScroll: [{\n            type: Output\n        }], complete: [{\n            type: Input\n        }] }); })();\n\nclass MatSelectInfiniteScrollModule {\n}\nMatSelectInfiniteScrollModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSelectInfiniteScrollModule });\nMatSelectInfiniteScrollModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSelectInfiniteScrollModule_Factory(t) { return new (t || MatSelectInfiniteScrollModule)(); }, imports: [[\n            MatSelectModule\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSelectInfiniteScrollModule, { declarations: function () { return [MatSelectInfiniteScrollDirective]; }, imports: function () { return [MatSelectModule]; }, exports: function () { return [MatSelectInfiniteScrollDirective]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectInfiniteScrollModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [MatSelectInfiniteScrollDirective],\n                imports: [\n                    MatSelectModule\n                ],\n                exports: [MatSelectInfiniteScrollDirective]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ng-mat-select-infinite-scroll\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatSelectInfiniteScrollDirective, MatSelectInfiniteScrollModule };\n\n//# sourceMappingURL=ng-mat-select-infinite-scroll.js.map","import { Component, OnInit ,ViewChild} from '@angular/core';\nimport { FullCalendarComponent } from '@fullcalendar/angular';\nimport { EventInput } from '@fullcalendar/core';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport * as XLSX from 'xlsx';\nimport { DynamicScriptLoaderService } from './../../services/dynamic-script-loader.service';\nimport {\n  ChartComponent,\n  ApexAxisChartSeries,\n  ApexChart,\n  ApexXAxis,\n  ApexDataLabels,\n  ApexStroke,\n  ApexMarkers,\n  ApexYAxis,\n  ApexGrid,\n  ApexTitleSubtitle,\n  ApexPlotOptions,\n  ApexFill,\n  ApexLegend\n} from 'ng-apexcharts';\nimport { Rgba } from 'ngx-color-picker';\nimport { HttpClient } from '@angular/common/http';\n\ndeclare var $: any;\ndeclare var Chart: any;\ndeclare var ApexCharts: any;\n\nvar d = new Date(),\n  date = d.getDate(),\n  month = d.getMonth(),\n  year = d.getFullYear();\n// var myFiles = [];\n\nexport type ChartOptions = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  xaxis: ApexXAxis;\n  stroke: ApexStroke;\n  dataLabels: ApexDataLabels;\n  markers: ApexMarkers;\n  colors: string[];\n  yaxis: ApexYAxis;\n  grid: ApexGrid;\n  legend: ApexLegend;\n  title: ApexTitleSubtitle;\n};\n\nexport type ChartOptions2 = {\n  series: ApexAxisChartSeries;\n  chart: ApexChart;\n  dataLabels: ApexDataLabels;\n  plotOptions: ApexPlotOptions;\n};\n\n@Component({\n  selector: 'app-usersdashboard',\n  templateUrl: './usersdashboard.component.html',\n  styleUrls: ['./usersdashboard.component.sass']\n})\n\n\n  export class UsersdashboardComponent implements OnInit {\n\n\n    totalpricehigh : any = {};\n    totalpricelow: any = {};\n    totalordershigh : any = {};\n    totalorderslow: any = {};\n\n  totalcount : any = {};\n  id;\n  penddingcount: any = {};\n  Rejected: any = {};\n  completed: any = {};\n  myFiles = [];\n\n\n  constructor( private http: HttpClient) { }\n  getDatatotalcount() {\n    this.http.get('http://localhost:2020/emprequestrount/'+ this.id).subscribe(res => {\n      this.totalcount = res;\n      console.log(this.totalcount.count);\n\n    });\n  }\n  getDatapenddingcount() {\n\n    this.http.get( 'http://localhost:2020/emprequestrountpendding/'+ this.id).subscribe(res => {\n      this.penddingcount = res;\n\n    });\n  }\n  getDataRejectedcount() {\n\n    this.http.get( 'http://localhost:2020/emprequestrountRejected/'+ this.id).subscribe(res => {\n      this.Rejected = res;\n    });\n  }\n  getDatacompletedcount() {\n\n    this.http.get( 'http://localhost:2020/emprequestrountcompleted/'+ this.id).subscribe(res => {\n      this.completed = res;\n    });\n  }\n  // area chart start\n\n  // barChart\n\n  // end bar chart\n  toprequestrountcompleted() {\n\n    this.http.get( 'http://localhost:2020/toprequestrountcompleted' ).subscribe(res => {\n      this.totalpricehigh = res;\n    });\n  }\n  lowrequestrountcompleted() {\n\n    this.http.get( 'http://localhost:2020/lowrequestrountcompleted' ).subscribe(res => {\n      this.totalpricelow = res;\n    });\n  }\n  topordersrequestrount() {\n\n    this.http.get( 'http://localhost:2020/topordersrequestrount' ).subscribe(res => {\n      this.totalordershigh = res;\n    });\n  }\n  lowordersrequestrount() {\n\n    this.http.get( 'http://localhost:2020/lowordersrequestrount' ).subscribe(res => {\n      this.totalorderslow = res;\n    });\n  }\n\n  onFileChange(event: any) {\n\n    for (var i = 0; i < event.target.files.length; i++) {\n      this.myFiles.push(event.target.files[i]);\n    }\n    /* wire up file reader */\n    const frmData = new FormData();\n\n    // tslint:disable-next-line: prefer-for-of\n    for (var i = 0; i < this.myFiles.length; i++) {\n      frmData.append('fileUpload', this.myFiles[i]);\n    }\n\n\n    const target: DataTransfer = (event.target) as DataTransfer;\n    if (target.files.length !== 1) {\n      throw new Error('Cannot use multiple files');\n    }\n    const reader: FileReader = new FileReader();\n    reader.readAsBinaryString(target.files[0]);\n    reader.onload = (e: any) => {\n      /* create workbook */\n      const binarystr: string = e.target.result;\n      const wb: XLSX.WorkBook = XLSX.read(binarystr, { type: 'binary' });\n\n      /* selected the first sheet */\n      const wsname: string = wb.SheetNames[0];\n      const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n      /* save data */\n      const data = XLSX.utils.sheet_to_json(ws); // to get 2d array pass 2nd parameter as object {header: 1}\n      console.log('data length')\n      console.log((data.length));\n      // this.http.post('http://localhost:2020/fileupload', frmData).subscribe();\n\n      // tslint:disable-next-line: prefer-for-of\n      for (var i = 0; i < data.length; i++) {\n        var eachItems =\n                     {\n                       category: data[i]['Item Class'],\n                        productcode: data[i]['Item'],\n                        description2: data[i]['Extended description 2'],\n                        description1: data[i]['Extended description 1'],\n                        name: data[i]['Description'],\n                        purchasecost: data[i]['Std Cost'],\n                        // category: data[i]['Item_Class']\n                     };\n                     this.http.post('http://localhost:2020/uploadproduct', eachItems).subscribe();\n        // var eachItem =\n        //              {\n        //                  Whs: data[i]['Whs'],\n        //                  Item: data[i]['Item'],\n        //                  Extended_description_2: data[i]['Extended description 2'],\n        //                  Extended_description_1: data[i]['Extended description 1'],\n        //                  Description: data[i]['Description'],\n        //                  On_hand: data[i]['On-hand'],\n        //                  On_order: data[i]['On-order'],\n        //                  Std_Cost: data[i]['Std Cost'],\n        //                  Item_Class: data[i]['Item Class'],\n        //              };\n      // this.http.post('http://localhost:2020/fileupload', eachItem).subscribe();\n      }\n\n      console.log(data[0]); // Data will be logged in array format containing objects\n\n    };\n }\n\n  ngOnInit() {\n    this.id = localStorage.getItem('userid');\nthis.toprequestrountcompleted();\nthis.topordersrequestrount();\nthis.lowrequestrountcompleted();\nthis.lowordersrequestrount();\n    this.getDatapenddingcount();\n    this. getDatatotalcount();\n    this.getDataRejectedcount() ;\n    this.getDatacompletedcount();\n\n\n  }\n\n\n}\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <!-- Widgets -->\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-green order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h4 class=\"m-b-20\">Total Requests</h4>\r\n            <h2 class=\"text-right\"><i class=\"fas fa-cart-plus pull-left\"></i><span> {{totalcount.count }}</span></h2>\r\n            <p class=\"m-b-0\">1</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-purple order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h4 class=\"m-b-20\">Pending Requests</h4>\r\n            <h2 class=\"text-right\"><i class=\"fas fa-business-time pull-left\"></i><span>{{penddingcount.count}}</span></h2>\r\n            <p class=\"m-b-0\">1</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-orange order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h4 class=\"m-b-20\">Rejected Request</h4>\r\n            <h2 class=\"text-right\"><i class=\"fas fa-chart-line pull-left\"></i><span>{{Rejected.count}}</span></h2>\r\n            <p class=\"m-b-0\">2</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-lg-3 col-sm-6\">\r\n        <div class=\"info-box7 l-bg-cyan order-info-box7\">\r\n          <div class=\"info-box7-block\">\r\n            <h4 class=\"m-b-20\">Completed Requests</h4>\r\n            <h2 class=\"text-right\"><i class=\"fas fa-dollar-sign pull-left\"></i><span>{{completed.count }}</span></h2>\r\n            <p class=\"m-b-0\">2</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- #END# Widgets -->\r\n\r\n    <input id=\"my-file-selector\" type=\"file\" (change)=\"onFileChange($event)\" name=\"uploadExcel\">\r\n  </div>\r\n</section>\r\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ThemePalette } from '@angular/material/core';\nimport { combineLatest, merge, Observable, Subject } from 'rxjs';\nimport { startWith, map, mapTo, scan, takeUntil } from 'rxjs/operators';\nimport { User } from 'src/app/forms/advance-controls/advance-controls.component';\nimport { MyErrorStateMatcher } from 'src/app/forms/form-controls/form-controls.component';\nimport {formatDate } from '@angular/common';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\nimport { Router } from '@angular/router';\nimport { MatSelect } from '@angular/material/select';\nexport interface Bank {\n  id: string;\n  name: string;\n}\n@Component({\n  selector: 'app-userrequest',\n  templateUrl: './userrequest.component.html',\n  styleUrls: ['./userrequest.component.sass']\n})\n\nexport class UserrequestComponent implements OnInit {\n  register: FormGroup;\n  hide = true;\n  agree = false;\n  customForm: FormGroup;\n  empdata: any = {};\n  productdata: any = {};\n  getchannel: any = {};\n\n\n  @ViewChild('matSelectInfiniteScroll', { static: true } )\n  infiniteScrollSelect: MatSelect;\n\n  /** list with all available data, mocks some sort of backend data source */\n\n\n  // private mockBankList: Bank[];\n  private mockBankList: any =[];\n  // private mockBankList: Bank[] = Array.from({ length: 100000 }).map((_, i) => ({\n  //   id: String(i),\n  //   name: `Bank ${i}`\n  // }));\n\n\n  /** control for the selected bank */\n  bankCtrl: FormControl = new FormControl();\n\n  /** control for the search input value */\n  searchCtrl: FormControl = new FormControl();\n\n  /** list of data corresponding to the search input */\n  private filteredData$: Observable<Bank[]> = this.searchCtrl.valueChanges.pipe(\n    startWith(''),\n    map(searchKeyword => {\n      if (!searchKeyword) {\n        console.log(\"list\",typeof(this.mockBankList),this.mockBankList);\n\n        return this.mockBankList;\n\n      }\n      return this.mockBankList.filter((bank) =>\n        bank.name.toLowerCase().indexOf(searchKeyword.toLowerCase()) > -1\n      );\n    })\n  );\n\n  /** number of items added per batch */\n  batchSize = 20;\n  getNextBatch(){\n    this.incrementBatchOffset$.next();\n  }\n  private incrementBatchOffset$: Subject<void> = new Subject<void>();\n  private resetBatchOffset$: Subject<void> = new Subject<void>();\n\n  /** minimum offset needed for the batch to ensure the selected option is displayed */\n  private minimumBatchOffset$: Observable<number> = combineLatest([\n    this.filteredData$,\n    this.searchCtrl.valueChanges\n  ]).pipe(\n    map(([filteredData, searchValue]) => {\n      if (!this.searchCtrl.value && this.bankCtrl.value) {\n        const index = filteredData.findIndex(bank => bank.id === this.bankCtrl.value);\n        this.itemDetails(this.bankCtrl.value);\n        return index + this.batchSize;\n      } else {\n        return 0;\n      }\n    }),\n    startWith(0)\n  );\n\n  /** length of the visible data / start of the next batch */\n  private batchOffset$ = combineLatest([\n    merge(\n      this.incrementBatchOffset$.pipe(mapTo(true)),\n      this.resetBatchOffset$.pipe(mapTo(false))\n    ),\n    this.minimumBatchOffset$\n  ]).pipe(\n    scan((batchOffset, [doIncrement, minimumOffset]) => {\n      if (doIncrement) {\n        return Math.max(batchOffset + this.batchSize, minimumOffset + this.batchSize);\n      } else {\n        return Math.max(minimumOffset, this.batchSize);\n      }\n    }, this.batchSize),\n  );\n\n\n  /** list of data, filtered by the search keyword, limited to the length accumulated by infinity scrolling */\n  filteredBatchedData$: Observable<Bank[]> = combineLatest([\n    this.filteredData$,\n    this.batchOffset$\n  ]).pipe(\n    map(([filteredData, batchOffset]) => filteredData.slice(0, batchOffset))\n  );\n\n  private destroy$: Subject<void> = new Subject<void>();\n\n  numberRegEx = /\\-?\\d*\\.?\\d{1,2}/;\n  form: FormGroup = new FormGroup({\n    empname : new FormControl(''),\n    issuedby: new FormControl(''),\n    channel: new FormControl('',Validators.required),\n    date : new FormControl(''),\n    itemcode : new FormControl(''),\n    otherdescription :  new FormControl(''),\n    quantity : new FormControl('',Validators.required),\n    remarks :  new FormControl(''),\n    specdrawing : new FormControl(''),\n    totalprice: new FormControl(''),\n\n\n  });\n\n  itemsdata: any = {};\n  totalcost: number;\n  today= new Date();\n  jstoday;\n  data: any[];\n  closeAddModal: any;\n  errormsg = 'Input should be Number'\n  constructor(private fb: FormBuilder , private http: HttpClient , private router : Router ) {\n\n      this.form = this.fb.group({\n        empname : [''],\n        issuedby: [''],\n        channel: ['',[Validators.required]],\n        date : [''],\n        itemcode : ['', Validators.pattern(this.numberRegEx)],\n        otherdescription : [''],\n        quantity : ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n        remarks : [''],\n        specdrawing : [''],\n        totalprice: ['',[Validators.required, Validators.pattern(\"^[0-9]*$\")]],\n\n      });\n      this.jstoday = formatDate(this.today, 'dd-MM-yyyy hh:mm:ss a', 'en-US', '+0530');\n  }\n  searchMoviesCtrl = new FormControl();\n  filteredMovies: any;\n  isLoading = false;\n  errorMsg: string;\n  onChangeEvent(event: any){\n    this.totalcost = event.target.value * this.itemsdata.purchasecost;\n   //// console.log(this.itemsdata.purchasecost);\n   //// console.log(this.totalcost);\n\n  }\n\n\n\n  itemDetails(id){\n    if (String(id) != 'undefined'){\n      this.http.get(this.mainurl + 'product/'+id).subscribe(res => {\n        this.itemsdata = res;\n       //// console.log(\"all data for the request\", this.itemsdata);\n      });\n    }\n\n\n\n  }\n  thisformis(){\n\n    this.form = this.fb.group({\n      channel: [''],\n\n\n      otherdescription : [''],\n      quantity : [''],\n      remarks : [''],\n      specdrawing : [''],\n      totalprice: [''],\n\n    });\n  }\n  productdataname : any ={};\n  productdatadic1 : any ={};\n  productdatadic2 : any ={};\n  productdatacode : any ={};\nkeycode = 'name';\nuserid;\nmainurl;\nproductname: any ={};\nngOnDestroy() {\n  this.destroy$.next();\n}\n\n/**\n * Load the next batch\n */\n\n\n\n  ngOnInit(): void {\n\n    this.infiniteScrollSelect.openedChange.pipe(takeUntil(this.destroy$)).subscribe(opened => {\n      // after opening, reset the batch offset\n      if (opened) {\n        this.resetBatchOffset$.next();\n      }\n    });\n    this.userid = localStorage.getItem('userid');\n    this.mainurl = localStorage.getItem('mainurl');\n\n    this.http.get(this.mainurl + 'productcode').subscribe(res => {\n      this.productdatacode = res;\n\n      // this.updateList(this.productdatacode);\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdatacode);\n    });\n    this.http.get(this.mainurl + 'emp/'+this.userid).subscribe(res => {\n      this.empdata = res;\n     // console.log(\"all data\", this.empdata);\n    });\n    // this.http.get(this.mainurl + 'product').subscribe(res => {\n    //   this.productdata = res;\n    //  // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n    //  // console.log(\"all data\", this.productdata);\n    // });\n    this.http.get(this.mainurl + 'productname').subscribe(res => {\n      this.productdataname = res;\n      this.mockBankList =   res;\n\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdataname);\n    //  localStorage.setItem('productdataname', JSON.stringify(this.productdataname));\n    });\n\n   // this.productdataname =  JSON.parse(localStorage.getItem('productdataname'));\n    this.http.get(this.mainurl + 'productdis1').subscribe(res => {\n      this.productdatadic1 = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdatadic1);\n    });\n    this.http.get(this.mainurl + 'productdis2').subscribe(res => {\n      this.productdatadic2 = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n     // console.log(\"all names\", this.productdatadic2);\n    });\n    this.http.get(this.mainurl + 'channel').subscribe(res => {\n      this.getchannel = res;\n     // console.log(\"all data\", this.getchannel);\n    });\n  }\n\nkey1 = 'description1';\nkey2 = 'description2';\n\n  getdatasearch(){\n\n  }\n  // successAlertNotification(tag){\n  //   Swal.fire('Hi', 'Congrats! operation successfull', tag)\n  // }\n\n  successAlertNotification(tag){\n\n    // Swal.fire( 'new request came',dataget)\n    Swal.fire({\n      title: 'New Request Received' +tag,\n      text: tag,\n      icon: 'info',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, Acknowledge it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.router.navigate(['/storemng/main']);\n\n      }\n    })\n  }\n\n  tagresponce : any ;\n  onRegister() {\n     console.log('Form Value ************************', this.form.value);\n\nif(this.form.value != undefined   &&  this.form.value ){\n      this.http.post(this.mainurl + 'emprequest', this.form.value).subscribe(\n        (val) => {\n            //console.log(\"POST call successful value returned in body\",val);\n          this.tagresponce =val\n                        //  alert(this.tagresponce.message);\n\n                          // Swal.fire( this.tagresponce.message)\n                          Swal.fire({\n                            title: 'New Request Received' +this.tagresponce.message,\n                            text: '',\n                            icon: 'info',\n                            showCancelButton: true,\n                            confirmButtonColor: '#3085d6',\n                            cancelButtonColor: '#d33',\n                            confirmButtonText: 'Yes, Acknowledge it!'\n                          }).then((result) => {\n                            if (result.isConfirmed) {\n                              this.router.navigate(['/empboard/reqs']);\n\n                            }\n                          })\n\n        },\n\n        response => {\n\n\n\n\n        },\n        () => {\n            //console.log(\"The POST observable is now completed.\");\n        });\n      this.data = [...this.data];\n\n\n\n      //// console.log(this.data);\n      this.form.reset();\n      this.closeAddModal.nativeElement.click();\n      this.showNotification(\n        'bg-green',\n        'Add Record Successfully',\n        'bottom',\n        'right'\n      );\n      }\n  }\n  showNotification(arg0: string, arg1: string, arg2: string, arg3: string) {\n    throw new Error('Method not implemented.');\n  }\n\nitemcodefroms ;\n\n  selectEvent(item) {\n    if(item){\n   // console.log(item.id);\n    this.itemDetails(item.id);\n this.itemcodefroms =item.id\nconsole.log('this is code',this.itemcodefroms);\n    }\n    // do something with selected item\n  }\n\n  onChangeSearch(val: string) {\n    // fetch remote data from here\n    // And reassign the 'data' which is binded to 'data' property.\n  }\n\n  onFocused(e){\n    if(e){\n   // console.log('this is selected',e.id);\n    this.itemDetails(e.id);\n    this.itemcodefroms =e.id\n   //// console.log('this is code',this.itemcodefroms);\n    }\n  }\n  keyword = 'name';\n\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}\n","<!-- <section class=\"content\">\n  <div class=\"container-fluid\">\n    <div class=\"example-full-width\" class=\"ng-autocomplete\">\n      <ng-autocomplete\n        [data]=\"productdataname\"\n        [searchKeyword]=\"keyword\"\n        (selected)='selectEvent($event)'\n        (inputChanged)='onChangeSearch($event)'\n        (inputFocused)='onFocused($event)'\n        [itemTemplate]=\"itemTemplate\"\n        [notFoundTemplate]=\"notFoundTemplate\">\n      </ng-autocomplete>\n\n      <ng-template #itemTemplate let-item>\n      <a [innerHTML]=\"item.name\"></a>\n      </ng-template>\n\n      <ng-template #notFoundTemplate let-notFound>\n      <div [innerHTML]=\"notFound\"></div>\n      </ng-template>\n      </div>\n  </div>\n</section> -->\n\n\n<section class=\"content\">\n  <div class=\"container-fluid\">\n    <!-- Basic Validation -->\n    <div class=\"row clearfix\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>\n              <strong>Request</strong> Form</h2>\n            <ul class=\"header-dropdown m-r--5\">\n              <li class=\"dropdown\">\n                <a href=\"#\" onClick=\"return false;\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n                  aria-expanded=\"false\">\n                  <i class=\"material-icons\">more_vert</i>\n                </a>\n\n              </li>\n            </ul>\n          </div>\n          <div class=\"body\">\n            <form class=\"register-form m-4\" [formGroup]=\"form\" (ngSubmit)=\"onRegister()\">\n              <div class=\"row\">\n\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\" >\n                <!-- <p>\n                  Selected id: {{bankCtrl?.value}}\n                </p> -->\n\n                <mat-form-field style=\"    width: 600px;\">\n                  <mat-select #matSelectInfiniteScroll\n                              msInfiniteScroll\n                              (infiniteScroll)=\"getNextBatch()\"\n                              [formControl]=\"bankCtrl\"\n                              placeholder=\"Select Item Name\">\n                    <mat-option>\n                      <!--disableScrollToActiveOnOptionsChanged should be set to true-->\n                      <ngx-mat-select-search\n                        [formControl]=\"searchCtrl\"\n                        placeholderLabel=\"search\"\n                        [disableScrollToActiveOnOptionsChanged]=\"true\"\n                        noEntriesFoundLabel=\"No entry matches\">\n                      </ngx-mat-select-search>\n                    </mat-option>\n                    <mat-option *ngFor=\"let bank of filteredBatchedData$ | async\"\n                                [value]=\"bank.id\">\n                      {{bank.name}}\n                    </mat-option>\n                  </mat-select>\n                </mat-form-field>\n                </div>\n\n              <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                <div class=\"example-full-width\" class=\"ng-autocomplete\">\n                  <ng-autocomplete\n                    [data]=\"productdataname\"\n                    placeHolder=\"Enter the Item Name\"\n                    [searchKeyword]=\"keyword\"\n                    (selected)='selectEvent($event)'\n                    (inputChanged)='onChangeSearch($event)'\n                    (inputFocused)='onFocused($event)'\n                    [itemTemplate]=\"itemTemplate\"\n                    [notFoundTemplate]=\"notFoundTemplate\">\n                  </ng-autocomplete>\n\n                  <ng-template #itemTemplate let-item>\n                  <a [innerHTML]=\"item.name\"></a>\n                  </ng-template>\n\n                  <ng-template #notFoundTemplate let-notFound>\n                  <div [innerHTML]=\"notFound\"></div>\n                  </ng-template>\n                  </div>\n\n\n            </div> -->\n            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n              <div class=\"example-full-width\" class=\"ng-autocomplete\">\n                <ng-autocomplete\n                  [data]=\"productdatadic1\"\n                  [searchKeyword]=\"key1\"\n                  placeHolder=\"Enter the Item Description 1\"\n                  (selected)='selectEvent($event)'\n                  (inputChanged)='onChangeSearch($event)'\n                  (inputFocused)='onFocused($event)'\n                  [itemTemplate]=\"itemTemplates\"\n                  [notFoundTemplate]=\"notFoundTemplates\">\n                </ng-autocomplete>\n\n                <ng-template #itemTemplates let-item>\n                <a [innerHTML]=\"item.description1\"></a>\n                </ng-template>\n\n                <ng-template #notFoundTemplates let-notFound>\n                <div [innerHTML]=\"notFound\"></div>\n                </ng-template>\n                </div>\n\n\n          </div>\n          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n            <div class=\"example-full-width\" class=\"ng-autocomplete\">\n              <ng-autocomplete\n                [data]=\"productdatadic2\"\n                placeHolder=\"Enter the item Description 2\"\n                [searchKeyword]=\"key2\"\n                (selected)='selectEvent($event)'\n                (inputChanged)='onChangeSearch($event)'\n                (inputFocused)='onFocused($event)'\n                [itemTemplate]=\"itemTemplates2\"\n                [notFoundTemplate]=\"notFoundTemplates2\">\n              </ng-autocomplete>\n\n              <ng-template #itemTemplates2 let-item>\n              <a [innerHTML]=\"item.description2\"></a>\n              </ng-template>\n\n              <ng-template #notFoundTemplates2 let-notFound>\n              <div [innerHTML]=\"notFound\"></div>\n              </ng-template>\n              </div>\n\n\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\" >\n          <div class=\"example-full-width\" class=\"ng-autocomplete\">\n            <ng-autocomplete\n              [data]=\"productdatacode\"\n              placeHolder=\"Enter the Item Code\"\n              [searchKeyword]=\"keycode\"\n              (selected)='selectEvent($event)'\n              (inputChanged)='onChangeSearch($event)'\n              (inputFocused)='onFocused($event)'\n              [itemTemplate]=\"itemTemplatescode\"\n              [notFoundTemplate]=\"notFoundTemplatescode\">\n            </ng-autocomplete>\n\n            <ng-template #itemTemplatescode let-item>\n            <a [innerHTML]=\"item.name\"></a>\n            </ng-template>\n\n            <ng-template #notFoundTemplatescode let-notFound>\n            <div [innerHTML]=\"notFound\"></div>\n            </ng-template>\n            </div>\n\n\n      </div>\n          <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n            <div class=\"example-full-width\" class=\"ng-autocomplete\">\n              <ng-autocomplete\n                [data]=\"productdatadic2\"\n                [searchKeyword]=\"key2\"\n                (selected)='selectEvent($event)'\n                (inputChanged)='onChangeSearch($event)'\n                (inputFocused)='onFocused($event)'\n                [itemTemplate]=\"itemTemplate\"\n                [notFoundTemplate]=\"notFoundTemplate\">\n              </ng-autocomplete>\n\n              <ng-template #itemTemplate let-item>\n              <a [innerHTML]=\"item.description1\"></a>\n              </ng-template>\n\n              <ng-template #notFoundTemplate let-notFound>\n              <div [innerHTML]=\"notFound\"></div>\n              </ng-template>\n              </div>\n\n\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-full-width\" class=\"ng-autocomplete\">\n            <ng-autocomplete\n              [data]=\"productdataname\"\n              [searchKeyword]=\"keyword\"\n              (selected)='selectEvent($event)'\n              (inputChanged)='onChangeSearch($event)'\n              (inputFocused)='onFocused($event)'\n              [itemTemplate]=\"itemTemplate\"\n              [notFoundTemplate]=\"notFoundTemplate\">\n            </ng-autocomplete>\n\n            <ng-template #itemTemplate let-item>\n            <a [innerHTML]=\"item.name\"></a>\n            </ng-template>\n\n            <ng-template #notFoundTemplate let-notFound>\n            <div [innerHTML]=\"notFound\"></div>\n            </ng-template>\n            </div>\n\n\n      </div> -->\n\n\n\n      </div>\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Emp Name</mat-label>\n\n                    <input matInput  formControlName=\"empname\"   [(ngModel)]=\"empdata.empname\" value = \"{{empdata.empname}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Date</mat-label>\n\n                    <input matInput  formControlName=\"date\"   [(ngModel)]=\"jstoday\" value = \"{{jstoday}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Channel</mat-label>\n\n                    <mat-select formControlName=\"channel\"   >\n                      <mat-option *ngFor=\"let option of getchannel\"   [(ngModel)]=\"option.id\"  value=\"{{option.id}}\">{{ option.name }}</mat-option>\n                    </mat-select>\n                    <mat-icon matSuffix>star</mat-icon>\n                    <mat-error *ngIf=\"form.get('channel').hasError('required')\">\n                      Channel input is Required\n                    </mat-error>\n                  </mat-form-field>\n                </div>\n\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Department</mat-label>\n\n                    <input matInput    [(ngModel)]=\"empdata.dept\" value = \"{{empdata.dept}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Machine</mat-label>\n\n                    <input matInput placeholder =\"remarks\" formControlName=\"remarks\" >\n                    <!-- <mat-icon matSuffix>star</mat-icon> -->\n\n                  </mat-form-field>\n                </div>\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Code</mat-label>\n\n                    <!-- <input matInput placeholder =\"itemcode\"    [value]=\"itemsdata.productcode\" [readonly]=\"true\"> -->\n                    <input matInput  formControlName=\"itemcode\"   [(ngModel)]=\"itemsdata.productcode\" value = \"{{itemsdata.productcode}}\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n\n                <!-- <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Code</mat-label>\n\n                    <mat-select formControlName=\"itemcode\" (selectionChange)=\"itemDetails($event.value)\" >\n                      <mat-option *ngFor=\"let option of productdata\"  [(ngModel)]=\"option.id  \" [value]=\"option.id\">{{ option.productcode }}</mat-option>\n                    </mat-select>\n\n\n                  </mat-form-field>\n                </div> -->\n\n              </div>\n              <div class=\"row\">\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Name</mat-label>\n\n                    <input matInput placeholder =\"Item Name\"   [value]=\"itemsdata.name\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Item Category</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"  formControlName=\"category\" [value]=\"itemsdata.category\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Description 1</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.description1\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n\n              </div>\n              <div class=\"row\">\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Description 2</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.description2\" [readonly]=\"true\">\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Spec Drawing</mat-label>\n\n                    <input matInput placeholder =\"specdrawing\" formControlName=\"specdrawing\"   >\n                    <!-- <mat-icon matSuffix>star</mat-icon> -->\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Other Description</mat-label>\n                    <input matInput placeholder =\"otherdescription\" formControlName=\"otherdescription\" >\n\n                    <!-- <mat-icon matSuffix>star</mat-icon> -->\n\n                  </mat-form-field>\n                </div>\n\n              </div>\n              <div class=\"row\">\n\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Unit Cost</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.purchasecost\"  [readonly]=\"true\" >\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\"  (change)=\"onChangeEvent($event)\">\n                    <mat-label>Live Quantity</mat-label>\n\n                    <input matInput placeholder =\"Ex. John\"   [value]=\"itemsdata.livestock\"  [readonly]=\"true\" >\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\"  (change)=\"onChangeEvent($event)\">\n                    <mat-label>Quantity</mat-label>\n\n                    <input matInput placeholder =\"Qunatity\" formControlName=\"quantity\"  type=\"number\" >\n                    <mat-icon matSuffix>star</mat-icon>\n                    <mat-error *ngIf=\"form.get('quantity').hasError('required')\">\n                      Quantity Number input is Required\n                    </mat-error>\n\n\n                  </mat-form-field>\n                </div>\n                <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                    <mat-label>Total Price</mat-label>\n                    <input matInput placeholder =\"totalprice\" [(ngModel)]=\"totalcost\" formControlName=\"totalprice\" [value]=\"totalcost\" [readonly]=\"true\" >\n\n                    <mat-error *ngIf=\"form.get('totalprice').hasError('required')\">\n                      Total Cost Number input is Required\n                    </mat-error>\n\n                  </mat-form-field>\n                </div>\n\n\n              </div>\n\n\n\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                  <button class=\"mr-3\" mat-raised-button color=\"primary\">Submit</button>\n                  <button type=\"button\"  (click)=\"thisformis()\"mat-button>Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- #END# Basic Validation -->\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ColumnMode, DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-userstatus',\n  templateUrl: './userstatus.component.html',\n  styleUrls: ['./userstatus.component.sass']\n})\nexport class UserstatusComponent implements OnInit {\n\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  newselected : any = {};\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  empdatasss;\n  resondata ;\n  columns = [\n    { name: 'id' },\n    { name: 'acknowledge' },\n    { name: 'channel' },\n    { name: 'date' },\n    { name: 'empname' },\n    { name: 'issuedby' },\n    { name: 'itemcode' },\n    { name: 'itemname' },\n    { name: 'otherdescription' },\n    { name: 'otp' },\n    { name: 'quantity' },\n    { name: 'remark' },\n    { name: 'remarks' },\n    { name: 'specdrawing' },\n    { name: 'status' },\n    { name: 'totalprice' },\n    { name: 'rejectreason' },\n    { name: 'rack' },\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'acknowledge' },\n    { name: 'channel' },\n    { name: 'date' },\n    { name: 'empname' },\n    { name: 'issuedby' },\n    { name: 'itemcode' },\n    { name: 'itemname' },\n    { name: 'otherdescription' },\n    { name: 'otp' },\n    { name: 'quantity' },\n    { name: 'remark' },\n    { name: 'remarks' },\n    { name: 'specdrawing' },\n    { name: 'status' },\n    { name: 'totalprice' },\n    { name: 'rejectreason' },\n    { name: 'rack' },\n\n  ];\n  tb2data = [];\n  unitcostcost;\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  type: any;\n  name: any;\n  code: any;\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n      acknowledge: new FormControl(),\n      channel: new FormControl(),\n      date: new FormControl(),\n      empname: new FormControl(),\n      issuedby: new FormControl(),\n      itemcode: new FormControl(),\n      itemname: new FormControl(),\n      otherdescription: new FormControl(),\n      otp: new FormControl(),\n      quantity: new FormControl(),\n      remark: new FormControl(),\n      remarks: new FormControl(),\n      specdrawing: new FormControl(),\n      status: new FormControl(),\n      totalprice: new FormControl(),\n      safestock: new FormControl(),\n      rol: new FormControl(),\n      livestock: new FormControl(),\n      minstock: new FormControl(),\n      rejectreason : new FormControl(),\n      rack : new FormControl(),\n\n    });\n  }\n  username;\n  empdata;\n  totalcost\n  onChangeEvent(event: any){\n    this.totalcost = parseInt(this.unitcostcost) * parseInt(event.target.value) ;\n  console.log('total new price',this.totalcost);\n   console.log('new quantity',event.target.value);\n\n\n  }\n  mainurl;\n  userrole;\n  ngOnInit() {\n\n    this.mainurl = localStorage.getItem('mainurl');\n    this.username = localStorage.getItem('username');\n    this.userrole = localStorage.getItem('userrole');\n    console.log(this.username);\n    this.getdatareason();\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      id: [''],\n   acknowledge: [''],\n   channel: [''],\n   date: [''],\n   empname: [''],\n   issuedby: [''],\n   itemcode: [''],\n   itemname: [''],\n   otherdescription: [''],\n   otp: [''],\n   quantity: [''],\n   remark: [''],\n   remarks: [''],\n   specdrawing: [''],\n   status: [''],\n   totalprice: [''],\n   rejectreason : [''],\n   safestock: [''],\n   rol: [''],\n   livestock: [''],\n   minstock: [''],\n   rack: [''],\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n\n    if( this.userrole != 'Employee'){\n      req.open('GET', this.mainurl+'emprequestuser/'+ this.username);\n    }else{\n\n      req.open('GET', this.mainurl+'emprequestuser/'+ this.username);\n\n    }\n\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n      console.log('get json data',data);\n\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n   acknowledge: row.acknowledge,\n   channel: row.channel,\n   date: row.date,\n   empname: row.empname,\n   issuedby: row.issuedby,\n   itemcode: row.itemcode,\n   itemname: row.itemname,\n   otherdescription: row.otherdescription,\n   otp: row.otp,\n   quantity: row.quantity,\n   remark: row.remark,\n   remarks: row.remarks,\n   specdrawing: row.specdrawing,\n   status: row.status,\n   totalprice: row.totalprice,\n   rejectreason:row.rejectreason,\n   safestock:row.safestock,\n   rol: row.rol,\n   livestock: row.livestock,\n   minstock:row.minstock,\n   rack:row.rack,\n\n    });\n    this.selectedRowData = row;\n    this.newselected = row;\n    console.log('selected row' ,  row)\n\n\n   this.unitcostcost = row.totalprice / row.quantity ;\n   console.log('unit price' ,  this.unitcostcost)\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n      name: this.name,\n      code: this.code\n    });\n  }\n\n\n\n  deleteRow() {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, this.newselected.id);\n        this.http.delete(this.mainurl + 'emprequest/'+this.newselected.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted :)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.id = form.value.id;\n        value.acknowledge= form.value.acknowledge;\n        value.channel= form.value.channel;\n        value.date= form.value.date;\n        value.empname= form.value.empname;\n        value.issuedby= form.value.issuedby;\n        value.itemcode= form.value.itemcode;\n        value.itemname= form.value.itemname;\n        value.otherdescription= form.value.otherdescription;\n        value.otp= form.value.otp;\n        value.quantity= form.value.quantity;\n        value.remark= form.value.remark;\n        value.remarks= form.value.remarks;\n        value.specdrawing= form.value.specdrawing;\n        value.status= form.value.status;\n        value.totalprice= form.value.totalprice;\n        value.rejectreason= form.value.rejectreason;\n        value.safestock= form.value.safestock;\n        value.rol= form.value.rol;\n        value.livestock= form.value.livestock;\n        value.minstock= form.value.minstock;\n        value.rack= form.value.rack;\n\n      }\n      this.empdata = {\n\n        \"id\" : form.value.id,\n        \"acknowledge\" : form.value.acknowledge,\n        \"channel\" : form.value.channel,\n        \"date\" : form.value.date,\n        \"empname\" : form.value.empname,\n        \"issuedby\" : form.value.issuedby,\n        \"itemcode\" : form.value.itemcode,\n        \"itemname\" : form.value.itemname,\n        \"otherdescription\" : form.value.otherdescription,\n        \"otp\" : form.value.otp,\n        \"quantity\" : form.value.quantity,\n        \"remark\" : form.value.remark,\n        \"remarks\" : form.value.remarks,\n        \"specdrawing\" : form.value.specdrawing,\n        \"status\" : form.value.status,\n        \"totalprice\" : form.value.totalprice,\n        \"rejectreason\" : form.value.rejectreason,\n        \"safestock\" : form.value.safestock,\n        \"rol\" : form.value.rol,\n        \"livestock\" :form.value.livestock,\n         \"minstock\" : form.value.minstock,\n         \"rack\" : form.value.rack,\n\n\n\n\n      }\n      this.empdatasss = {\n\n        \"id\" : form.value.id,\n        \"acknowledge\" : form.value.acknowledge,\n        \"channel\" : form.value.channel,\n        \"date\" : form.value.date,\n        \"empname\" : form.value.empname,\n        \"issuedby\" : form.value.issuedby,\n        \"itemcode\" : form.value.itemcode,\n        \"itemname\" : form.value.itemname,\n        \"otherdescription\" : form.value.otherdescription,\n        \"otp\" : form.value.otp,\n        \"quantity\" : form.value.quantity,\n        \"remark\" : form.value.remark,\n        \"remarks\" : form.value.remarks,\n        \"specdrawing\" : form.value.specdrawing,\n        \"status\" : form.value.status,\n        \"totalprice\" : form.value.totalprice,\n        \"rejectreason\" : form.value.rejectreason,\n        \"safestock\" : form.value.safestock,\n       \"rol\" : form.value.rol,\n       \"livestock\" :form.value.livestock,\n        \"minstock\" : form.value.minstock,\n\n      }\n\n      // this.http.put(this.mainurl + 'emprequestakg/'+form.value.id, empdata).subscribe();\n\n      // this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.http.put(this.mainurl + 'emprequestakg/'+form.value.id, this.empdatasss).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n\n  getdatareason(){\n    this.http.get(this.mainurl + 'rejectcategory').subscribe(res => {\n      this.resondata = res;\n      console.log('this is reason ',  this.resondata );\n\n    });\n\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl + 'emprequest', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  acknowledge: String;\n  channel: String;\n  date: String;\n  empname: String;\n  issuedby: String;\n  itemcode: String;\n  itemname: String;\n  otherdescription: String;\n  otp: String;\n  quantity: String;\n  remark: String;\n  remarks: String;\n  specdrawing: String;\n  status: String;\n  totalprice: String;\n  rejectreason:String;\n}\n\n\n\n\n\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>View Requests</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                        <label for=\"search-input\"><i\n                                                class=\"material-icons search-icon\">search</i></label>\n                                        <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                            (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                    </li>\n                                  </ul>\n                                  <!-- <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul> -->\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Request ID</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"date\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Date</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"otherdescription\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Other Description</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                   <ngx-datatable-column name=\"itemcode\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Item Code</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"otp\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>OTP</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n\n                                  <!-- <ngx-datatable-column name=\"quantity\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Quantity</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <!-- <ngx-datatable-column name=\"totalprice\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Total Price</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n\n                                  <ngx-datatable-column name=\"status\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Status</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <!-- <ngx-datatable-column name=\"rejectreason\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Reject Reason</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n\n\n\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\"  sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.id}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Name</mat-label>\n                                                              <input matInput formControlName=\"empname\" required [readonly]=\"true\">\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('empname').hasError('required')\" >\n                                                                  empname required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Date</mat-label>\n                                                            <input matInput formControlName=\"date\" required  [readonly]=\"true\">\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('date').hasError('required')\">\n                                                                date required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n                                                  <div class=\"row\">\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Item Code</mat-label>\n                                                            <input matInput formControlName=\"itemcode\" required  [readonly]=\"true\">\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('itemcode').hasError('required')\">\n                                                                itemcode required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Item Name</mat-label>\n                                                          <input matInput formControlName=\"itemname\" required   [readonly]=\"true\" >\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('itemname').hasError('required')\">\n                                                              itemname required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n\n                                                </div>\n\n                                                <div class=\"row\">\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Quantity</mat-label>\n                                                          <input matInput formControlName=\"quantity\" required   [readonly]=\"true\"  (change)=\"onChangeEvent($event)\" >\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('quantity').hasError('required')\">\n                                                              quantity required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                      <mat-label>Status</mat-label>\n                                                      <input matInput formControlName=\"status\" required  [readonly]=\"true\">\n\n                                                      <mat-icon matSuffix>flag</mat-icon>\n                                                      <mat-error *ngIf=\"register.get('status').hasError('required')\">\n                                                        Status is required\n                                                      </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n\n\n\n                                              </div>\n\n                                              <div class=\"row\">\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Total Price</mat-label>\n                                                        <input matInput formControlName=\"totalprice\" required   [readonly]=\"true\" >\n\n\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                        <mat-error\n                                                            *ngIf=\"editForm.get('totalprice').hasError('required')\">\n                                                            totalprice required\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n\n\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>Machine</mat-label>\n                                                      <input matInput formControlName=\"remarks\" required   [readonly]=\"true\">\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                      <mat-error\n                                                          *ngIf=\"editForm.get('remarks').hasError('required')\">\n                                                          remarks required\n                                                      </mat-error>\n                                                  </mat-form-field>\n                                              </div>\n\n                                            </div>\n                                            <div class=\"row\">\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                  <mat-label>Reason</mat-label>\n                                                  <input matInput formControlName=\"rejectreason\" required   [readonly]=\"true\">\n                                                  <mat-icon matSuffix>flag</mat-icon>\n\n\n                                                  <mat-error *ngIf=\"register.get('rejectreason').hasError('required')\">\n                                                    rejectreason is required\n                                                  </mat-error>\n                                                </mat-form-field>\n                                              </div>\n\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\"\n                                                    appearance=\"outline\">\n                                                    <mat-label>Live Stock</mat-label>\n                                                    <input matInput formControlName=\"livestock\" required  [readonly]=\"true\">\n                                                    <mat-icon matSuffix>star</mat-icon>\n                                                    <mat-error\n                                                        *ngIf=\"editForm.get('livestock').hasError('required')\">\n                                                        livestock required\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                              <mat-form-field class=\"example-full-width\"\n                                                  appearance=\"outline\">\n                                                  <mat-label>Reviewed By</mat-label>\n                                                  <input matInput formControlName=\"issuedby\" required  [readonly]=\"true\">\n                                                  <mat-icon matSuffix>star</mat-icon>\n                                                  <mat-error\n                                                      *ngIf=\"editForm.get('issuedby').hasError('issuedby')\">\n                                                      issuedby required\n                                                  </mat-error>\n                                              </mat-form-field>\n                                          </div>\n\n\n\n                                          </div>\n\n\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n\n\n                                                        <div *ngIf=\"newselected.status == 'Completed'; else elseBlock\">\n                                                          <button type=\"submit\"\n                                                          class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                      <button type=\"button\"\n                                                          class=\"btn btn-outline-warning btn-border-radius\"\n                                                          data-dismiss=\"modal\">Cancel</button>\n\n\n\n\n                                                        </div>\n                                                        <ng-template #elseBlock>\n                                                          <button type=\"submit\"\n                                                          class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                      <button type=\"button\"\n                                                          class=\"btn btn-outline-warning btn-border-radius\"\n                                                          data-dismiss=\"modal\">Cancel</button>\n\n                                                          <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow()'>\n                                                            <i class=\"material-icons\">delete</i>\n                                                            </button>\n                                                        </ng-template>\n\n\n\n\n\n\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { OthreqComponent } from './othreq/othreq.component';\r\nimport { UsersdashboardComponent } from './usersdashboard/usersdashboard.component';\r\nimport { UserstatusComponent } from './userstatus/userstatus.component';\r\n\r\nimport { UserrequestComponent } from './userrequest/userrequest.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'reqboard',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'req',\r\n    component: UserrequestComponent\r\n  },\r\n  {\r\n    path: 'reqs',\r\n    component: UserstatusComponent\r\n  },\r\n  {\r\n    path: 'othreq',\r\n    component: OthreqComponent\r\n  },\r\n  {\r\n    path: 'reqboard',\r\n    component:  UsersdashboardComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n// tslint:disable-next-line: class-name\r\nexport class empboardRoutingModule {}\r\n"]}