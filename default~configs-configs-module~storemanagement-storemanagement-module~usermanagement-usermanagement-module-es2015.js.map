{"version":3,"sources":["./src/app/configs/category/category.component.ts","./src/app/configs/category/category.component.html","./src/app/configs/products/products.component.ts","./src/app/configs/products/products.component.html","./src/app/configs/productmaster/productmaster.component.ts","./src/app/configs/productmaster/productmaster.component.html","./src/app/configs/channels/channels.component.ts","./src/app/configs/channels/channels.component.html","./src/app/configs/reasonapp/reasonapp.component.ts","./src/app/configs/reasonapp/reasonapp.component.html","./src/app/configs/configs.routing.module.ts"],"names":[],"mappings":"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","file":"default~configs-configs-module~storemanagement-storemanagement-module~usermanagement-usermanagement-module-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.sass']\n})\nexport class CategoryComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'units' },\n    { name: 'category' }\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'units' },\n    { name: 'category' }\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  type: any;\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n      category: new FormControl(),\n      units: new FormControl(),\n\n\n    });\n  }\n  mainurl;\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      units: [''],\n      id: [''],\n      category: [''],\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl+ 'category');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      category: row.category,\n      units :row.units\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n      type: this.type\n\n    });\n  }\n\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl+ 'category/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted.',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted :)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n\n\n\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.category = form.value.category;\n        value.units = form.value.units;\n\n      }\n      let empdata = {\n        'category' : form.value.category,\n        'units' : form.value.units,\n\n\n\n      }\n      this.http.put(this.mainurl+ 'category/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl+ 'category', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  units: String;\n  category: String;\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Category</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"category\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Category</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"units\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Units</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                            Category</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Category</mat-label>\n                                                              <input matInput formControlName=\"category\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('category').hasError('required')\">\n                                                              category  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Units</mat-label>\n                                                            <input matInput formControlName=\"units\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('units').hasError('required')\">\n                                                            units  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.id}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Category</mat-label>\n                                                              <input matInput formControlName=\"category\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('category').hasError('required')\">\n                                                                  category required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Units</mat-label>\n                                                            <input matInput formControlName=\"units\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('units').hasError('required')\">\n                                                                units required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.sass']\n})\nexport class ProductsComponent implements OnInit {\n  register: FormGroup;\n  hide = true;\n  agree = false;\n  customForm: FormGroup;\n  empdata: any = {};\n  productdata: any = {};\n  getchannel: any = {};\n  form: FormGroup = new FormGroup({\n    id: new FormControl(),\n      productcode: new FormControl(),\n      name: new FormControl(),\n      description: new FormControl(),\n      description1: new FormControl(),\n      description2: new FormControl(),\n      category: new FormControl(),\n      totalorders: new FormControl(),\n      minstock: new FormControl(),\n      totalcostordered: new FormControl(),\n      purchasecost: new FormControl(),\n      rack: new FormControl(),\n      units: new FormControl(),\n      rol: new FormControl(),\n      livestock: new FormControl(),\n      safestock: new FormControl(),\n\n\n  });\n\n  itemsdata: any = {};\n  totalcost: number;\n  today= new Date();\n  jstoday;\n  data: any[];\n  closeAddModal: any;\n  constructor(private fb: FormBuilder , private http: HttpClient , private router : Router ) {\n\n      this.form = this.fb.group({\n        id: [''],\n        productcode: [''],\n        name: [''],\n        description: [''],\n        description1: [''],\n        description2: [''],\n        category: [''],\n        totalorders: [''],\n        minstock: [''],\n        totalcostordered: [''],\n        purchasecost: [''],\n        rack: [''],\n        units: [''],\n        rol: [''],\n        livestock: [''],\n        safestock: [''],\n\n      });\n\n  }\n  searchMoviesCtrl = new FormControl();\n  filteredMovies: any;\n  isLoading = false;\n  errorMsg: string;\n  onChangeEvent(event: any){\n    this.totalcost = event.target.value * this.itemsdata.purchasecost;\n    console.log(this.itemsdata.purchasecost);\n    console.log(this.totalcost);\n\n  }\n  itemDetails(id){\n\n    this.http.get(this.mainurl + 'product/'+id).subscribe(res => {\n      this.itemsdata = res;\n      console.log(\"all data for the request\", this.itemsdata);\n    });\n\n  }\n  productdataname : any ={};\n  productdatadic1 : any ={};\n  productdatadic2 : any ={};\n  productdatacode : any ={};\nkeycode = 'productcode';\nuserid;\nmainurl;\n\n  ngOnInit(): void {\n    this.userid = localStorage.getItem('userid');\n    this.mainurl = localStorage.getItem('mainurl');\n\n    this.http.get(this.mainurl + 'productcode').subscribe(res => {\n      this.productdatacode = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n      console.log(\"all names\", this.productdatacode);\n    });\n    this.http.get(this.mainurl + 'emp/'+this.userid).subscribe(res => {\n      this.empdata = res;\n      console.log(\"all data\", this.empdata);\n    });\n    this.http.get(this.mainurl + 'product').subscribe(res => {\n      this.productdata = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n      console.log(\"all data\", this.productdata);\n    });\n    this.http.get(this.mainurl + 'productname').subscribe(res => {\n      this.productdataname = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n      console.log(\"all names\", this.productdataname);\n    });\n    this.http.get(this.mainurl + 'productdis1').subscribe(res => {\n      this.productdatadic1 = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n      console.log(\"all names\", this.productdatadic1);\n    });\n    this.http.get(this.mainurl + 'productdis2').subscribe(res => {\n      this.productdatadic2 = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n      console.log(\"all names\", this.productdatadic2);\n    });\n    this.http.get(this.mainurl + 'channel').subscribe(res => {\n      this.getchannel = res;\n      console.log(\"all data\", this.getchannel);\n    });\n  }\n\nkey1 = 'description1';\nkey2 = 'description2';\n\n  getdatasearch(){}\n  // successAlertNotification(tag){\n  //   Swal.fire('Hi', 'Congrats! operation successfull', tag)\n  // }\n\n  successAlertNotification(tag){\n\n    // Swal.fire( 'new request came',dataget)\n    Swal.fire({\n      title: 'New Request Received' +tag,\n      text: tag,\n      icon: 'info',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, Acknowledge it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.router.navigate(['/storemng/main']);\n\n      }\n    })\n  }\n\n  tagresponce : any ;\n\n  onEditSave() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'You want to edit the selected Item!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, edit it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        console.log('Form Value', this.form.value);\n    this.http.put(this.mainurl+ 'product/'+this.form.value.id, this.form.value).subscribe();\n    this.form.setValue({\n      id: '',\n      productcode: '',\n      name:'',\n      description: '',\n      description1: '',\n      description2: '',\n      category: '',\n      totalorders: '',\n      minstock: '',\n      totalcostordered: '',\n      purchasecost: '',\n      rack: '',\n      units: '',\n      rol: '',\n      livestock: '',\n      safestock: '',\n\n    });\n        Swal.fire(\n          'Updated!',\n\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n\n          'error'\n        )\n      }\n    })\n\n\n\n  //   this.router.navigateByUrl('/stockupdate', { skipLocationChange: true }).then(() => {\n  //     this.router.navigate(['/stockupdate']);\n  // });\n\n    return true;\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n\n\n  onRegister() {\n      console.log('Form Value', this.form.value);\nthis.onEditSave()\n\n      this.http.post(this.mainurl + 'emprequest', this.form.value).subscribe(\n        (val) => {\n            console.log(\"POST call successful value returned in body\",\n\n                        val);\n          this.tagresponce =val\n                        //  alert(this.tagresponce.message);\n\n                          // Swal.fire( this.tagresponce.message)\n                          // Swal.fire({\n                          //   title: 'New Request Received' +this.tagresponce.message,\n                          //   text: '',\n                          //   icon: 'info',\n                          //   showCancelButton: true,\n                          //   confirmButtonColor: '#3085d6',\n                          //   cancelButtonColor: '#d33',\n                          //   confirmButtonText: 'Yes, Acknowledge it!'\n                          // }).then((result) => {\n                          //   if (result.isConfirmed) {\n                          //     // this.router.navigate(['/config/updateitem']);\n\n                          //   }\n                          // })\n\n        },\n\n        response => {\n\n\n\n\n        },\n        () => {\n            console.log(\"The POST observable is now completed.\");\n        });\n      this.data = [...this.data];\n\n\n\n      // console.log(this.data);\n      this.form.reset();\n      this.closeAddModal.nativeElement.click();\n      this.showNotification(\n        'bg-green',\n        'Add Record Successfully',\n        'bottom',\n        'right'\n      );\n\n  }\n  showNotification(arg0: string, arg1: string, arg2: string, arg3: string) {\n    throw new Error('Method not implemented.');\n  }\n\nitemcodefroms ;\n\n  selectEvent(item) {\n    if(item){\n    console.log(item.id);\n    this.itemDetails(item.id);\n this.itemcodefroms =item.id\nconsole.log('this is code',this.itemcodefroms);\n    }\n    // do something with selected item\n  }\n\n  onChangeSearch(val: string) {\n    // fetch remote data from here\n    // And reassign the 'data' which is binded to 'data' property.\n  }\n\n  onFocused(e){\n    if(e){\n    console.log('this is selected',e.id);\n    this.itemDetails(e.id);\n    this.itemcodefroms =e.id\n    console.log('this is code',this.itemcodefroms);\n    }\n  }\n  keyword = 'name';\n\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}\n","\n\n\n<section class=\"content\">\n  <div class=\"container-fluid\">\n    <!-- Basic Validation -->\n    <div class=\"row clearfix\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>\n              <strong>Update Item</strong> Form</h2>\n            <ul class=\"header-dropdown m-r--5\">\n              <li class=\"dropdown\">\n                <a href=\"#\" onClick=\"return false;\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n                  aria-expanded=\"false\">\n                  <i class=\"material-icons\">more_vert</i>\n                </a>\n\n              </li>\n            </ul>\n          </div>\n          <div class=\"body\">\n            <form class=\"register-form m-4\" [formGroup]=\"form\" (ngSubmit)=\"onRegister()\">\n              <div class=\"row\">\n\n              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                <div class=\"example-full-width\" class=\"ng-autocomplete\">\n                  <ng-autocomplete\n                    [data]=\"productdataname\"\n                    placeHolder=\"Enter the Item Name\"\n                    [searchKeyword]=\"keyword\"\n                    (selected)='selectEvent($event)'\n                    (inputChanged)='onChangeSearch($event)'\n                    (inputFocused)='onFocused($event)'\n                    [itemTemplate]=\"itemTemplate\"\n                    [notFoundTemplate]=\"notFoundTemplate\">\n                  </ng-autocomplete>\n\n                  <ng-template #itemTemplate let-item>\n                  <a [innerHTML]=\"item.name\"></a>\n                  </ng-template>\n\n                  <ng-template #notFoundTemplate let-notFound>\n                  <div [innerHTML]=\"notFound\"></div>\n                  </ng-template>\n                  </div>\n\n\n            </div>\n            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n              <div class=\"example-full-width\" class=\"ng-autocomplete\">\n                <ng-autocomplete\n                  [data]=\"productdatadic1\"\n                  [searchKeyword]=\"key1\"\n                  placeHolder=\"Enter the Item Description 1\"\n                  (selected)='selectEvent($event)'\n                  (inputChanged)='onChangeSearch($event)'\n                  (inputFocused)='onFocused($event)'\n                  [itemTemplate]=\"itemTemplates\"\n                  [notFoundTemplate]=\"notFoundTemplates\">\n                </ng-autocomplete>\n\n                <ng-template #itemTemplates let-item>\n                <a [innerHTML]=\"item.description1\"></a>\n                </ng-template>\n\n                <ng-template #notFoundTemplates let-notFound>\n                <div [innerHTML]=\"notFound\"></div>\n                </ng-template>\n                </div>\n\n\n          </div>\n          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n            <div class=\"example-full-width\" class=\"ng-autocomplete\">\n              <ng-autocomplete\n                [data]=\"productdatadic2\"\n                placeHolder=\"Enter the item Description 2\"\n                [searchKeyword]=\"key2\"\n                (selected)='selectEvent($event)'\n                (inputChanged)='onChangeSearch($event)'\n                (inputFocused)='onFocused($event)'\n                [itemTemplate]=\"itemTemplates2\"\n                [notFoundTemplate]=\"notFoundTemplates2\">\n              </ng-autocomplete>\n\n              <ng-template #itemTemplates2 let-item>\n              <a [innerHTML]=\"item.description2\"></a>\n              </ng-template>\n\n              <ng-template #notFoundTemplates2 let-notFound>\n              <div [innerHTML]=\"notFound\"></div>\n              </ng-template>\n              </div>\n\n\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\" >\n          <div class=\"example-full-width\" class=\"ng-autocomplete\">\n            <ng-autocomplete\n              [data]=\"productdatacode\"\n              placeHolder=\"Enter the Item Code\"\n              [searchKeyword]=\"keycode\"\n              (selected)='selectEvent($event)'\n              (inputChanged)='onChangeSearch($event)'\n              (inputFocused)='onFocused($event)'\n              [itemTemplate]=\"itemTemplatescode\"\n              [notFoundTemplate]=\"notFoundTemplatescode\">\n            </ng-autocomplete>\n\n            <ng-template #itemTemplatescode let-item>\n            <a [innerHTML]=\"item.productcode\"></a>\n            </ng-template>\n\n            <ng-template #notFoundTemplatescode let-notFound>\n            <div [innerHTML]=\"notFound\"></div>\n            </ng-template>\n            </div>\n\n\n      </div>\n          <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n            <div class=\"example-full-width\" class=\"ng-autocomplete\">\n              <ng-autocomplete\n                [data]=\"productdatadic2\"\n                [searchKeyword]=\"key2\"\n                (selected)='selectEvent($event)'\n                (inputChanged)='onChangeSearch($event)'\n                (inputFocused)='onFocused($event)'\n                [itemTemplate]=\"itemTemplate\"\n                [notFoundTemplate]=\"notFoundTemplate\">\n              </ng-autocomplete>\n\n              <ng-template #itemTemplate let-item>\n              <a [innerHTML]=\"item.description1\"></a>\n              </ng-template>\n\n              <ng-template #notFoundTemplate let-notFound>\n              <div [innerHTML]=\"notFound\"></div>\n              </ng-template>\n              </div>\n\n\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-full-width\" class=\"ng-autocomplete\">\n            <ng-autocomplete\n              [data]=\"productdataname\"\n              [searchKeyword]=\"keyword\"\n              (selected)='selectEvent($event)'\n              (inputChanged)='onChangeSearch($event)'\n              (inputFocused)='onFocused($event)'\n              [itemTemplate]=\"itemTemplate\"\n              [notFoundTemplate]=\"notFoundTemplate\">\n            </ng-autocomplete>\n\n            <ng-template #itemTemplate let-item>\n            <a [innerHTML]=\"item.name\"></a>\n            </ng-template>\n\n            <ng-template #notFoundTemplate let-notFound>\n            <div [innerHTML]=\"notFound\"></div>\n            </ng-template>\n            </div>\n\n\n      </div> -->\n\n\n\n      </div>\n\n      <div class=\"row\">\n\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Item Code</mat-label>\n\n            <!-- <input matInput placeholder =\"itemcode\"    [value]=\"itemsdata.productcode\" > -->\n            <input matInput  formControlName=\"productcode\"   [(ngModel)]=\"itemsdata.productcode\" value = \"{{itemsdata.productcode}}\" [readonly]=\"true\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Item Name</mat-label>\n\n            <input matInput placeholder =\"Ex. John\"  [(ngModel)]=\"itemsdata.name\" formControlName=\"name\" [value]=\"itemsdata.name\" [readonly]=\"true\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Item Category</mat-label>\n\n            <input matInput placeholder =\"Ex. John\"  [(ngModel)]=\"itemsdata.category\" formControlName=\"category\" [value]=\"itemsdata.category\"  [readonly]=\"true\">\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Description </mat-label>\n\n\n            <input matInput  formControlName=\"description\"   [(ngModel)]=\"itemsdata.description\" value = \"{{itemsdata.description}}\" [readonly]=\"true\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Description 1</mat-label>\n\n            <input matInput formControlName=\"description1\"  [(ngModel)]=\"itemsdata.description1\"  [value]=\"itemsdata.description1\" [readonly]=\"true\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Description 2</mat-label>\n\n            <input matInput formControlName=\"description2\"   [(ngModel)]=\"itemsdata.description2\"  [value]=\"itemsdata.description2\"  [readonly]=\"true\">\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Live Stock</mat-label>\n\n            <input matInput formControlName=\"livestock\"  [(ngModel)]=\"itemsdata.livestock\"  [value]=\"itemsdata.livestock\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Min Stock</mat-label>\n\n            <input matInput formControlName=\"minstock\"  [(ngModel)]=\"itemsdata.minstock\"  [value]=\"itemsdata.minstock\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Safe Stock</mat-label>\n\n            <input matInput formControlName=\"safestock\"  [(ngModel)]=\"itemsdata.safestock\"  [value]=\"itemsdata.safestock\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Rol Stock</mat-label>\n\n            <input matInput formControlName=\"rol\"  [(ngModel)]=\"itemsdata.rol\"  [value]=\"itemsdata.rol\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Units</mat-label>\n\n            <input matInput formControlName=\"units\"  [(ngModel)]=\"itemsdata.units\"  [value]=\"itemsdata.units\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Ref. ID</mat-label>\n\n            <input matInput formControlName=\"id\"  [(ngModel)]=\"itemsdata.id\"  [value]=\"itemsdata.id\" [readonly]=\"true\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Rack</mat-label>\n\n            <input matInput formControlName=\"rack\"  [(ngModel)]=\"itemsdata.rack\"   [value]=\"itemsdata.rack\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Total Price Ordered Till</mat-label>\n\n            <input matInput formControlName=\"totalcostordered\"  [(ngModel)]=\"itemsdata.totalcostordered\"  [value]=\"itemsdata.totalcostordered\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Total Quantity Ordered Till</mat-label>\n\n            <input matInput formControlName=\"totalorders\"  [(ngModel)]=\"itemsdata.totalorders\"  [value]=\"itemsdata.totalorders\"  >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n      </div>\n\n\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                  <button class=\"mr-3\" mat-raised-button color=\"primary\">Submit</button>\n                  <button type=\"button\" mat-button>Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- #END# Basic Validation -->\n  </div>\n</section>\n","//import { HttpClient } from '@angular/common/http';\nimport { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { delay } from 'rxjs/operators';\nimport * as XLSX from 'xlsx';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType } from  '@angular/common/http';\nimport { map } from  'rxjs/operators';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-productmaster',\n  templateUrl: './productmaster.component.html',\n  styleUrls: ['./productmaster.component.sass']\n})\n\nexport class ProductmasterComponent implements OnInit {\n\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  @ViewChild(\"fileUpload\", {static: false}) fileUpload: ElementRef;\n    files  = [];\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  mainurl;\n  serverUrl: string = \"http://163.157.20.76:2020/uploadernew\";\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  empdata : any ={};\n  columns = [\n    { name: 'id' },\n    { name: 'productcode' },\n    { name: 'name' },\n    { name: 'description' },\n    { name: 'description1' },\n    { name: 'description2' },\n    { name: 'category' },\n    { name: 'totalorders' }  ,\n    { name: 'minstock' },\n    { name: 'totalcostordered' },\n    { name: 'purchasecost' },\n    { name: 'rack' },\n    { name: 'units' },\n    { name: 'rol' },\n    { name: 'livestock' },\n    { name: 'safestock' },\n\n\n  ];\n  public sendFormData(formData) {\n    return this.http.post<any>(this.serverUrl, formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n}\nsendFile(file) {\n  const formData = new FormData();\n  formData.append('file', file.data);\n  file.inProgress = true;\n  this.sendFormData(formData).subscribe((event: any) => {\n      if (typeof (event) === 'object') {\n        // console.log(event.body);\n      }\n    });\n}\nprivate sendFiles() {\n  this.fileUpload.nativeElement.value = '';\n  this.files.forEach(file => {\n    this.sendFile(file);\n  });\n}\nonClick() {\n  const fileUpload = this.fileUpload.nativeElement;fileUpload.onchange = () => {\n  for (let index = 0; index < fileUpload.files.length; index++)\n  {\n   const file = fileUpload.files[index];\n   this.files.push({ data: file, inProgress: false, progress: 0});\n  }\n    this.sendFiles();\n  };\n  fileUpload.click();\n}\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'productcode' },\n    { name: 'name' },\n    { name: 'description' },\n    { name: 'description1' },\n    { name: 'description2' },\n    { name: 'category' },\n    { name: 'totalorders' }  ,\n    { name: 'minstock' },\n    { name: 'totalcostordered' },\n    { name: 'purchasecost' },\n    { name: 'rack' },\n    { name: 'units' },\n    { name: 'rol' },\n    { name: 'livestock' },\n    { name: 'safestock' },\n\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  type: any;\n  name: any;\n  code: any;\n  receivedFile: File;\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n      productcode: new FormControl(),\n      name: new FormControl(),\n      description: new FormControl(),\n      description1: new FormControl(),\n      description2: new FormControl(),\n      category: new FormControl(),\n      totalorders: new FormControl(),\n      minstock: new FormControl(),\n      totalcostordered: new FormControl(),\n      purchasecost: new FormControl(),\n      rack: new FormControl(),\n      units: new FormControl(),\n      rol: new FormControl(),\n      livestock: new FormControl(),\n      safestock: new FormControl(),\n    });\n  }\n  myFiles = [];\n\n  categorydata : any ={};\n  rackdata :  any ={};\n  getdatareason(){\n    this.http.get(this.mainurl + 'category').subscribe(res => {\n      this.categorydata = res;\n      // console.log('this is reason ',  this.categorydata );\n\n    });\n\n  }\n  getdatarack(){\n    this.http.get(this.mainurl + 'rack').subscribe(res => {\n      this.rackdata = res;\n      // console.log('this is reason ',  this.rackdata );\n\n    });\n\n  }\n\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this.getdatareason();\n    this.getdatarack();\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      id: [''],\n      productcode: [''],\n      name: [''],\n      description: [''],\n      description1: [''],\n      description2: [''],\n      category: [''],\n      totalorders: [''],\n      minstock: [''],\n      totalcostordered: [''],\n      purchasecost: [''],\n      rack: [''],\n      units: [''],\n      rol: [''],\n      livestock: [''],\n      safestock: [''],\n\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl + 'product');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  handleFileInput(files: FileList) {\n    // // console.log('Inside File upload function\\nFile uploaded');\n    this.receivedFile = files.item(0);\n    const isFileupload = true;\n    // // console.log(` Received File: ${this.receivedFile}`);\n    if (isFileupload) {\n      alert('Csv uploaded');\n    }\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      productcode: row.productcode,\n      name: row.name,\n      description: row.description,\n      description1: row.description1,\n      description2: row.description2,\n      category: row.category,\n      totalorders: row.totalorders,\n      minstock: row.minstock,\n      totalcostordered: row.totalcostordered,\n      purchasecost: row.purchasecost,\n      rack: row.rack,\n      units: row.units,\n      rol: row.rol,\n      livestock: row.livestock,\n      safestock: row.safestock,\n\n    });\n    this.selectedRowData = row;\n  }\n\n//   onFileChange(event: any) {\n\n//     for (var i = 0; i < event.target.files.length; i++) {\n//       this.myFiles.push(event.target.files[i]);\n//     }\n//     /* wire up file reader */\n//     const frmData = new FormData();\n\n//     // tslint:disable-next-line: prefer-for-of\n//     for (var i = 0; i < this.myFiles.length; i++) {\n//       frmData.append('fileUpload', this.myFiles[i]);\n//     }\n\n\n//     const target: DataTransfer = (event.target) as DataTransfer;\n//     if (target.files.length !== 1) {\n//       throw new Error('Cannot use multiple files');\n//     }\n//     const reader: FileReader = new FileReader();\n//     reader.readAsBinaryString(target.files[0]);\n//     reader.onload = (e: any) => {\n//       /* create workbook */\n//       const binarystr: string = e.target.result;\n//       const wb: XLSX.WorkBook = XLSX.read(binarystr, { type: 'binary' });\n\n//       /* selected the first sheet */\n//       const wsname: string = wb.SheetNames[0];\n//       const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n//       /* save data */\n//       const data = XLSX.utils.sheet_to_json(ws); // to get 2d array pass 2nd parameter as object {header: 1}\n//       // console.log('data length')\n//       // console.log((data.length));\n//       // this.http.post(this.mainurl + 'fileupload', frmData).subscribe();\n\n//       // tslint:disable-next-line: prefer-for-of\n//       for (var i = 0; i < data.length; i++) {\n//         var eachItems =\n//                      {\n//                        category: data[i]['Item Class'],\n//                         productcode: data[i]['Item'],\n//                         description2: data[i]['Extended description 2'],\n//                         description1: data[i]['Extended description 1'],\n//                         name: data[i]['Description'],\n//                         purchasecost: data[i]['Std Cost'],\n//                         safestock: data[i]['SAFETY_STK'],\n//                         minstock: data[i]['MIN'],\n//                         rol: data[i]['ROL'],\n//                         livestock: data[i]['livestock'],\n\n\n//                         // category: data[i]['Item_Class']\n//                      };\n//                      this.http.post(this.mainurl + 'uploadproduct', eachItems).subscribe();\n//         // var eachItem =\n//         //              {\n//         //                  Whs: data[i]['Whs'],\n//         //                  Item: data[i]['Item'],\n//         //                  Extended_description_2: data[i]['Extended description 2'],\n//         //                  Extended_description_1: data[i]['Extended description 1'],\n//         //                  Description: data[i]['Description'],\n//         //                  On_hand: data[i]['On-hand'],\n//         //                  On_order: data[i]['On-order'],\n//         //                  Std_Cost: data[i]['Std Cost'],\n//         //                  Item_Class: data[i]['Item Class'],\n//         //              };\n//       // this.http.post(this.mainurl + 'fileupload', eachItem).subscribe();\n//       }\n\n//       // console.log(data[0]); // Data will be logged in array format containing objects\n\n//     };\n//  }\npublic changeListener(files: FileList){\n  // console.log(files);\n  if(files && files.length > 0) {\n     let file : File = files.item(0);\n       // console.log(file.name);\n       // console.log(file.size);\n       // console.log(file.type);\n       let reader: FileReader = new FileReader();\n       reader.readAsText(file);\n       reader.onload = (e) => {\n          let csv: string = reader.result as string;\n          // console.log(csv);\n       }\n    }\n}\n\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n      name: this.name,\n      code: this.code\n    });\n  }\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl + 'product/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted :)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n       //  value.id= form.value.code;\n        value.productcode= form.value.productcode;\n        value.name= form.value.name;\n        value.description= form.value.description;\n        value.description1= form.value.description1;\n        value.description2= form.value.description2;\n        value.category= form.value.category;\n        value.totalorders= form.value.totalorders;\n        value.minstock= form.value.minstock;\n        value.totalcostordered= form.value.totalcostordered;\n        value.purchasecost= form.value.purchasecost;\n        value.rack= form.value.rack;\n        value.units= form.value.units;\n        value.rol= form.value.rol;\n        value.livestock= form.value.livestock;\n        value.safestock= form.value.safestock;\n\n      }\n    });\n\n      let count = 1;\n       this.empdata = {\n           //  'id': form.value.code,\n      'productcode': form.value.productcode,\n      'name': form.value.name,\n      'description': form.value.description,\n      'description1': form.value.description1,\n      'description2': form.value.description2,\n      'category': form.value.category,\n      'totalorders': form.value.totalorders,\n      'minstock': form.value.minstock,\n      'totalcostordered': form.value.totalcostordered,\n      'purchasecost': form.value.purchasecost,\n      'rack': form.value.rack,\n      'units': form.value.units,\n      'rol': form.value.rol,\n      'livestock': form.value.livestock,\n      'safestock': form.value.safestock,\n\n      }\n      // if(count == 1){\n      this.http.put(this.mainurl + 'product/'+form.value.id, this.empdata).subscribe(\n        result => {\n          // console.log(\"put request\", result);\n          this.refreshData();\n        }\n      )\n\n      this.closeEditModal.nativeElement.click();\n      // count = count +1;\n\n\n      // }\n\n\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n\n    return true;\n\n\n  }\n\n  refreshData(){\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl + 'product', form.value).subscribe();\n    this.data = [...this.data];\n    // // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl + 'filterproduct/'+event);\n    req.onload = () => {\n      this.data  = JSON.parse(req.response);\n\n    };\n\n\n\n    req.send();\n\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n\n\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  productcode: String;\n  name: String;\n  description: String;\n  description1: String;\n  description2: String;\n  category: String;\n  totalorders: String;\n  minstock: String;\n  totalcostordered: String;\n  purchasecost: String;\n  rack: String;\n  units: String;\n  rol: String;\n  livestock: String;\n  safestock: String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Items</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                              <!-- <input id=\"my-file-selector\" type=\"file\" (change)=\"onFileChange($event)\" name=\"uploadExcel\"> -->\n\n                                          </div>\n                                      </li>\n                                  </ul>\n                                  <ul>\n                                    <li>\n\n                                    </li>\n                                  </ul>\n\n                              </div>\n                                <div>\n                                <div>\n                                    <ul>\n                                    <li *ngFor=\"let file of files\">\n\n                                        <span id=\"file-label\">\n                                            {{file.data.name}}\n                                        </span>\n                                    </li>\n                                </ul>\n\n                                <button (click)=\"onClick()\">\n                                    Upload\n                                </button>\n                                <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" accept=\"image/*\" style=\"display:none;\" />\n                                </div>\n                                </div>\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"name\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Name</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"productcode\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Code</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                            Items</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Name</mat-label>\n                                                              <input matInput formControlName=\"name\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('name').hasError('required')\">\n                                                              Name  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Code</mat-label>\n                                                            <input matInput formControlName=\"productcode\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('productcode').hasError('required')\">\n                                                            code  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"row\">\n\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Description</mat-label>\n                                                            <input matInput formControlName=\"description\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('description').hasError('required')\">\n                                                            description  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Description 1</mat-label>\n                                                          <input matInput formControlName=\"description1\">\n                                                          <mat-error\n                                                          *ngIf=\"register.get('description1').hasError('required')\">\n                                                          description1  is required\n                                                      </mat-error>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                      </mat-form-field>\n                                                  </div>\n                                                </div>\n                                                <div class=\"row\">\n\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Description 2</mat-label>\n                                                          <input matInput formControlName=\"description2\">\n                                                          <mat-error\n                                                          *ngIf=\"register.get('description2').hasError('required')\">\n                                                          description2  is required\n                                                      </mat-error>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                      </mat-form-field>\n                                                  </div>\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Category</mat-label>\n                                                        <mat-select formControlName=\"category\"   >\n                                                          <mat-option *ngFor=\"let option of categorydata\"   [(ngModel)]=\"option.category\"  value=\"{{option.category}}\">{{ option.category }}</mat-option>\n                                                        </mat-select>\n                                                        <mat-error\n                                                        *ngIf=\"register.get('category').hasError('required')\">\n                                                        category  is required\n                                                    </mat-error>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                    </mat-form-field>\n                                                </div>\n                                              </div>\n                                              <div class=\"row\">\n\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Purchasecost</mat-label>\n                                                        <input matInput formControlName=\"purchasecost\">\n                                                        <mat-error\n                                                        *ngIf=\"register.get('purchasecost').hasError('required')\">\n                                                        Purchasecost  is required\n                                                    </mat-error>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                    </mat-form-field>\n                                                </div>\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>Units</mat-label>\n                                                      <input matInput formControlName=\"units\">\n                                                      <mat-error\n                                                      *ngIf=\"register.get('units').hasError('required')\">\n                                                      Units  is required\n                                                  </mat-error>\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                  </mat-form-field>\n                                              </div>\n                                            </div>\n                                            <div class=\"row\">\n\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>ROL</mat-label>\n                                                      <input matInput formControlName=\"rol\">\n                                                      <mat-error\n                                                      *ngIf=\"register.get('rol').hasError('required')\">\n                                                      ROL  is required\n                                                  </mat-error>\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                  </mat-form-field>\n                                              </div>\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\"\n                                                    appearance=\"outline\">\n                                                    <mat-label>Safe Stock</mat-label>\n                                                    <input matInput formControlName=\"safestock\">\n                                                    <mat-error\n                                                    *ngIf=\"register.get('safestock').hasError('required')\">\n                                                    Safe Stock  is required\n                                                </mat-error>\n                                                    <mat-icon matSuffix>star</mat-icon>\n                                                </mat-form-field>\n                                            </div>\n                                          </div>\n                                          <div class=\"row\">\n\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\"\n                                                    appearance=\"outline\">\n                                                    <mat-label>Min Stock</mat-label>\n                                                    <input matInput formControlName=\"minstock\">\n                                                    <mat-error\n                                                    *ngIf=\"register.get('minstock').hasError('required')\">\n                                                    Min Stock  is required\n                                                </mat-error>\n                                                    <mat-icon matSuffix>star</mat-icon>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                              <mat-form-field class=\"example-full-width\"\n                                                  appearance=\"outline\">\n                                                  <mat-label>Live Stock</mat-label>\n                                                  <input matInput formControlName=\"livestock\">\n                                                  <mat-error\n                                                  *ngIf=\"register.get('livestock').hasError('required')\">\n                                                  Live Stock  is required\n                                              </mat-error>\n                                                  <mat-icon matSuffix>star</mat-icon>\n                                              </mat-form-field>\n                                          </div>\n\n                                        </div>\n                                        <div class=\"row\">\n\n                                          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                              <mat-form-field class=\"example-full-width\"\n                                                  appearance=\"outline\">\n                                                  <mat-label>Rack</mat-label>\n                                                  <input matInput formControlName=\"rack\">\n                                                  <mat-error\n                                                  *ngIf=\"register.get('rack').hasError('required')\">\n                                                  Rack  is required\n                                              </mat-error>\n                                                  <mat-icon matSuffix>star</mat-icon>\n                                              </mat-form-field>\n                                          </div>\n                                          <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                            <mat-form-field class=\"example-full-width\"\n                                                appearance=\"outline\">\n                                                <mat-label>livestock</mat-label>\n                                                <input matInput formControlName=\"livestock\">\n                                                <mat-error\n                                                *ngIf=\"register.get('livestock').hasError('required')\">\n                                                livestock  is required\n                                            </mat-error>\n                                                <mat-icon matSuffix>star</mat-icon>\n                                            </mat-form-field>\n                                        </div> -->\n\n                                      </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.id}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Name</mat-label>\n                                                              <input matInput formControlName=\"name\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('name').hasError('required')\">\n                                                                  Name required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Productcode</mat-label>\n                                                            <input matInput formControlName=\"productcode\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('productcode').hasError('required')\">\n                                                                Productcode required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n                                                  <div class=\"row\">\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Description</mat-label>\n                                                            <input matInput formControlName=\"description\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('description').hasError('required')\">\n                                                                Description required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Description 1</mat-label>\n                                                          <input matInput formControlName=\"description1\" required>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('description1').hasError('required')\">\n                                                              Description1 required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n\n                                                </div>\n                                                <div class=\"row\">\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Description 2</mat-label>\n                                                          <input matInput formControlName=\"description2\" required>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('description2').hasError('required')\">\n                                                              Description2 required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Category</mat-label>\n                                                        <mat-select formControlName=\"category\"   >\n                                                          <mat-option *ngFor=\"let option of categorydata\"   [(ngModel)]=\"option.category\"  value=\"{{option.category}}\">{{ option.category }}</mat-option>\n                                                        </mat-select>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                        <mat-error\n                                                            *ngIf=\"editForm.get('category').hasError('required')\">\n                                                            Category required\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n\n                                              </div>\n                                              <div class=\"row\">\n                                                <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>totalorders</mat-label>\n                                                        <input matInput formControlName=\"totalorders\" required>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                        <mat-error\n                                                            *ngIf=\"editForm.get('totalorders').hasError('required')\">\n                                                            totalorders required\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div> -->\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>Min Stock</mat-label>\n                                                      <input matInput formControlName=\"minstock\" required>\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                      <mat-error\n                                                          *ngIf=\"editForm.get('minstock').hasError('required')\">\n                                                          Min Stock required\n                                                      </mat-error>\n                                                  </mat-form-field>\n                                              </div>\n\n\n\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\"\n                                                    appearance=\"outline\">\n                                                    <mat-label>Unit Cost</mat-label>\n                                                    <input matInput formControlName=\"purchasecost\" required>\n                                                    <mat-icon matSuffix>star</mat-icon>\n                                                    <mat-error\n                                                        *ngIf=\"editForm.get('purchasecost').hasError('required')\">\n                                                        purchasecost required\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n\n                                          </div>\n                                          <div class=\"row\">\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\"\n                                                    appearance=\"outline\">\n                                                    <mat-label>Rack</mat-label>\n                                                    <input matInput formControlName=\"rack\" required>\n                                                    <mat-icon matSuffix>star</mat-icon>\n                                                    <mat-error\n                                                        *ngIf=\"editForm.get('rack').hasError('required')\">\n                                                        Rack required\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                              <mat-form-field class=\"example-full-width\"\n                                                  appearance=\"outline\">\n                                                  <mat-label>Units</mat-label>\n                                                  <input matInput formControlName=\"units\" required>\n                                                  <mat-icon matSuffix>star</mat-icon>\n                                                  <mat-error\n                                                      *ngIf=\"editForm.get('units').hasError('required')\">\n                                                      Units required\n                                                  </mat-error>\n                                              </mat-form-field>\n                                          </div>\n\n                                        </div>\n                                        <div class=\"row\">\n                                          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                              <mat-form-field class=\"example-full-width\"\n                                                  appearance=\"outline\">\n                                                  <mat-label>ROL</mat-label>\n                                                  <input matInput formControlName=\"rol\" required>\n                                                  <mat-icon matSuffix>star</mat-icon>\n                                                  <mat-error\n                                                      *ngIf=\"editForm.get('rol').hasError('required')\">\n                                                      ROL required\n                                                  </mat-error>\n                                              </mat-form-field>\n                                          </div>\n                                          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                            <mat-form-field class=\"example-full-width\"\n                                                appearance=\"outline\">\n                                                <mat-label>Live Stock</mat-label>\n                                                <input matInput formControlName=\"livestock\" required>\n                                                <mat-icon matSuffix>star</mat-icon>\n                                                <mat-error\n                                                    *ngIf=\"editForm.get('livestock').hasError('required')\">\n                                                    Live Stock required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n\n                                      </div>\n                                      <div class=\"row\">\n\n                                        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                          <mat-form-field class=\"example-full-width\"\n                                              appearance=\"outline\">\n                                              <mat-label>Safe Stock</mat-label>\n                                              <input matInput formControlName=\"safestock\" required>\n                                              <mat-icon matSuffix>star</mat-icon>\n                                              <mat-error\n                                                  *ngIf=\"editForm.get('safestock').hasError('required')\">\n                                                  Safe Stock required\n                                              </mat-error>\n                                          </mat-form-field>\n                                      </div>\n\n                                    </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-channels',\n  templateUrl: './channels.component.html',\n  styleUrls: ['./channels.component.sass']\n})\nexport class ChannelsComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'name' },\n    { name: 'code' }\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'name' },\n    { name: 'code' }\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  type: any;\n  name: any;\n  code: any;\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n      code: new FormControl(),\n      name: new FormControl(),\n\n\n    });\n  }\n mainurl;\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      name: [''],\n      id: [''],\n      code: [''],\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl+ 'channel');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      name: row.name,\n      code: row.code,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n      name: this.name,\n      code: this.code\n    });\n  }\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl+ 'channel/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted :)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.code = form.value.code;\n        value.name = form.value.name;\n      }\n      let empdata = {\n        'code' : form.value.code,\n        'name' : form.value.name,\n\n\n\n      }\n      this.http.put(this.mainurl+ 'channel/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl+ 'channel', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  name: String;\n  code: String;\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Channels</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"name\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Name</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"code\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Code</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                            Channels</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Name</mat-label>\n                                                              <input matInput formControlName=\"name\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('name').hasError('required')\">\n                                                              Name  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Code</mat-label>\n                                                            <input matInput formControlName=\"code\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('code').hasError('required')\">\n                                                            Code  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.name}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>name</mat-label>\n                                                              <input matInput formControlName=\"name\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('name').hasError('required')\">\n                                                                  name required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>code</mat-label>\n                                                            <input matInput formControlName=\"code\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('code').hasError('required')\">\n                                                                code required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-reasonapp',\n  templateUrl: './reasonapp.component.html',\n  styleUrls: ['./reasonapp.component.sass']\n})\nexport class ReasonappComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'reason' },\n    { name: 'Deatils' },\n\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'reason' },\n    { name: 'Deatils' },\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n\n\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n\n      reason: new FormControl(),\n      details: new FormControl(),\n\n    });\n  }\n  mainurl;\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      reason: [''],\n      details: [''],\n      id: ['']\n\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl+ 'rejectcategory');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n\n      reason: row.reason,\n      details: row.details,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n\n      // role: this.role\n    });\n  }\n\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl+ 'rejectcategory/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted :)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.reason = form.value.reason;\n        value.details = form.value.details;\n      }\n      let empdata = {\n        'reason' : form.value.reason,\n\n        'details' : form.value.details,\n\n\n      }\n      this.http.put(this.mainurl+ 'rejectcategory/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl+ 'rejectcategory', form.value).subscribe();\n    this.data = [...this.data];\n   console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n\n  reason: String;\n  details: String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Rejection Code</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"reason\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Reason Code</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"details\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Details</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              Reason Code</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Reason Code</mat-label>\n                                                              <input matInput formControlName=\"reason\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('reason').hasError('required')\">\n                                                              Reason Code  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                       <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Details</mat-label>\n                                                              <input matInput formControlName=\"details\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('details').hasError('required')\">\n                                                              details  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.reason}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Reason Code</mat-label>\n                                                            <input matInput formControlName=\"reason\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('reason').hasError('required')\">\n                                                               reason required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Details</mat-label>\n                                                          <input matInput formControlName=\"details\" required>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('details').hasError('required')\">\n                                                              details required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { ReasonappComponent } from './reasonapp/reasonapp.component';\r\nimport { ChannelsComponent } from './channels/channels.component';\r\nimport { RacksComponent } from './racks/racks.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { ProductmasterComponent } from './productmaster/productmaster.component';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { WarehousesComponent } from './warehouses/warehouses.component';\r\nimport { WarehousetypeComponent } from './warehousetype/warehousetype.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'pm',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'updateitem',\r\n     component: ProductsComponent\r\n  },\r\n\r\n  {\r\n    path: 'category',\r\n    component: CategoryComponent\r\n  },\r\n  {\r\n    path: 'pm',\r\n    component: ProductmasterComponent\r\n  },\r\n  {\r\n    path: 'reason',\r\n    component: ReasonappComponent\r\n  },\r\n\r\n  {\r\n    path: 'channel',\r\n    component: ChannelsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n// tslint:disable-next-line: class-name\r\nexport class configsRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}