{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/autocomplete.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/slider.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/expansion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/accordion.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/badge.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/progress-spinner.js"],"names":["_c0","MatAutocomplete_ng_template_0_Template","rf","ctx","ctx_r0","id","_classList","_c1","_uniqueAutocompleteIdCounter","MatAutocompleteSelectedEvent","source","option","MatAutocompleteBase","_MatAutocompleteMixinBase","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS","providedIn","factory","MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY","autoActiveFirstOption","_MatAutocompleteBase","_changeDetectorRef","_elementRef","defaults","_activeOptionChanges","EMPTY","showPanel","_isOpen","displayWith","optionSelected","opened","closed","optionActivated","_autoActiveFirstOption","_keyManager","options","withWrap","change","subscribe","index","emit","toArray","_setVisibility","unsubscribe","scrollTop","panel","nativeElement","length","_setVisibilityClasses","markForCheck","event","classList","_visibleClass","_hiddenClass","value","split","reduce","className","trim","ɵfac","_MatAutocompleteBase_Factory","t","ɵdir","type","viewQuery","_MatAutocompleteBase_Query","_t","template","first","inputs","panelWidth","outputs","features","ctorParameters","undefined","decorators","args","propDecorators","MatAutocomplete","arguments","MatAutocomplete_Factory","ɵMatAutocomplete_BaseFactory","ɵcmp","selectors","contentQueries","MatAutocomplete_ContentQueries","dirIndex","optionGroups","hostAttrs","disableRipple","exportAs","provide","useExisting","ngContentSelectors","decls","vars","consts","MatAutocomplete_Template","directives","styles","encapsulation","changeDetection","descendants","selector","None","OnPush","host","providers","_MatAutocompleteOriginBase","elementRef","_MatAutocompleteOriginBase_Factory","MatAutocompleteOrigin","MatAutocompleteOrigin_Factory","ɵMatAutocompleteOrigin_BaseFactory","AUTOCOMPLETE_OPTION_HEIGHT","AUTOCOMPLETE_PANEL_HEIGHT","MAT_AUTOCOMPLETE_SCROLL_STRATEGY","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MAT_AUTOCOMPLETE_VALUE_ACCESSOR","MatAutocompleteTrigger","multi","getMatAutocompleteMissingPanelError","Error","_MatAutocompleteTriggerBase","_element","_overlay","_viewContainerRef","_zone","scrollStrategy","_dir","_formField","_document","_viewportRuler","_componentDestroyed","_autocompleteDisabled","_manuallyFloatingLabel","_viewportSubscription","_canOpenOnNextFocus","_closeKeyEventStream","_windowBlurHandler","activeElement","panelOpen","_onChange","_onTouched","position","autocompleteAttribute","_overlayAttached","optionSelections","autocomplete","map","onSelectionChange","onStable","pipe","_scrollStrategy","window","_getWindow","runOutsideAngular","addEventListener","changes","_positionStrategy","_setStrategyPositions","_overlayRef","updatePosition","removeEventListener","_destroyPanel","complete","_attachOverlay","_floatLabel","_resetLabel","hasAttached","detach","_closingActionsSubscription","detectChanges","clickTarget","_isInsideShadowRoot","composedPath","target","formField","customOrigin","connectedTo","contains","overlayElement","Promise","resolve","then","_setTriggerValue","fn","isDisabled","disabled","keyCode","preventDefault","activeOption","_selectViaInteraction","_resetActiveItem","prevActiveItem","activeItem","isArrowKey","onKeydown","_canOpen","openPanel","_scrollToOption","activeItemIndex","parseFloat","_previousValue","shouldAnimate","floatLabel","_animateAndLockLabel","firstStable","optionChanges","reapplyLastPosition","wasOpen","panelClosingActions","_setValueAndClose","closePanel","dispose","toDisplay","inputValue","_control","_clearPreviousSelectedOption","focus","_emitSelectEvent","skip","forEach","selected","deselect","ngDevMode","overlayRef","_portal","create","_getOverlayConfig","keydownEvents","next","stopPropagation","updateSize","width","_getPanelWidth","setOrigin","_getConnectedElement","attach","_subscribeToClosingActions","positionStrategy","_getOverlayPosition","direction","strategy","flexibleConnectedTo","withFlexibleDimensions","withPush","belowPositions","originX","originY","overlayX","overlayY","panelClass","_aboveClass","abovePositions","positions","withPositions","getConnectedOverlayOrigin","_getHostWidth","getBoundingClientRect","setActiveItem","element","readOnly","_a","defaultView","labelCount","_setScrollTop","_getHostElement","newScrollPosition","offsetTop","offsetHeight","_getScrollTop","tabOut","_getOutsideClickStream","detachments","_MatAutocompleteTriggerBase_Factory","autocompleteDisabled","MatAutocompleteTrigger_Factory","ɵMatAutocompleteTrigger_BaseFactory","hostVars","hostBindings","MatAutocompleteTrigger_HostBindings","MatAutocompleteTrigger_focusin_HostBindingHandler","_handleFocus","MatAutocompleteTrigger_blur_HostBindingHandler","MatAutocompleteTrigger_input_HostBindingHandler","$event","_handleInput","MatAutocompleteTrigger_keydown_HostBindingHandler","_handleKeydown","toString","MatAutocompleteModule","ɵmod","ɵinj","MatAutocompleteModule_Factory","imports","ngJitMode","declarations","exports","activeEventOptions","passive","MIN_AUTO_TICK_SEPARATION","DISABLED_THUMB_GAP","MIN_VALUE_NONACTIVE_THUMB_GAP","MIN_VALUE_ACTIVE_THUMB_GAP","MAT_SLIDER_VALUE_ACCESSOR","MatSlider","MatSliderChange","MatSliderBase","_MatSliderMixinBase","_focusMonitor","tabIndex","_ngZone","_animationMode","_invert","_max","_min","_step","_thumbLabel","_tickInterval","_value","_vertical","input","valueChange","onTouched","_percent","_isSliding","_isActive","_tickIntervalPercent","_sliderDimensions","_controlValueAccessorChangeFn","_dirChangeSubscription","_pointerDown","isTouchEvent","button","run","oldValue","pointerPosition","getPointerPositionOnPage","_lastPointerEvent","_focusHostElement","_onMouseenter","_bindGlobalEvents","_updateValueFromPosition","_valueOnSlideStart","_emitInputEvent","_pointerMove","_pointerUp","_removeGlobalEvents","_emitChangeEvent","_windowBlur","parseInt","_blurHostElement","vertical","invert","percent","_isMinValue","thumbLabel","axis","scale","sign","_shouldInvertMouseCoords","transform","_getThumbGap","display","_getDirection","offset","tickSize","backgroundSize","rotate","shouldInvertAxis","_shouldInvertAxis","side","invertOffset","monitor","origin","stopMonitoring","_getSliderDimensions","_updateTickIntervalPercent","_increment","max","min","triggerEvent","document","isTouch","moveEventName","endEventName","numSteps","_clamp","step","pos","top","left","size","height","posComponent","y","x","exactValue","_calculateValue","closestValue","Math","round","_createChangeEvent","tickInterval","trackSize","pixelsPerStep","stepsPerTick","ceil","pixelsPerTick","percentage","_sliderWrapper","blur","v","_calculatePercentage","_roundToDecimal","pop","toFixed","MatSlider_Factory","MatSlider_Query","MatSlider_HostBindings","MatSlider_focus_HostBindingHandler","_onFocus","MatSlider_blur_HostBindingHandler","_onBlur","MatSlider_keydown_HostBindingHandler","_onKeydown","MatSlider_keyup_HostBindingHandler","_onKeyup","MatSlider_mouseenter_HostBindingHandler","MatSlider_selectstart_HostBindingHandler","color","MatSlider_Template","_getTrackBackgroundStyles","_getTrackFillStyles","_getTicksContainerStyles","_getTicksStyles","_getThumbContainerStyles","displayValue","String","point","touches","changedTouches","clientX","clientY","MatSliderModule","MatSliderModule_Factory","MatExpansionPanel_ng_template_5_Template","_c2","MatExpansionPanelHeader_span_4_Template","_getExpandedState","_c3","_c4","MAT_ACCORDION","EXPANSION_PANEL_ANIMATION_TIMING","matExpansionAnimations","indicatorRotate","bodyExpansion","visibility","MatExpansionPanelContent","_template","MatExpansionPanelContent_Factory","uniqueId","MAT_EXPANSION_PANEL_DEFAULT_OPTIONS","ɵ0","MatExpansionPanel","accordion","_uniqueSelectionDispatcher","defaultOptions","_hideToggle","afterExpand","afterCollapse","_inputChanges","_headerId","_bodyAnimationDone","fromState","toState","hideToggle","expanded","displayMode","_lazyContent","_body","focusedElement","bodyElement","_togglePosition","togglePosition","MatExpansionPanel_Factory","MatExpansionPanel_ContentQueries","MatExpansionPanel_Query","MatExpansionPanel_HostBindings","_hasSpacing","expandedChange","useValue","MatExpansionPanel_Template","MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener","data","animation","animations","MatExpansionPanelActionRow","MatExpansionPanelActionRow_Factory","MatExpansionPanelHeader","_parentChangeSubscription","accordionHideToggleChange","_stateChanges","_containsFocus","focusVia","expandedHeight","collapsedHeight","toggle","isExpanded","_isExpanded","_toggle","_handleHeaderKeydown","_handleHeaderFocus","MatExpansionPanelHeader_Factory","MatExpansionPanelHeader_HostBindings","MatExpansionPanelHeader_click_HostBindingHandler","MatExpansionPanelHeader_keydown_HostBindingHandler","_keydown","_getPanelId","_getHeaderHeight","_getTogglePosition","MatExpansionPanelHeader_Template","_showToggle","MatExpansionPanelDescription","MatExpansionPanelDescription_Factory","MatExpansionPanelTitle","MatExpansionPanelTitle_Factory","MatAccordion","_ownHeaders","_headers","headers","reset","filter","header","notifyOnChanges","withHomeAndEnd","updateActiveItem","show","MatAccordion_Factory","ɵMatAccordion_BaseFactory","MatAccordion_ContentQueries","MatAccordion_HostBindings","MatExpansionModule","MatExpansionModule_Factory","MatChipSelectionChange","isUserInput","MAT_CHIP_REMOVE","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MatChipBase","_MatChipMixinBase","MatChipAvatar","MatChipAvatar_Factory","MatChipTrailingIcon","MatChipTrailingIcon_Factory","MatChip","platform","globalRippleOptions","animationMode","_hasFocus","chipListSelectable","_chipListMultiple","_chipListDisabled","_selected","_selectable","_disabled","_removable","selectionChange","destroyed","removed","_addHostClassName","_chipRippleTarget","createElement","add","appendChild","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","basicChipAttrName","hasAttribute","tagName","toLowerCase","chip","_removeTriggerEvents","_dispatchSelectionChange","_markForCheck","removable","remove","selectable","toggleSelected","coercedValue","textContent","MatChip_Factory","MatChip_ContentQueries","avatar","trailingIcon","removeIcon","MatChip_HostBindings","MatChip_click_HostBindingHandler","_handleClick","MatChip_keydown_HostBindingHandler","MatChip_focus_HostBindingHandler","MatChip_blur_HostBindingHandler","_blur","ariaSelected","MatChipRemove","_parentChip","nodeName","setAttribute","parentChip","MatChipRemove_Factory","MatChipRemove_HostBindings","MatChipRemove_click_HostBindingHandler","MAT_CHIPS_DEFAULT_OPTIONS","MatChipListBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatChipListMixinBase","nextUniqueId","MatChipListChange","MatChipList","controlType","_lastDestroyedChipIndex","_destroyed","_uid","_tabIndex","_userTabIndex","_multiple","_compareWith","o1","o2","_required","ariaOrientation","valueAccessor","chips","withVerticalOrientation","withHorizontalOrientation","dir","_allowFocusEscape","_syncChipsState","_resetChips","_initializeSelection","_updateTabIndex","_updateFocusForDestroyedChips","stateChanges","_selectionModel","multiple","updateErrorState","_dropSubscriptions","inputElement","_chipInput","ids","_ariaDescribedby","join","_setSelectionByValue","_originatesFromChip","focused","setFirstItemActive","_focusInput","_isInputEmpty","setLastItemActive","newChipIndex","_clearSelection","Array","isArray","currentValue","_selectValue","_sortValues","correspondingChip","find","selectViaInteraction","select","clear","fallbackValue","valueToEmit","_hasFocusedChip","setTimeout","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","indexOf","_isValidIndex","chipBlurChanges","chipRemoveChanges","currentElement","parentElement","some","empty","writeValue","placeholder","_placeholder","MatChipList_Factory","MatChipList_ContentQueries","MatChipList_HostBindings","MatChipList_focus_HostBindingHandler","MatChipList_blur_HostBindingHandler","MatChipList_keydown_HostBindingHandler","role","required","errorState","compareWith","errorStateMatcher","MatChipList_Template","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_inputElement","_chipList","_emitChipEnd","addOnBlur","_isSeparatorKey","Set","has","registerInput","MatChipInput_Factory","MatChipInput_HostBindings","MatChipInput_keydown_HostBindingHandler","MatChipInput_blur_HostBindingHandler","MatChipInput_focus_HostBindingHandler","_focus","MatChipInput_input_HostBindingHandler","_onInput","invalid","chipList","CHIP_DECLARATIONS","MatChipsModule","MatChipsModule_Factory","nextId","CDK_ACCORDION","CdkAccordion","_openCloseAllActions","_multi","_openCloseAll","CdkAccordion_Factory","nextId$1","CdkAccordionItem","_expansionDispatcher","_openCloseAllSubscription","_expanded","_removeUniqueSelectionListener","listen","accordionId","_subscribeToOpenCloseAllActions","notify","CdkAccordionItem_Factory","CdkAccordionModule","CdkAccordionModule_Factory","MatBadgeBase","_MatBadgeMixinBase","MatBadge","_ariaDescriber","_renderer","_hasContent","_color","_overlap","_id","nodeType","ELEMENT_NODE","contentChange","_updateTextContent","badgeElement","_badgeElement","description","removeDescription","destroyNode","_createBadgeElement","_stringifyContent","activeClass","contentClass","_clearExistingBadges","requestAnimationFrame","newDescription","oldDescription","content","describe","colorPalette","cssClass","childCount","children","currentChild","removeChild","_setColor","val","_description","_updateHostAriaDescription","removeAttribute","_hidden","MatBadge_Factory","MatBadge_HostBindings","overlap","isAbove","isAfter","hidden","MatBadgeModule","MatBadgeModule_Factory","MatProgressSpinner__svg_circle_1_Template","_spinnerAnimationLabel","_getStrokeDashOffset","_getStrokeCircumference","_getCircleStrokeWidth","_getCircleRadius","MatProgressSpinner__svg_circle_2_Template","ctx_r1","MatSpinner__svg_circle_1_Template","MatSpinner__svg_circle_2_Template","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinnerBase","_MatProgressSpinnerMixinBase","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","INDETERMINATE_ANIMATION_TEMPLATE","MatProgressSpinner","_diameter","_fallbackAnimation","mode","trackedDiameters","_diameters","_getSpinnerAnimationLabel","head","set","EDGE","TRIDENT","_noopAnimations","_forceAnimations","strokeWidth","_styleRoot","_attachStyleNode","animationClass","viewBox","PI","styleRoot","currentDiameter","diameters","diametersForElement","get","styleTag","_getAnimationText","strokeCircumference","replace","_strokeWidth","newValue","MatProgressSpinner_Factory","MatProgressSpinner_HostBindings","MatProgressSpinner_Template","_getViewBox","WeakMap","MatSpinner","MatSpinner_Factory","MatSpinner_HostBindings","MatSpinner_Template","MatProgressSpinnerModule","MatProgressSpinnerModule_Factory"],"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","file":"default~empboard-empboard-module~forms-forms-module~storemanagement-storemanagement-module~ui-ui-module-es5.js","sourcesContent":["import { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, EventEmitter, Directive, ChangeDetectorRef, ElementRef, Inject, ViewChild, TemplateRef, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, forwardRef, ViewContainerRef, NgZone, Optional, Host, NgModule } from '@angular/core';\nimport { mixinDisableRipple, MAT_OPTION_PARENT_COMPONENT, MAT_OPTGROUP, MatOption, MatOptionSelectionChange, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport { Subscription, Subject, defer, merge, of, fromEvent } from 'rxjs';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { ViewportRuler, CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { ESCAPE, hasModifierKey, ENTER, UP_ARROW, DOWN_ARROW, TAB } from '@angular/cdk/keycodes';\nimport { _getShadowRoot } from '@angular/cdk/platform';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatFormField, MAT_FORM_FIELD } from '@angular/material/form-field';\nimport { take, switchMap, filter, map, tap, delay } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Autocomplete IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/cdk/overlay';\nimport * as ɵngcc3 from '@angular/cdk/bidi';\nimport * as ɵngcc4 from '@angular/cdk/scrolling';\nimport * as ɵngcc5 from '@angular/material/form-field';\n\nconst _c0 = [\"panel\"];\nfunction MatAutocomplete_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", ctx_r0._classList);\n} }\nconst _c1 = [\"*\"];\nlet _uniqueAutocompleteIdCounter = 0;\n/** Event object that is emitted when an autocomplete option is selected. */\nclass MatAutocompleteSelectedEvent {\n    constructor(\n    /** Reference to the autocomplete panel that emitted the event. */\n    source, \n    /** Option that was selected. */\n    option) {\n        this.source = source;\n        this.option = option;\n    }\n}\n// Boilerplate for applying mixins to MatAutocomplete.\n/** @docs-private */\nclass MatAutocompleteBase {\n}\nconst _MatAutocompleteMixinBase = mixinDisableRipple(MatAutocompleteBase);\n/** Injection token to be used to override the default options for `mat-autocomplete`. */\nconst MAT_AUTOCOMPLETE_DEFAULT_OPTIONS = new InjectionToken('mat-autocomplete-default-options', {\n    providedIn: 'root',\n    factory: MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY() {\n    return { autoActiveFirstOption: false };\n}\n/** Base class with all of the `MatAutocomplete` functionality. */\nclass _MatAutocompleteBase extends _MatAutocompleteMixinBase {\n    constructor(_changeDetectorRef, _elementRef, defaults) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._activeOptionChanges = Subscription.EMPTY;\n        /** Whether the autocomplete panel should be visible, depending on option length. */\n        this.showPanel = false;\n        this._isOpen = false;\n        /** Function that maps an option's control value to its display value in the trigger. */\n        this.displayWith = null;\n        /** Event that is emitted whenever an option from the list is selected. */\n        this.optionSelected = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is opened. */\n        this.opened = new EventEmitter();\n        /** Event that is emitted when the autocomplete panel is closed. */\n        this.closed = new EventEmitter();\n        /** Emits whenever an option is activated using the keyboard. */\n        this.optionActivated = new EventEmitter();\n        this._classList = {};\n        /** Unique ID to be used by autocomplete trigger's \"aria-owns\" property. */\n        this.id = `mat-autocomplete-${_uniqueAutocompleteIdCounter++}`;\n        this._autoActiveFirstOption = !!defaults.autoActiveFirstOption;\n    }\n    /** Whether the autocomplete panel is open. */\n    get isOpen() { return this._isOpen && this.showPanel; }\n    /**\n     * Whether the first option should be highlighted when the autocomplete panel is opened.\n     * Can be configured globally through the `MAT_AUTOCOMPLETE_DEFAULT_OPTIONS` token.\n     */\n    get autoActiveFirstOption() { return this._autoActiveFirstOption; }\n    set autoActiveFirstOption(value) {\n        this._autoActiveFirstOption = coerceBooleanProperty(value);\n    }\n    /**\n     * Takes classes set on the host mat-autocomplete element and applies them to the panel\n     * inside the overlay container to allow for easy styling.\n     */\n    set classList(value) {\n        if (value && value.length) {\n            this._classList = value.split(' ').reduce((classList, className) => {\n                classList[className.trim()] = true;\n                return classList;\n            }, {});\n        }\n        else {\n            this._classList = {};\n        }\n        this._setVisibilityClasses(this._classList);\n        this._elementRef.nativeElement.className = '';\n    }\n    ngAfterContentInit() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options).withWrap();\n        this._activeOptionChanges = this._keyManager.change.subscribe(index => {\n            this.optionActivated.emit({ source: this, option: this.options.toArray()[index] || null });\n        });\n        // Set the initial visibility state.\n        this._setVisibility();\n    }\n    ngOnDestroy() {\n        this._activeOptionChanges.unsubscribe();\n    }\n    /**\n     * Sets the panel scrollTop. This allows us to manually scroll to display options\n     * above or below the fold, as they are not actually being focused when active.\n     */\n    _setScrollTop(scrollTop) {\n        if (this.panel) {\n            this.panel.nativeElement.scrollTop = scrollTop;\n        }\n    }\n    /** Returns the panel's scrollTop. */\n    _getScrollTop() {\n        return this.panel ? this.panel.nativeElement.scrollTop : 0;\n    }\n    /** Panel should hide itself when the option list is empty. */\n    _setVisibility() {\n        this.showPanel = !!this.options.length;\n        this._setVisibilityClasses(this._classList);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits the `select` event. */\n    _emitSelectEvent(option) {\n        const event = new MatAutocompleteSelectedEvent(this, option);\n        this.optionSelected.emit(event);\n    }\n    /** Sets the autocomplete visibility classes on a classlist based on the panel is visible. */\n    _setVisibilityClasses(classList) {\n        classList[this._visibleClass] = this.showPanel;\n        classList[this._hiddenClass] = !this.showPanel;\n    }\n}\n_MatAutocompleteBase.ɵfac = function _MatAutocompleteBase_Factory(t) { return new (t || _MatAutocompleteBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_DEFAULT_OPTIONS)); };\n_MatAutocompleteBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteBase, viewQuery: function _MatAutocompleteBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panel = _t.first);\n    } }, inputs: { displayWith: \"displayWith\", autoActiveFirstOption: \"autoActiveFirstOption\", classList: [\"class\", \"classList\"], panelWidth: \"panelWidth\" }, outputs: { optionSelected: \"optionSelected\", opened: \"opened\", closed: \"closed\", optionActivated: \"optionActivated\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatAutocompleteBase.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS,] }] }\n];\n_MatAutocompleteBase.propDecorators = {\n    template: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    panel: [{ type: ViewChild, args: ['panel',] }],\n    displayWith: [{ type: Input }],\n    autoActiveFirstOption: [{ type: Input }],\n    panelWidth: [{ type: Input }],\n    optionSelected: [{ type: Output }],\n    opened: [{ type: Output }],\n    closed: [{ type: Output }],\n    optionActivated: [{ type: Output }],\n    classList: [{ type: Input, args: ['class',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_DEFAULT_OPTIONS]\n            }] }]; }, { displayWith: [{\n            type: Input\n        }], optionSelected: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], optionActivated: [{\n            type: Output\n        }], autoActiveFirstOption: [{\n            type: Input\n        }], classList: [{\n            type: Input,\n            args: ['class']\n        }], template: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], panel: [{\n            type: ViewChild,\n            args: ['panel']\n        }], panelWidth: [{\n            type: Input\n        }] }); })();\nclass MatAutocomplete extends _MatAutocompleteBase {\n    constructor() {\n        super(...arguments);\n        this._visibleClass = 'mat-autocomplete-visible';\n        this._hiddenClass = 'mat-autocomplete-hidden';\n    }\n}\nMatAutocomplete.ɵfac = function MatAutocomplete_Factory(t) { return ɵMatAutocomplete_BaseFactory(t || MatAutocomplete); };\nMatAutocomplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatAutocomplete, selectors: [[\"mat-autocomplete\"]], contentQueries: function MatAutocomplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_OPTGROUP, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.optionGroups = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [1, \"mat-autocomplete\"], inputs: { disableRipple: \"disableRipple\" }, exportAs: [\"matAutocomplete\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"role\", \"listbox\", 1, \"mat-autocomplete-panel\", 3, \"id\", \"ngClass\"], [\"panel\", \"\"]], template: function MatAutocomplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatAutocomplete_ng_template_0_Template, 3, 2, \"ng-template\");\n    } }, directives: [ɵngcc1.NgClass], styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatAutocomplete.propDecorators = {\n    optionGroups: [{ type: ContentChildren, args: [MAT_OPTGROUP, { descendants: true },] }],\n    options: [{ type: ContentChildren, args: [MatOption, { descendants: true },] }]\n};\nconst ɵMatAutocomplete_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocomplete);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocomplete, [{\n        type: Component,\n        args: [{\n                selector: 'mat-autocomplete',\n                template: \"<ng-template>\\n  <div class=\\\"mat-autocomplete-panel\\\" role=\\\"listbox\\\" [id]=\\\"id\\\" [ngClass]=\\\"_classList\\\" #panel>\\n    <ng-content></ng-content>\\n  </div>\\n</ng-template>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                exportAs: 'matAutocomplete',\n                inputs: ['disableRipple'],\n                host: {\n                    'class': 'mat-autocomplete'\n                },\n                providers: [\n                    { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatAutocomplete }\n                ],\n                styles: [\".mat-autocomplete-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;visibility:hidden;max-width:none;max-height:256px;position:relative;width:100%;border-bottom-left-radius:4px;border-bottom-right-radius:4px}.mat-autocomplete-panel.mat-autocomplete-visible{visibility:visible}.mat-autocomplete-panel.mat-autocomplete-hidden{visibility:hidden}.mat-autocomplete-panel-above .mat-autocomplete-panel{border-radius:0;border-top-left-radius:4px;border-top-right-radius:4px}.mat-autocomplete-panel .mat-divider-horizontal{margin-top:-1px}.cdk-high-contrast-active .mat-autocomplete-panel{outline:solid 1px}\\n\"]\n            }]\n    }], null, { optionGroups: [{\n            type: ContentChildren,\n            args: [MAT_OPTGROUP, { descendants: true }]\n        }], options: [{\n            type: ContentChildren,\n            args: [MatOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Base class containing all of the functionality for `MatAutocompleteOrigin`. */\nclass _MatAutocompleteOriginBase {\n    constructor(\n    /** Reference to the element on which the directive is applied. */\n    elementRef) {\n        this.elementRef = elementRef;\n    }\n}\n_MatAutocompleteOriginBase.ɵfac = function _MatAutocompleteOriginBase_Factory(t) { return new (t || _MatAutocompleteOriginBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\n_MatAutocompleteOriginBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteOriginBase });\n_MatAutocompleteOriginBase.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteOriginBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive applied to an element to make it usable\n * as a connection point for an autocomplete panel.\n */\nclass MatAutocompleteOrigin extends _MatAutocompleteOriginBase {\n}\nMatAutocompleteOrigin.ɵfac = function MatAutocompleteOrigin_Factory(t) { return ɵMatAutocompleteOrigin_BaseFactory(t || MatAutocompleteOrigin); };\nMatAutocompleteOrigin.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteOrigin, selectors: [[\"\", \"matAutocompleteOrigin\", \"\"]], exportAs: [\"matAutocompleteOrigin\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteOrigin_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteOrigin);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteOrigin, [{\n        type: Directive,\n        args: [{\n                selector: '[matAutocompleteOrigin]',\n                exportAs: 'matAutocompleteOrigin'\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the scrollTop of the panel. Because we are not\n * actually focusing the active item, scroll must be handled manually.\n */\n/**\n * The height of each autocomplete option.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 11.0.0\n */\nconst AUTOCOMPLETE_OPTION_HEIGHT = 48;\n/**\n * The total height of the autocomplete panel.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 11.0.0\n */\nconst AUTOCOMPLETE_PANEL_HEIGHT = 256;\n/** Injection token that determines the scroll handling while the autocomplete panel is open. */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY = new InjectionToken('mat-autocomplete-scroll-strategy');\n/** @docs-private */\nfunction MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_AUTOCOMPLETE_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Provider that allows the autocomplete to register as a ControlValueAccessor.\n * @docs-private\n */\nconst MAT_AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatAutocompleteTrigger),\n    multi: true\n};\n/**\n * Creates an error to be thrown when attempting to use an autocomplete trigger without a panel.\n * @docs-private\n */\nfunction getMatAutocompleteMissingPanelError() {\n    return Error('Attempting to open an undefined instance of `mat-autocomplete`. ' +\n        'Make sure that the id passed to the `matAutocomplete` is correct and that ' +\n        'you\\'re attempting to open it after the ngAfterContentInit hook.');\n}\n/** Base class with all of the `MatAutocompleteTrigger` functionality. */\nclass _MatAutocompleteTriggerBase {\n    constructor(_element, _overlay, _viewContainerRef, _zone, _changeDetectorRef, scrollStrategy, _dir, _formField, _document, _viewportRuler) {\n        this._element = _element;\n        this._overlay = _overlay;\n        this._viewContainerRef = _viewContainerRef;\n        this._zone = _zone;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._formField = _formField;\n        this._document = _document;\n        this._viewportRuler = _viewportRuler;\n        this._componentDestroyed = false;\n        this._autocompleteDisabled = false;\n        /** Whether or not the label state is being overridden. */\n        this._manuallyFloatingLabel = false;\n        /** Subscription to viewport size changes. */\n        this._viewportSubscription = Subscription.EMPTY;\n        /**\n         * Whether the autocomplete can open the next time it is focused. Used to prevent a focused,\n         * closed autocomplete from being reopened if the user switches to another browser tab and then\n         * comes back.\n         */\n        this._canOpenOnNextFocus = true;\n        /** Stream of keyboard events that can close the panel. */\n        this._closeKeyEventStream = new Subject();\n        /**\n         * Event handler for when the window is blurred. Needs to be an\n         * arrow function in order to preserve the context.\n         */\n        this._windowBlurHandler = () => {\n            // If the user blurred the window while the autocomplete is focused, it means that it'll be\n            // refocused when they come back. In this case we want to skip the first focus event, if the\n            // pane was closed, in order to avoid reopening it unintentionally.\n            this._canOpenOnNextFocus =\n                this._document.activeElement !== this._element.nativeElement || this.panelOpen;\n        };\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when autocomplete has been touched` */\n        this._onTouched = () => { };\n        /**\n         * Position of the autocomplete panel relative to the trigger element. A position of `auto`\n         * will render the panel underneath the trigger if there is enough space for it to fit in\n         * the viewport, otherwise the panel will be shown above it. If the position is set to\n         * `above` or `below`, the panel will always be shown above or below the trigger. no matter\n         * whether it fits completely in the viewport.\n         */\n        this.position = 'auto';\n        /**\n         * `autocomplete` attribute to be set on the input element.\n         * @docs-private\n         */\n        this.autocompleteAttribute = 'off';\n        this._overlayAttached = false;\n        /** Stream of autocomplete option selections. */\n        this.optionSelections = defer(() => {\n            if (this.autocomplete && this.autocomplete.options) {\n                return merge(...this.autocomplete.options.map(option => option.onSelectionChange));\n            }\n            // If there are any subscribers before `ngAfterViewInit`, the `autocomplete` will be undefined.\n            // Return a stream that we'll replace with the real one once everything is in place.\n            return this._zone.onStable\n                .pipe(take(1), switchMap(() => this.optionSelections));\n        });\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * Whether the autocomplete is disabled. When disabled, the element will\n     * act as a regular input and the user won't be able to open the panel.\n     */\n    get autocompleteDisabled() { return this._autocompleteDisabled; }\n    set autocompleteDisabled(value) {\n        this._autocompleteDisabled = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            this._zone.runOutsideAngular(() => window.addEventListener('blur', this._windowBlurHandler));\n        }\n    }\n    ngOnChanges(changes) {\n        if (changes['position'] && this._positionStrategy) {\n            this._setStrategyPositions(this._positionStrategy);\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    ngOnDestroy() {\n        const window = this._getWindow();\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('blur', this._windowBlurHandler);\n        }\n        this._viewportSubscription.unsubscribe();\n        this._componentDestroyed = true;\n        this._destroyPanel();\n        this._closeKeyEventStream.complete();\n    }\n    /** Whether or not the autocomplete panel is open. */\n    get panelOpen() {\n        return this._overlayAttached && this.autocomplete.showPanel;\n    }\n    /** Opens the autocomplete suggestion panel. */\n    openPanel() {\n        this._attachOverlay();\n        this._floatLabel();\n    }\n    /** Closes the autocomplete suggestion panel. */\n    closePanel() {\n        this._resetLabel();\n        if (!this._overlayAttached) {\n            return;\n        }\n        if (this.panelOpen) {\n            // Only emit if the panel was visible.\n            this.autocomplete.closed.emit();\n        }\n        this.autocomplete._isOpen = this._overlayAttached = false;\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n            this._closingActionsSubscription.unsubscribe();\n        }\n        // Note that in some cases this can end up being called after the component is destroyed.\n        // Add a check to ensure that we don't try to run change detection on a destroyed view.\n        if (!this._componentDestroyed) {\n            // We need to trigger change detection manually, because\n            // `fromEvent` doesn't seem to do it at the proper time.\n            // This ensures that the label is reset when the\n            // user clicks outside.\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /**\n     * Updates the position of the autocomplete suggestion panel to ensure that it fits all options\n     * within the viewport.\n     */\n    updatePosition() {\n        if (this._overlayAttached) {\n            this._overlayRef.updatePosition();\n        }\n    }\n    /**\n     * A stream of actions that should close the autocomplete panel, including\n     * when an option is selected, on blur, and when TAB is pressed.\n     */\n    get panelClosingActions() {\n        return merge(this.optionSelections, this.autocomplete._keyManager.tabOut.pipe(filter(() => this._overlayAttached)), this._closeKeyEventStream, this._getOutsideClickStream(), this._overlayRef ?\n            this._overlayRef.detachments().pipe(filter(() => this._overlayAttached)) :\n            of()).pipe(\n        // Normalize the output so we return a consistent type.\n        map(event => event instanceof MatOptionSelectionChange ? event : null));\n    }\n    /** The currently active option, coerced to MatOption type. */\n    get activeOption() {\n        if (this.autocomplete && this.autocomplete._keyManager) {\n            return this.autocomplete._keyManager.activeItem;\n        }\n        return null;\n    }\n    /** Stream of clicks outside of the autocomplete panel. */\n    _getOutsideClickStream() {\n        return merge(fromEvent(this._document, 'click'), fromEvent(this._document, 'touchend'))\n            .pipe(filter(event => {\n            // If we're in the Shadow DOM, the event target will be the shadow root, so we have to\n            // fall back to check the first element in the path of the click event.\n            const clickTarget = (this._isInsideShadowRoot && event.composedPath ? event.composedPath()[0] :\n                event.target);\n            const formField = this._formField ? this._formField._elementRef.nativeElement : null;\n            const customOrigin = this.connectedTo ? this.connectedTo.elementRef.nativeElement : null;\n            return this._overlayAttached && clickTarget !== this._element.nativeElement &&\n                (!formField || !formField.contains(clickTarget)) &&\n                (!customOrigin || !customOrigin.contains(clickTarget)) &&\n                (!!this._overlayRef && !this._overlayRef.overlayElement.contains(clickTarget));\n        }));\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        Promise.resolve(null).then(() => this._setTriggerValue(value));\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this._element.nativeElement.disabled = isDisabled;\n    }\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        // Prevent the default action on all escape key presses. This is here primarily to bring IE\n        // in line with other browsers. By default, pressing escape on IE will cause it to revert\n        // the input value to the one that it had on focus, however it won't dispatch any events\n        // which means that the model value will be out of sync with the view.\n        if (keyCode === ESCAPE && !hasModifierKey(event)) {\n            event.preventDefault();\n        }\n        if (this.activeOption && keyCode === ENTER && this.panelOpen) {\n            this.activeOption._selectViaInteraction();\n            this._resetActiveItem();\n            event.preventDefault();\n        }\n        else if (this.autocomplete) {\n            const prevActiveItem = this.autocomplete._keyManager.activeItem;\n            const isArrowKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW;\n            if (this.panelOpen || keyCode === TAB) {\n                this.autocomplete._keyManager.onKeydown(event);\n            }\n            else if (isArrowKey && this._canOpen()) {\n                this.openPanel();\n            }\n            if (isArrowKey || this.autocomplete._keyManager.activeItem !== prevActiveItem) {\n                this._scrollToOption(this.autocomplete._keyManager.activeItemIndex || 0);\n            }\n        }\n    }\n    _handleInput(event) {\n        let target = event.target;\n        let value = target.value;\n        // Based on `NumberValueAccessor` from forms.\n        if (target.type === 'number') {\n            value = value == '' ? null : parseFloat(value);\n        }\n        // If the input has a placeholder, IE will fire the `input` event on page load,\n        // focus and blur, in addition to when the user actually changed the value. To\n        // filter out all of the extra events, we save the value on focus and between\n        // `input` events, and we check whether it changed.\n        // See: https://connect.microsoft.com/IE/feedback/details/885747/\n        if (this._previousValue !== value) {\n            this._previousValue = value;\n            this._onChange(value);\n            if (this._canOpen() && this._document.activeElement === event.target) {\n                this.openPanel();\n            }\n        }\n    }\n    _handleFocus() {\n        if (!this._canOpenOnNextFocus) {\n            this._canOpenOnNextFocus = true;\n        }\n        else if (this._canOpen()) {\n            this._previousValue = this._element.nativeElement.value;\n            this._attachOverlay();\n            this._floatLabel(true);\n        }\n    }\n    /**\n     * In \"auto\" mode, the label will animate down as soon as focus is lost.\n     * This causes the value to jump when selecting an option with the mouse.\n     * This method manually floats the label until the panel can be closed.\n     * @param shouldAnimate Whether the label should be animated when it is floated.\n     */\n    _floatLabel(shouldAnimate = false) {\n        if (this._formField && this._formField.floatLabel === 'auto') {\n            if (shouldAnimate) {\n                this._formField._animateAndLockLabel();\n            }\n            else {\n                this._formField.floatLabel = 'always';\n            }\n            this._manuallyFloatingLabel = true;\n        }\n    }\n    /** If the label has been manually elevated, return it to its normal state. */\n    _resetLabel() {\n        if (this._manuallyFloatingLabel) {\n            this._formField.floatLabel = 'auto';\n            this._manuallyFloatingLabel = false;\n        }\n    }\n    /**\n     * This method listens to a stream of panel closing actions and resets the\n     * stream every time the option list changes.\n     */\n    _subscribeToClosingActions() {\n        const firstStable = this._zone.onStable.pipe(take(1));\n        const optionChanges = this.autocomplete.options.changes.pipe(tap(() => this._positionStrategy.reapplyLastPosition()), \n        // Defer emitting to the stream until the next tick, because changing\n        // bindings in here will cause \"changed after checked\" errors.\n        delay(0));\n        // When the zone is stable initially, and when the option list changes...\n        return merge(firstStable, optionChanges)\n            .pipe(\n        // create a new stream of panelClosingActions, replacing any previous streams\n        // that were created, and flatten it so our stream only emits closing events...\n        switchMap(() => {\n            const wasOpen = this.panelOpen;\n            this._resetActiveItem();\n            this.autocomplete._setVisibility();\n            if (this.panelOpen) {\n                this._overlayRef.updatePosition();\n                // If the `panelOpen` state changed, we need to make sure to emit the `opened`\n                // event, because we may not have emitted it when the panel was attached. This\n                // can happen if the users opens the panel and there are no options, but the\n                // options come in slightly later or as a result of the value changing.\n                if (wasOpen !== this.panelOpen) {\n                    this.autocomplete.opened.emit();\n                }\n            }\n            return this.panelClosingActions;\n        }), \n        // when the first closing event occurs...\n        take(1))\n            // set the value, close the panel, and complete.\n            .subscribe(event => this._setValueAndClose(event));\n    }\n    /** Destroys the autocomplete suggestion panel. */\n    _destroyPanel() {\n        if (this._overlayRef) {\n            this.closePanel();\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n    }\n    _setTriggerValue(value) {\n        const toDisplay = this.autocomplete && this.autocomplete.displayWith ?\n            this.autocomplete.displayWith(value) :\n            value;\n        // Simply falling back to an empty string if the display value is falsy does not work properly.\n        // The display value can also be the number zero and shouldn't fall back to an empty string.\n        const inputValue = toDisplay != null ? toDisplay : '';\n        // If it's used within a `MatFormField`, we should set it through the property so it can go\n        // through change detection.\n        if (this._formField) {\n            this._formField._control.value = inputValue;\n        }\n        else {\n            this._element.nativeElement.value = inputValue;\n        }\n        this._previousValue = inputValue;\n    }\n    /**\n     * This method closes the panel, and if a value is specified, also sets the associated\n     * control to that value. It will also mark the control as dirty if this interaction\n     * stemmed from the user.\n     */\n    _setValueAndClose(event) {\n        if (event && event.source) {\n            this._clearPreviousSelectedOption(event.source);\n            this._setTriggerValue(event.source.value);\n            this._onChange(event.source.value);\n            this._element.nativeElement.focus();\n            this.autocomplete._emitSelectEvent(event.source);\n        }\n        this.closePanel();\n    }\n    /**\n     * Clear any previous selected option and emit a selection change event for this option\n     */\n    _clearPreviousSelectedOption(skip) {\n        this.autocomplete.options.forEach(option => {\n            if (option !== skip && option.selected) {\n                option.deselect();\n            }\n        });\n    }\n    _attachOverlay() {\n        if (!this.autocomplete && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatAutocompleteMissingPanelError();\n        }\n        // We want to resolve this once, as late as possible so that we can be\n        // sure that the element has been moved into its final place in the DOM.\n        if (this._isInsideShadowRoot == null) {\n            this._isInsideShadowRoot = !!_getShadowRoot(this._element.nativeElement);\n        }\n        let overlayRef = this._overlayRef;\n        if (!overlayRef) {\n            this._portal = new TemplatePortal(this.autocomplete.template, this._viewContainerRef);\n            overlayRef = this._overlay.create(this._getOverlayConfig());\n            this._overlayRef = overlayRef;\n            // Use the `keydownEvents` in order to take advantage of\n            // the overlay event targeting provided by the CDK overlay.\n            overlayRef.keydownEvents().subscribe(event => {\n                // Close when pressing ESCAPE or ALT + UP_ARROW, based on the a11y guidelines.\n                // See: https://www.w3.org/TR/wai-aria-practices-1.1/#textbox-keyboard-interaction\n                if ((event.keyCode === ESCAPE && !hasModifierKey(event)) ||\n                    (event.keyCode === UP_ARROW && hasModifierKey(event, 'altKey'))) {\n                    this._resetActiveItem();\n                    this._closeKeyEventStream.next();\n                    // We need to stop propagation, otherwise the event will eventually\n                    // reach the input itself and cause the overlay to be reopened.\n                    event.stopPropagation();\n                    event.preventDefault();\n                }\n            });\n            this._viewportSubscription = this._viewportRuler.change().subscribe(() => {\n                if (this.panelOpen && overlayRef) {\n                    overlayRef.updateSize({ width: this._getPanelWidth() });\n                }\n            });\n        }\n        else {\n            // Update the trigger, panel width and direction, in case anything has changed.\n            this._positionStrategy.setOrigin(this._getConnectedElement());\n            overlayRef.updateSize({ width: this._getPanelWidth() });\n        }\n        if (overlayRef && !overlayRef.hasAttached()) {\n            overlayRef.attach(this._portal);\n            this._closingActionsSubscription = this._subscribeToClosingActions();\n        }\n        const wasOpen = this.panelOpen;\n        this.autocomplete._setVisibility();\n        this.autocomplete._isOpen = this._overlayAttached = true;\n        // We need to do an extra `panelOpen` check in here, because the\n        // autocomplete won't be shown if there are no options.\n        if (this.panelOpen && wasOpen !== this.panelOpen) {\n            this.autocomplete.opened.emit();\n        }\n    }\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._getOverlayPosition(),\n            scrollStrategy: this._scrollStrategy(),\n            width: this._getPanelWidth(),\n            direction: this._dir\n        });\n    }\n    _getOverlayPosition() {\n        const strategy = this._overlay.position()\n            .flexibleConnectedTo(this._getConnectedElement())\n            .withFlexibleDimensions(false)\n            .withPush(false);\n        this._setStrategyPositions(strategy);\n        this._positionStrategy = strategy;\n        return strategy;\n    }\n    /** Sets the positions on a position strategy based on the directive's input state. */\n    _setStrategyPositions(positionStrategy) {\n        // Note that we provide horizontal fallback positions, even though by default the dropdown\n        // width matches the input, because consumers can override the width. See #18854.\n        const belowPositions = [\n            { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' },\n            { originX: 'end', originY: 'bottom', overlayX: 'end', overlayY: 'top' }\n        ];\n        // The overlay edge connected to the trigger should have squared corners, while\n        // the opposite end has rounded corners. We apply a CSS class to swap the\n        // border-radius based on the overlay position.\n        const panelClass = this._aboveClass;\n        const abovePositions = [\n            { originX: 'start', originY: 'top', overlayX: 'start', overlayY: 'bottom', panelClass },\n            { originX: 'end', originY: 'top', overlayX: 'end', overlayY: 'bottom', panelClass }\n        ];\n        let positions;\n        if (this.position === 'above') {\n            positions = abovePositions;\n        }\n        else if (this.position === 'below') {\n            positions = belowPositions;\n        }\n        else {\n            positions = [...belowPositions, ...abovePositions];\n        }\n        positionStrategy.withPositions(positions);\n    }\n    _getConnectedElement() {\n        if (this.connectedTo) {\n            return this.connectedTo.elementRef;\n        }\n        return this._formField ? this._formField.getConnectedOverlayOrigin() : this._element;\n    }\n    _getPanelWidth() {\n        return this.autocomplete.panelWidth || this._getHostWidth();\n    }\n    /** Returns the width of the input element, so the panel width can match it. */\n    _getHostWidth() {\n        return this._getConnectedElement().nativeElement.getBoundingClientRect().width;\n    }\n    /**\n     * Resets the active item to -1 so arrow events will activate the\n     * correct options, or to 0 if the consumer opted into it.\n     */\n    _resetActiveItem() {\n        this.autocomplete._keyManager.setActiveItem(this.autocomplete.autoActiveFirstOption ? 0 : -1);\n    }\n    /** Determines whether the panel can be opened. */\n    _canOpen() {\n        const element = this._element.nativeElement;\n        return !element.readOnly && !element.disabled && !this._autocompleteDisabled;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        var _a;\n        return ((_a = this._document) === null || _a === void 0 ? void 0 : _a.defaultView) || window;\n    }\n    /** Scrolls to a particular option in the list. */\n    _scrollToOption(index) {\n        // Given that we are not actually focusing active options, we must manually adjust scroll\n        // to reveal options below the fold. First, we find the offset of the option from the top\n        // of the panel. If that offset is below the fold, the new scrollTop will be the offset -\n        // the panel height + the option height, so the active option will be just visible at the\n        // bottom of the panel. If that offset is above the top of the visible panel, the new scrollTop\n        // will become the offset. If that offset is visible within the panel already, the scrollTop is\n        // not adjusted.\n        const autocomplete = this.autocomplete;\n        const labelCount = _countGroupLabelsBeforeOption(index, autocomplete.options, autocomplete.optionGroups);\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            autocomplete._setScrollTop(0);\n        }\n        else {\n            const option = autocomplete.options.toArray()[index];\n            if (option) {\n                const element = option._getHostElement();\n                const newScrollPosition = _getOptionScrollPosition(element.offsetTop, element.offsetHeight, autocomplete._getScrollTop(), autocomplete.panel.nativeElement.offsetHeight);\n                autocomplete._setScrollTop(newScrollPosition);\n            }\n        }\n    }\n}\n_MatAutocompleteTriggerBase.ɵfac = function _MatAutocompleteTriggerBase_Factory(t) { return new (t || _MatAutocompleteTriggerBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_AUTOCOMPLETE_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(MAT_FORM_FIELD, 9), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ViewportRuler)); };\n_MatAutocompleteTriggerBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatAutocompleteTriggerBase, inputs: { position: [\"matAutocompletePosition\", \"position\"], autocompleteAttribute: [\"autocomplete\", \"autocompleteAttribute\"], autocompleteDisabled: [\"matAutocompleteDisabled\", \"autocompleteDisabled\"], autocomplete: [\"matAutocomplete\", \"autocomplete\"], connectedTo: [\"matAutocompleteConnectedTo\", \"connectedTo\"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n_MatAutocompleteTriggerBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Overlay },\n    { type: ViewContainerRef },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: MatFormField, decorators: [{ type: Optional }, { type: Inject, args: [MAT_FORM_FIELD,] }, { type: Host }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ViewportRuler }\n];\n_MatAutocompleteTriggerBase.propDecorators = {\n    autocomplete: [{ type: Input, args: ['matAutocomplete',] }],\n    position: [{ type: Input, args: ['matAutocompletePosition',] }],\n    connectedTo: [{ type: Input, args: ['matAutocompleteConnectedTo',] }],\n    autocompleteAttribute: [{ type: Input, args: ['autocomplete',] }],\n    autocompleteDisabled: [{ type: Input, args: ['matAutocompleteDisabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatAutocompleteTriggerBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc2.Overlay }, { type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc3.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc5.MatFormField, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_FORM_FIELD]\n            }, {\n                type: Host\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc4.ViewportRuler }]; }, { position: [{\n            type: Input,\n            args: ['matAutocompletePosition']\n        }], autocompleteAttribute: [{\n            type: Input,\n            args: ['autocomplete']\n        }], autocompleteDisabled: [{\n            type: Input,\n            args: ['matAutocompleteDisabled']\n        }], autocomplete: [{\n            type: Input,\n            args: ['matAutocomplete']\n        }], connectedTo: [{\n            type: Input,\n            args: ['matAutocompleteConnectedTo']\n        }] }); })();\nclass MatAutocompleteTrigger extends _MatAutocompleteTriggerBase {\n    constructor() {\n        super(...arguments);\n        this._aboveClass = 'mat-autocomplete-panel-above';\n    }\n}\nMatAutocompleteTrigger.ɵfac = function MatAutocompleteTrigger_Factory(t) { return ɵMatAutocompleteTrigger_BaseFactory(t || MatAutocompleteTrigger); };\nMatAutocompleteTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAutocompleteTrigger, selectors: [[\"input\", \"matAutocomplete\", \"\"], [\"textarea\", \"matAutocomplete\", \"\"]], hostAttrs: [1, \"mat-autocomplete-trigger\"], hostVars: 7, hostBindings: function MatAutocompleteTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focusin\", function MatAutocompleteTrigger_focusin_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatAutocompleteTrigger_blur_HostBindingHandler() { return ctx._onTouched(); })(\"input\", function MatAutocompleteTrigger_input_HostBindingHandler($event) { return ctx._handleInput($event); })(\"keydown\", function MatAutocompleteTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"autocomplete\", ctx.autocompleteAttribute)(\"role\", ctx.autocompleteDisabled ? null : \"combobox\")(\"aria-autocomplete\", ctx.autocompleteDisabled ? null : \"list\")(\"aria-activedescendant\", ctx.panelOpen && ctx.activeOption ? ctx.activeOption.id : null)(\"aria-expanded\", ctx.autocompleteDisabled ? null : ctx.panelOpen.toString())(\"aria-owns\", ctx.autocompleteDisabled || !ctx.panelOpen ? null : ctx.autocomplete == null ? null : ctx.autocomplete.id)(\"aria-haspopup\", !ctx.autocompleteDisabled);\n    } }, exportAs: [\"matAutocompleteTrigger\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_AUTOCOMPLETE_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatAutocompleteTrigger_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAutocompleteTrigger);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `input[matAutocomplete], textarea[matAutocomplete]`,\n                host: {\n                    'class': 'mat-autocomplete-trigger',\n                    '[attr.autocomplete]': 'autocompleteAttribute',\n                    '[attr.role]': 'autocompleteDisabled ? null : \"combobox\"',\n                    '[attr.aria-autocomplete]': 'autocompleteDisabled ? null : \"list\"',\n                    '[attr.aria-activedescendant]': '(panelOpen && activeOption) ? activeOption.id : null',\n                    '[attr.aria-expanded]': 'autocompleteDisabled ? null : panelOpen.toString()',\n                    '[attr.aria-owns]': '(autocompleteDisabled || !panelOpen) ? null : autocomplete?.id',\n                    '[attr.aria-haspopup]': '!autocompleteDisabled',\n                    // Note: we use `focusin`, as opposed to `focus`, in order to open the panel\n                    // a little earlier. This avoids issues where IE delays the focusing of the input.\n                    '(focusin)': '_handleFocus()',\n                    '(blur)': '_onTouched()',\n                    '(input)': '_handleInput($event)',\n                    '(keydown)': '_handleKeydown($event)'\n                },\n                exportAs: 'matAutocompleteTrigger',\n                providers: [MAT_AUTOCOMPLETE_VALUE_ACCESSOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatAutocompleteModule {\n}\nMatAutocompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatAutocompleteModule });\nMatAutocompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatAutocompleteModule_Factory(t) { return new (t || MatAutocompleteModule)(); }, providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            OverlayModule,\n            MatOptionModule,\n            MatCommonModule,\n            CommonModule\n        ], CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatAutocompleteModule, { declarations: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin]; }, imports: function () { return [OverlayModule,\n        MatOptionModule,\n        MatCommonModule,\n        CommonModule]; }, exports: function () { return [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin, CdkScrollableModule,\n        MatOptionModule,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAutocompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                    CommonModule\n                ],\n                exports: [\n                    MatAutocomplete,\n                    MatAutocompleteTrigger,\n                    MatAutocompleteOrigin,\n                    CdkScrollableModule,\n                    MatOptionModule,\n                    MatCommonModule,\n                ],\n                declarations: [MatAutocomplete, MatAutocompleteTrigger, MatAutocompleteOrigin],\n                providers: [MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_OPTION_HEIGHT, AUTOCOMPLETE_PANEL_HEIGHT, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS, MAT_AUTOCOMPLETE_DEFAULT_OPTIONS_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY, MAT_AUTOCOMPLETE_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_AUTOCOMPLETE_VALUE_ACCESSOR, MatAutocomplete, MatAutocompleteModule, MatAutocompleteOrigin, MatAutocompleteSelectedEvent, MatAutocompleteTrigger, _MatAutocompleteBase, _MatAutocompleteOriginBase, _MatAutocompleteTriggerBase, getMatAutocompleteMissingPanelError };\n\n//# sourceMappingURL=autocomplete.js.map","import { DOCUMENT, CommonModule } from '@angular/common';\nimport { forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Optional, Attribute, NgZone, Inject, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, DOWN_ARROW, RIGHT_ARROW, UP_ARROW, LEFT_ARROW, HOME, END, PAGE_DOWN, PAGE_UP } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/common';\n\nconst _c0 = [\"sliderWrapper\"];\nconst activeEventOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Visually, a 30px separation between tick marks looks best. This is very subjective but it is\n * the default separation we chose.\n */\nconst MIN_AUTO_TICK_SEPARATION = 30;\n/** The thumb gap size for a disabled slider. */\nconst DISABLED_THUMB_GAP = 7;\n/** The thumb gap size for a non-active slider at its minimum value. */\nconst MIN_VALUE_NONACTIVE_THUMB_GAP = 7;\n/** The thumb gap size for an active slider at its minimum value. */\nconst MIN_VALUE_ACTIVE_THUMB_GAP = 10;\n/**\n * Provider Expression that allows mat-slider to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)] and [formControl].\n * @docs-private\n */\nconst MAT_SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlider),\n    multi: true\n};\n/** A simple change event emitted by the MatSlider component. */\nclass MatSliderChange {\n}\n// Boilerplate for applying mixins to MatSlider.\n/** @docs-private */\nclass MatSliderBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatSliderMixinBase = mixinTabIndex(mixinColor(mixinDisabled(MatSliderBase), 'accent'));\n/**\n * Allows users to select from a range of values by moving the slider thumb. It is similar in\n * behavior to the native `<input type=\"range\">` element.\n */\nclass MatSlider extends _MatSliderMixinBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, _dir, tabIndex, _ngZone, _document, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._invert = false;\n        this._max = 100;\n        this._min = 0;\n        this._step = 1;\n        this._thumbLabel = false;\n        this._tickInterval = 0;\n        this._value = null;\n        this._vertical = false;\n        /** Event emitted when the slider value has changed. */\n        this.change = new EventEmitter();\n        /** Event emitted when the slider thumb moves. */\n        this.input = new EventEmitter();\n        /**\n         * Emits when the raw value of the slider changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this.onTouched = () => { };\n        this._percent = 0;\n        /**\n         * Whether or not the thumb is sliding.\n         * Used to determine if there should be a transition for the thumb and fill track.\n         */\n        this._isSliding = false;\n        /**\n         * Whether or not the slider is active (clicked or sliding).\n         * Used to shrink and grow the thumb as according to the Material Design spec.\n         */\n        this._isActive = false;\n        /** The size of a tick interval as a percentage of the size of the track. */\n        this._tickIntervalPercent = 0;\n        /** The dimensions of the slider. */\n        this._sliderDimensions = null;\n        this._controlValueAccessorChangeFn = () => { };\n        /** Subscription to the Directionality change EventEmitter. */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /** Called when the user has put their pointer down on the slider. */\n        this._pointerDown = (event) => {\n            // Don't do anything if the slider is disabled or the\n            // user is using anything other than the main mouse button.\n            if (this.disabled || this._isSliding || (!isTouchEvent(event) && event.button !== 0)) {\n                return;\n            }\n            this._ngZone.run(() => {\n                const oldValue = this.value;\n                const pointerPosition = getPointerPositionOnPage(event);\n                this._isSliding = true;\n                this._lastPointerEvent = event;\n                event.preventDefault();\n                this._focusHostElement();\n                this._onMouseenter(); // Simulate mouseenter in case this is a mobile device.\n                this._bindGlobalEvents(event);\n                this._focusHostElement();\n                this._updateValueFromPosition(pointerPosition);\n                this._valueOnSlideStart = oldValue;\n                // Emit a change and input event if the value changed.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            });\n        };\n        /**\n         * Called when the user has moved their pointer after\n         * starting to drag. Bound on the document level.\n         */\n        this._pointerMove = (event) => {\n            if (this._isSliding) {\n                // Prevent the slide from selecting anything else.\n                event.preventDefault();\n                const oldValue = this.value;\n                this._lastPointerEvent = event;\n                this._updateValueFromPosition(getPointerPositionOnPage(event));\n                // Native range elements always emit `input` events when the value changed while sliding.\n                if (oldValue != this.value) {\n                    this._emitInputEvent();\n                }\n            }\n        };\n        /** Called when the user has lifted their pointer. Bound on the document level. */\n        this._pointerUp = (event) => {\n            if (this._isSliding) {\n                event.preventDefault();\n                this._removeGlobalEvents();\n                this._isSliding = false;\n                if (this._valueOnSlideStart != this.value && !this.disabled) {\n                    this._emitChangeEvent();\n                }\n                this._valueOnSlideStart = this._lastPointerEvent = null;\n            }\n        };\n        /** Called when the window has lost focus. */\n        this._windowBlur = () => {\n            // If the window is blurred while dragging we need to stop dragging because the\n            // browser won't dispatch the `mouseup` and `touchend` events anymore.\n            if (this._lastPointerEvent) {\n                this._pointerUp(this._lastPointerEvent);\n            }\n        };\n        this._document = _document;\n        this.tabIndex = parseInt(tabIndex) || 0;\n        _ngZone.runOutsideAngular(() => {\n            const element = elementRef.nativeElement;\n            element.addEventListener('mousedown', this._pointerDown, activeEventOptions);\n            element.addEventListener('touchstart', this._pointerDown, activeEventOptions);\n        });\n    }\n    /** Whether the slider is inverted. */\n    get invert() { return this._invert; }\n    set invert(value) {\n        this._invert = coerceBooleanProperty(value);\n    }\n    /** The maximum value that the slider can have. */\n    get max() { return this._max; }\n    set max(v) {\n        this._max = coerceNumberProperty(v, this._max);\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The minimum value that the slider can have. */\n    get min() { return this._min; }\n    set min(v) {\n        this._min = coerceNumberProperty(v, this._min);\n        // If the value wasn't explicitly set by the user, set it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        this._percent = this._calculatePercentage(this._value);\n        // Since this also modifies the percentage, we need to let the change detection know.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The values at which the thumb will snap. */\n    get step() { return this._step; }\n    set step(v) {\n        this._step = coerceNumberProperty(v, this._step);\n        if (this._step % 1 !== 0) {\n            this._roundToDecimal = this._step.toString().split('.').pop().length;\n        }\n        // Since this could modify the label, we need to notify the change detection.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Whether or not to show the thumb label. */\n    get thumbLabel() { return this._thumbLabel; }\n    set thumbLabel(value) { this._thumbLabel = coerceBooleanProperty(value); }\n    /**\n     * How often to show ticks. Relative to the step so that a tick always appears on a step.\n     * Ex: Tick interval of 4 with a step of 3 will draw a tick every 4 steps (every 12 values).\n     */\n    get tickInterval() { return this._tickInterval; }\n    set tickInterval(value) {\n        if (value === 'auto') {\n            this._tickInterval = 'auto';\n        }\n        else if (typeof value === 'number' || typeof value === 'string') {\n            this._tickInterval = coerceNumberProperty(value, this._tickInterval);\n        }\n        else {\n            this._tickInterval = 0;\n        }\n    }\n    /** Value of the slider. */\n    get value() {\n        // If the value needs to be read and it is still uninitialized, initialize it to the min.\n        if (this._value === null) {\n            this.value = this._min;\n        }\n        return this._value;\n    }\n    set value(v) {\n        if (v !== this._value) {\n            let value = coerceNumberProperty(v);\n            // While incrementing by a decimal we can end up with values like 33.300000000000004.\n            // Truncate it to ensure that it matches the label and to make it easier to work with.\n            if (this._roundToDecimal) {\n                value = parseFloat(value.toFixed(this._roundToDecimal));\n            }\n            this._value = value;\n            this._percent = this._calculatePercentage(this._value);\n            // Since this also modifies the percentage, we need to let the change detection know.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the slider is vertical. */\n    get vertical() { return this._vertical; }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** The value to be used for display purposes. */\n    get displayValue() {\n        if (this.displayWith) {\n            // Value is never null but since setters and getters cannot have\n            // different types, the value getter is also typed to return null.\n            return this.displayWith(this.value);\n        }\n        // Note that this could be improved further by rounding something like 0.999 to 1 or\n        // 0.899 to 0.9, however it is very performance sensitive, because it gets called on\n        // every change detection cycle.\n        if (this._roundToDecimal && this.value && this.value % 1 !== 0) {\n            return this.value.toFixed(this._roundToDecimal);\n        }\n        return this.value || 0;\n    }\n    /** set focus to the host element */\n    focus(options) {\n        this._focusHostElement(options);\n    }\n    /** blur the host element */\n    blur() {\n        this._blurHostElement();\n    }\n    /** The percentage of the slider that coincides with the value. */\n    get percent() { return this._clamp(this._percent); }\n    /**\n     * Whether the axis of the slider is inverted.\n     * (i.e. whether moving the thumb in the positive x or y direction decreases the slider's value).\n     */\n    _shouldInvertAxis() {\n        // Standard non-inverted mode for a vertical slider should be dragging the thumb from bottom to\n        // top. However from a y-axis standpoint this is inverted.\n        return this.vertical ? !this.invert : this.invert;\n    }\n    /** Whether the slider is at its minimum value. */\n    _isMinValue() {\n        return this.percent === 0;\n    }\n    /**\n     * The amount of space to leave between the slider thumb and the track fill & track background\n     * elements.\n     */\n    _getThumbGap() {\n        if (this.disabled) {\n            return DISABLED_THUMB_GAP;\n        }\n        if (this._isMinValue() && !this.thumbLabel) {\n            return this._isActive ? MIN_VALUE_ACTIVE_THUMB_GAP : MIN_VALUE_NONACTIVE_THUMB_GAP;\n        }\n        return 0;\n    }\n    /** CSS styles for the track background element. */\n    _getTrackBackgroundStyles() {\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${1 - this.percent}, 1` : `${1 - this.percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '-' : '';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`\n        };\n    }\n    /** CSS styles for the track fill element. */\n    _getTrackFillStyles() {\n        const percent = this.percent;\n        const axis = this.vertical ? 'Y' : 'X';\n        const scale = this.vertical ? `1, ${percent}, 1` : `${percent}, 1, 1`;\n        const sign = this._shouldInvertMouseCoords() ? '' : '-';\n        return {\n            // scale3d avoids some rendering issues in Chrome. See #12071.\n            transform: `translate${axis}(${sign}${this._getThumbGap()}px) scale3d(${scale})`,\n            // iOS Safari has a bug where it won't re-render elements which start of as `scale(0)` until\n            // something forces a style recalculation on it. Since we'll end up with `scale(0)` when\n            // the value of the slider is 0, we can easily get into this situation. We force a\n            // recalculation by changing the element's `display` when it goes from 0 to any other value.\n            display: percent === 0 ? 'none' : ''\n        };\n    }\n    /** CSS styles for the ticks container element. */\n    _getTicksContainerStyles() {\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the ticks container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '' : '-';\n        let offset = this._tickIntervalPercent / 2 * 100;\n        return {\n            'transform': `translate${axis}(${sign}${offset}%)`\n        };\n    }\n    /** CSS styles for the ticks element. */\n    _getTicksStyles() {\n        let tickSize = this._tickIntervalPercent * 100;\n        let backgroundSize = this.vertical ? `2px ${tickSize}%` : `${tickSize}% 2px`;\n        let axis = this.vertical ? 'Y' : 'X';\n        // Depending on the direction we pushed the ticks container, push the ticks the opposite\n        // direction to re-center them but clip off the end edge. In RTL languages we need to flip the\n        // ticks 180 degrees so we're really cutting off the end edge abd not the start.\n        let sign = !this.vertical && this._getDirection() == 'rtl' ? '-' : '';\n        let rotate = !this.vertical && this._getDirection() == 'rtl' ? ' rotate(180deg)' : '';\n        let styles = {\n            'backgroundSize': backgroundSize,\n            // Without translateZ ticks sometimes jitter as the slider moves on Chrome & Firefox.\n            'transform': `translateZ(0) translate${axis}(${sign}${tickSize / 2}%)${rotate}`\n        };\n        if (this._isMinValue() && this._getThumbGap()) {\n            const shouldInvertAxis = this._shouldInvertAxis();\n            let side;\n            if (this.vertical) {\n                side = shouldInvertAxis ? 'Bottom' : 'Top';\n            }\n            else {\n                side = shouldInvertAxis ? 'Right' : 'Left';\n            }\n            styles[`padding${side}`] = `${this._getThumbGap()}px`;\n        }\n        return styles;\n    }\n    _getThumbContainerStyles() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        let axis = this.vertical ? 'Y' : 'X';\n        // For a horizontal slider in RTL languages we push the thumb container off the left edge\n        // instead of the right edge to avoid causing a horizontal scrollbar to appear.\n        let invertOffset = (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n        let offset = (invertOffset ? this.percent : 1 - this.percent) * 100;\n        return {\n            'transform': `translate${axis}(-${offset}%)`\n        };\n    }\n    /**\n     * Whether mouse events should be converted to a slider position by calculating their distance\n     * from the right or bottom edge of the slider as opposed to the top or left.\n     */\n    _shouldInvertMouseCoords() {\n        const shouldInvertAxis = this._shouldInvertAxis();\n        return (this._getDirection() == 'rtl' && !this.vertical) ? !shouldInvertAxis : shouldInvertAxis;\n    }\n    /** The language direction for this slider element. */\n    _getDirection() {\n        return (this._dir && this._dir.value == 'rtl') ? 'rtl' : 'ltr';\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe((origin) => {\n            this._isActive = !!origin && origin !== 'keyboard';\n            this._changeDetectorRef.detectChanges();\n        });\n        if (this._dir) {\n            this._dirChangeSubscription = this._dir.change.subscribe(() => {\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    ngOnDestroy() {\n        const element = this._elementRef.nativeElement;\n        element.removeEventListener('mousedown', this._pointerDown, activeEventOptions);\n        element.removeEventListener('touchstart', this._pointerDown, activeEventOptions);\n        this._lastPointerEvent = null;\n        this._removeGlobalEvents();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._dirChangeSubscription.unsubscribe();\n    }\n    _onMouseenter() {\n        if (this.disabled) {\n            return;\n        }\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onFocus() {\n        // We save the dimensions of the slider here so we can use them to update the spacing of the\n        // ticks and determine where on the slider click and slide events happen.\n        this._sliderDimensions = this._getSliderDimensions();\n        this._updateTickIntervalPercent();\n    }\n    _onBlur() {\n        this.onTouched();\n    }\n    _onKeydown(event) {\n        if (this.disabled || hasModifierKey(event)) {\n            return;\n        }\n        const oldValue = this.value;\n        switch (event.keyCode) {\n            case PAGE_UP:\n                this._increment(10);\n                break;\n            case PAGE_DOWN:\n                this._increment(-10);\n                break;\n            case END:\n                this.value = this.max;\n                break;\n            case HOME:\n                this.value = this.min;\n                break;\n            case LEFT_ARROW:\n                // NOTE: For a sighted user it would make more sense that when they press an arrow key on an\n                // inverted slider the thumb moves in that direction. However for a blind user, nothing\n                // about the slider indicates that it is inverted. They will expect left to be decrement,\n                // regardless of how it appears on the screen. For speakers ofRTL languages, they probably\n                // expect left to mean increment. Therefore we flip the meaning of the side arrow keys for\n                // RTL. For inverted sliders we prefer a good a11y experience to having it \"look right\" for\n                // sighted users, therefore we do not swap the meaning.\n                this._increment(this._getDirection() == 'rtl' ? 1 : -1);\n                break;\n            case UP_ARROW:\n                this._increment(1);\n                break;\n            case RIGHT_ARROW:\n                // See comment on LEFT_ARROW about the conditions under which we flip the meaning.\n                this._increment(this._getDirection() == 'rtl' ? -1 : 1);\n                break;\n            case DOWN_ARROW:\n                this._increment(-1);\n                break;\n            default:\n                // Return if the key is not one that we explicitly handle to avoid calling preventDefault on\n                // it.\n                return;\n        }\n        if (oldValue != this.value) {\n            this._emitInputEvent();\n            this._emitChangeEvent();\n        }\n        this._isSliding = true;\n        event.preventDefault();\n    }\n    _onKeyup() {\n        this._isSliding = false;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        return this._document.defaultView || window;\n    }\n    /**\n     * Binds our global move and end events. They're bound at the document level and only while\n     * dragging so that the user doesn't have to keep their pointer exactly over the slider\n     * as they're swiping across the screen.\n     */\n    _bindGlobalEvents(triggerEvent) {\n        // Note that we bind the events to the `document`, because it allows us to capture\n        // drag cancel events where the user's pointer is outside the browser window.\n        const document = this._document;\n        const isTouch = isTouchEvent(triggerEvent);\n        const moveEventName = isTouch ? 'touchmove' : 'mousemove';\n        const endEventName = isTouch ? 'touchend' : 'mouseup';\n        document.addEventListener(moveEventName, this._pointerMove, activeEventOptions);\n        document.addEventListener(endEventName, this._pointerUp, activeEventOptions);\n        if (isTouch) {\n            document.addEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        }\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.addEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Removes any global event listeners that we may have added. */\n    _removeGlobalEvents() {\n        const document = this._document;\n        document.removeEventListener('mousemove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('mouseup', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchmove', this._pointerMove, activeEventOptions);\n        document.removeEventListener('touchend', this._pointerUp, activeEventOptions);\n        document.removeEventListener('touchcancel', this._pointerUp, activeEventOptions);\n        const window = this._getWindow();\n        if (typeof window !== 'undefined' && window) {\n            window.removeEventListener('blur', this._windowBlur);\n        }\n    }\n    /** Increments the slider by the given number of steps (negative number decrements). */\n    _increment(numSteps) {\n        this.value = this._clamp((this.value || 0) + this.step * numSteps, this.min, this.max);\n    }\n    /** Calculate the new value from the new physical location. The value will always be snapped. */\n    _updateValueFromPosition(pos) {\n        if (!this._sliderDimensions) {\n            return;\n        }\n        let offset = this.vertical ? this._sliderDimensions.top : this._sliderDimensions.left;\n        let size = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n        let posComponent = this.vertical ? pos.y : pos.x;\n        // The exact value is calculated from the event and used to find the closest snap value.\n        let percent = this._clamp((posComponent - offset) / size);\n        if (this._shouldInvertMouseCoords()) {\n            percent = 1 - percent;\n        }\n        // Since the steps may not divide cleanly into the max value, if the user\n        // slid to 0 or 100 percent, we jump to the min/max value. This approach\n        // is slightly more intuitive than using `Math.ceil` below, because it\n        // follows the user's pointer closer.\n        if (percent === 0) {\n            this.value = this.min;\n        }\n        else if (percent === 1) {\n            this.value = this.max;\n        }\n        else {\n            const exactValue = this._calculateValue(percent);\n            // This calculation finds the closest step by finding the closest\n            // whole number divisible by the step relative to the min.\n            const closestValue = Math.round((exactValue - this.min) / this.step) * this.step + this.min;\n            // The value needs to snap to the min and max.\n            this.value = this._clamp(closestValue, this.min, this.max);\n        }\n    }\n    /** Emits a change event if the current value is different from the last emitted value. */\n    _emitChangeEvent() {\n        this._controlValueAccessorChangeFn(this.value);\n        this.valueChange.emit(this.value);\n        this.change.emit(this._createChangeEvent());\n    }\n    /** Emits an input event when the current value is different from the last emitted value. */\n    _emitInputEvent() {\n        this.input.emit(this._createChangeEvent());\n    }\n    /** Updates the amount of space between ticks as a percentage of the width of the slider. */\n    _updateTickIntervalPercent() {\n        if (!this.tickInterval || !this._sliderDimensions) {\n            return;\n        }\n        if (this.tickInterval == 'auto') {\n            let trackSize = this.vertical ? this._sliderDimensions.height : this._sliderDimensions.width;\n            let pixelsPerStep = trackSize * this.step / (this.max - this.min);\n            let stepsPerTick = Math.ceil(MIN_AUTO_TICK_SEPARATION / pixelsPerStep);\n            let pixelsPerTick = stepsPerTick * this.step;\n            this._tickIntervalPercent = pixelsPerTick / trackSize;\n        }\n        else {\n            this._tickIntervalPercent = this.tickInterval * this.step / (this.max - this.min);\n        }\n    }\n    /** Creates a slider change object from the specified value. */\n    _createChangeEvent(value = this.value) {\n        let event = new MatSliderChange();\n        event.source = this;\n        event.value = value;\n        return event;\n    }\n    /** Calculates the percentage of the slider that a value is. */\n    _calculatePercentage(value) {\n        return ((value || 0) - this.min) / (this.max - this.min);\n    }\n    /** Calculates the value a percentage of the slider corresponds to. */\n    _calculateValue(percentage) {\n        return this.min + percentage * (this.max - this.min);\n    }\n    /** Return a number between two numbers. */\n    _clamp(value, min = 0, max = 1) {\n        return Math.max(min, Math.min(value, max));\n    }\n    /**\n     * Get the bounding client rect of the slider track element.\n     * The track is used rather than the native element to ignore the extra space that the thumb can\n     * take up.\n     */\n    _getSliderDimensions() {\n        return this._sliderWrapper ? this._sliderWrapper.nativeElement.getBoundingClientRect() : null;\n    }\n    /**\n     * Focuses the native element.\n     * Currently only used to allow a blur event to fire but will be used with keyboard input later.\n     */\n    _focusHostElement(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Blurs the native element. */\n    _blurHostElement() {\n        this._elementRef.nativeElement.blur();\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n    }\n    /**\n     * Registers a callback to be triggered when the value has changed.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the component is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets whether the component should be disabled.\n     * Implemented as part of ControlValueAccessor.\n     * @param isDisabled\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n}\nMatSlider.ɵfac = function MatSlider_Factory(t) { return new (t || MatSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatSlider.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSlider, selectors: [[\"mat-slider\"]], viewQuery: function MatSlider_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._sliderWrapper = _t.first);\n    } }, hostAttrs: [\"role\", \"slider\", 1, \"mat-slider\", \"mat-focus-indicator\"], hostVars: 28, hostBindings: function MatSlider_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatSlider_focus_HostBindingHandler() { return ctx._onFocus(); })(\"blur\", function MatSlider_blur_HostBindingHandler() { return ctx._onBlur(); })(\"keydown\", function MatSlider_keydown_HostBindingHandler($event) { return ctx._onKeydown($event); })(\"keyup\", function MatSlider_keyup_HostBindingHandler() { return ctx._onKeyup(); })(\"mouseenter\", function MatSlider_mouseenter_HostBindingHandler() { return ctx._onMouseenter(); })(\"selectstart\", function MatSlider_selectstart_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", ctx.disabled)(\"aria-valuemax\", ctx.max)(\"aria-valuemin\", ctx.min)(\"aria-valuenow\", ctx.value)(\"aria-orientation\", ctx.vertical ? \"vertical\" : \"horizontal\");\n        ɵngcc0.ɵɵclassProp(\"mat-slider-disabled\", ctx.disabled)(\"mat-slider-has-ticks\", ctx.tickInterval)(\"mat-slider-horizontal\", !ctx.vertical)(\"mat-slider-axis-inverted\", ctx._shouldInvertAxis())(\"mat-slider-invert-mouse-coords\", ctx._shouldInvertMouseCoords())(\"mat-slider-sliding\", ctx._isSliding)(\"mat-slider-thumb-label-showing\", ctx.thumbLabel)(\"mat-slider-vertical\", ctx.vertical)(\"mat-slider-min-value\", ctx._isMinValue())(\"mat-slider-hide-last-tick\", ctx.disabled || ctx._isMinValue() && ctx._getThumbGap() && ctx._shouldInvertAxis())(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disabled: \"disabled\", color: \"color\", tabIndex: \"tabIndex\", invert: \"invert\", max: \"max\", min: \"min\", value: \"value\", step: \"step\", thumbLabel: \"thumbLabel\", tickInterval: \"tickInterval\", vertical: \"vertical\", displayWith: \"displayWith\" }, outputs: { change: \"change\", input: \"input\", valueChange: \"valueChange\" }, exportAs: [\"matSlider\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SLIDER_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 13, vars: 6, consts: [[1, \"mat-slider-wrapper\"], [\"sliderWrapper\", \"\"], [1, \"mat-slider-track-wrapper\"], [1, \"mat-slider-track-background\", 3, \"ngStyle\"], [1, \"mat-slider-track-fill\", 3, \"ngStyle\"], [1, \"mat-slider-ticks-container\", 3, \"ngStyle\"], [1, \"mat-slider-ticks\", 3, \"ngStyle\"], [1, \"mat-slider-thumb-container\", 3, \"ngStyle\"], [1, \"mat-slider-focus-ring\"], [1, \"mat-slider-thumb\"], [1, \"mat-slider-thumb-label\"], [1, \"mat-slider-thumb-label-text\"]], template: function MatSlider_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelement(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"div\", 10);\n        ɵngcc0.ɵɵelementStart(11, \"span\", 11);\n        ɵngcc0.ɵɵtext(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackBackgroundStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTrackFillStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksContainerStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getTicksStyles());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngStyle\", ctx._getThumbContainerStyles());\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵtextInterpolate(ctx.displayValue);\n    } }, directives: [ɵngcc3.NgStyle], styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatSlider.ctorParameters = () => [\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatSlider.propDecorators = {\n    invert: [{ type: Input }],\n    max: [{ type: Input }],\n    min: [{ type: Input }],\n    step: [{ type: Input }],\n    thumbLabel: [{ type: Input }],\n    tickInterval: [{ type: Input }],\n    value: [{ type: Input }],\n    displayWith: [{ type: Input }],\n    vertical: [{ type: Input }],\n    change: [{ type: Output }],\n    input: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    _sliderWrapper: [{ type: ViewChild, args: ['sliderWrapper',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSlider, [{\n        type: Component,\n        args: [{\n                selector: 'mat-slider',\n                exportAs: 'matSlider',\n                providers: [MAT_SLIDER_VALUE_ACCESSOR],\n                host: {\n                    '(focus)': '_onFocus()',\n                    '(blur)': '_onBlur()',\n                    '(keydown)': '_onKeydown($event)',\n                    '(keyup)': '_onKeyup()',\n                    '(mouseenter)': '_onMouseenter()',\n                    // On Safari starting to slide temporarily triggers text selection mode which\n                    // show the wrong cursor. We prevent it by stopping the `selectstart` event.\n                    '(selectstart)': '$event.preventDefault()',\n                    'class': 'mat-slider mat-focus-indicator',\n                    'role': 'slider',\n                    '[tabIndex]': 'tabIndex',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuemin]': 'min',\n                    '[attr.aria-valuenow]': 'value',\n                    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                    '[class.mat-slider-disabled]': 'disabled',\n                    '[class.mat-slider-has-ticks]': 'tickInterval',\n                    '[class.mat-slider-horizontal]': '!vertical',\n                    '[class.mat-slider-axis-inverted]': '_shouldInvertAxis()',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if mouse coordinates need to be inverted.\n                    '[class.mat-slider-invert-mouse-coords]': '_shouldInvertMouseCoords()',\n                    '[class.mat-slider-sliding]': '_isSliding',\n                    '[class.mat-slider-thumb-label-showing]': 'thumbLabel',\n                    '[class.mat-slider-vertical]': 'vertical',\n                    '[class.mat-slider-min-value]': '_isMinValue()',\n                    '[class.mat-slider-hide-last-tick]': 'disabled || _isMinValue() && _getThumbGap() && _shouldInvertAxis()',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"'\n                },\n                template: \"<div class=\\\"mat-slider-wrapper\\\" #sliderWrapper>\\n  <div class=\\\"mat-slider-track-wrapper\\\">\\n    <div class=\\\"mat-slider-track-background\\\" [ngStyle]=\\\"_getTrackBackgroundStyles()\\\"></div>\\n    <div class=\\\"mat-slider-track-fill\\\" [ngStyle]=\\\"_getTrackFillStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-ticks-container\\\" [ngStyle]=\\\"_getTicksContainerStyles()\\\">\\n    <div class=\\\"mat-slider-ticks\\\" [ngStyle]=\\\"_getTicksStyles()\\\"></div>\\n  </div>\\n  <div class=\\\"mat-slider-thumb-container\\\" [ngStyle]=\\\"_getThumbContainerStyles()\\\">\\n    <div class=\\\"mat-slider-focus-ring\\\"></div>\\n    <div class=\\\"mat-slider-thumb\\\"></div>\\n    <div class=\\\"mat-slider-thumb-label\\\">\\n      <span class=\\\"mat-slider-thumb-label-text\\\">{{displayValue}}</span>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['disabled', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-slider{display:inline-block;position:relative;box-sizing:border-box;padding:8px;outline:none;vertical-align:middle}.mat-slider:not(.mat-slider-disabled):active,.mat-slider.mat-slider-sliding:not(.mat-slider-disabled){cursor:-webkit-grabbing;cursor:grabbing}.mat-slider-wrapper{position:absolute}.mat-slider-track-wrapper{position:absolute;top:0;left:0;overflow:hidden}.mat-slider-track-fill{position:absolute;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-track-background{position:absolute;transform-origin:100% 100%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-ticks-container{position:absolute;left:0;top:0;overflow:hidden}.mat-slider-ticks{background-repeat:repeat;background-clip:content-box;box-sizing:border-box;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-container{position:absolute;z-index:1;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-focus-ring{position:absolute;width:30px;height:30px;border-radius:50%;transform:scale(0);opacity:0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider.cdk-keyboard-focused .mat-slider-focus-ring,.mat-slider.cdk-program-focused .mat-slider-focus-ring{transform:scale(1);opacity:1}.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb-label,.mat-slider:not(.mat-slider-disabled):not(.mat-slider-sliding) .mat-slider-thumb{cursor:-webkit-grab;cursor:grab}.mat-slider-thumb{position:absolute;right:-10px;bottom:-10px;box-sizing:border-box;width:20px;height:20px;border:3px solid transparent;border-radius:50%;transform:scale(0.7);transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-thumb-label{display:none;align-items:center;justify-content:center;position:absolute;width:28px;height:28px;border-radius:50%;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),border-radius 400ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.cdk-high-contrast-active .mat-slider-thumb-label{outline:solid 1px}.mat-slider-thumb-label-text{z-index:1;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-sliding .mat-slider-track-fill,.mat-slider-sliding .mat-slider-track-background,.mat-slider-sliding .mat-slider-thumb-container{transition-duration:0ms}.mat-slider-has-ticks .mat-slider-wrapper::after{content:\\\"\\\";position:absolute;border-width:0;border-style:solid;opacity:0;transition:opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after,.mat-slider-has-ticks:hover:not(.mat-slider-hide-last-tick) .mat-slider-wrapper::after{opacity:1}.mat-slider-has-ticks.cdk-focused:not(.mat-slider-disabled) .mat-slider-ticks,.mat-slider-has-ticks:hover:not(.mat-slider-disabled) .mat-slider-ticks{opacity:1}.mat-slider-thumb-label-showing .mat-slider-focus-ring{display:none}.mat-slider-thumb-label-showing .mat-slider-thumb-label{display:flex}.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:100% 100%}.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:0 0}.mat-slider:not(.mat-slider-disabled).cdk-focused.mat-slider-thumb-label-showing .mat-slider-thumb{transform:scale(0)}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label{border-radius:50% 50% 0}.mat-slider:not(.mat-slider-disabled).cdk-focused .mat-slider-thumb-label-text{opacity:1}.mat-slider:not(.mat-slider-disabled).cdk-mouse-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-touch-focused .mat-slider-thumb,.mat-slider:not(.mat-slider-disabled).cdk-program-focused .mat-slider-thumb{border-width:2px;transform:scale(1)}.mat-slider-disabled .mat-slider-focus-ring{transform:scale(0);opacity:0}.mat-slider-disabled .mat-slider-thumb{border-width:4px;transform:scale(0.5)}.mat-slider-disabled .mat-slider-thumb-label{display:none}.mat-slider-horizontal{height:48px;min-width:128px}.mat-slider-horizontal .mat-slider-wrapper{height:2px;top:23px;left:8px;right:8px}.mat-slider-horizontal .mat-slider-wrapper::after{height:2px;border-left-width:2px;right:0;top:0}.mat-slider-horizontal .mat-slider-track-wrapper{height:2px;width:100%}.mat-slider-horizontal .mat-slider-track-fill{height:2px;width:100%;transform:scaleX(0)}.mat-slider-horizontal .mat-slider-track-background{height:2px;width:100%;transform:scaleX(1)}.mat-slider-horizontal .mat-slider-ticks-container{height:2px;width:100%}.cdk-high-contrast-active .mat-slider-horizontal .mat-slider-ticks-container{height:0;outline:solid 2px;top:1px}.mat-slider-horizontal .mat-slider-ticks{height:2px;width:100%}.mat-slider-horizontal .mat-slider-thumb-container{width:100%;height:0;top:50%}.mat-slider-horizontal .mat-slider-focus-ring{top:-15px;right:-15px}.mat-slider-horizontal .mat-slider-thumb-label{right:-14px;top:-40px;transform:translateY(26px) scale(0.01) rotate(45deg)}.mat-slider-horizontal .mat-slider-thumb-label-text{transform:rotate(-45deg)}.mat-slider-horizontal.cdk-focused .mat-slider-thumb-label{transform:rotate(45deg)}.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label,.cdk-high-contrast-active .mat-slider-horizontal.cdk-focused .mat-slider-thumb-label-text{transform:none}.mat-slider-vertical{width:48px;min-height:128px}.mat-slider-vertical .mat-slider-wrapper{width:2px;top:8px;bottom:8px;left:23px}.mat-slider-vertical .mat-slider-wrapper::after{width:2px;border-top-width:2px;bottom:0;left:0}.mat-slider-vertical .mat-slider-track-wrapper{height:100%;width:2px}.mat-slider-vertical .mat-slider-track-fill{height:100%;width:2px;transform:scaleY(0)}.mat-slider-vertical .mat-slider-track-background{height:100%;width:2px;transform:scaleY(1)}.mat-slider-vertical .mat-slider-ticks-container{width:2px;height:100%}.cdk-high-contrast-active .mat-slider-vertical .mat-slider-ticks-container{width:0;outline:solid 2px;left:1px}.mat-slider-vertical .mat-slider-focus-ring{bottom:-15px;left:-15px}.mat-slider-vertical .mat-slider-ticks{width:2px;height:100%}.mat-slider-vertical .mat-slider-thumb-container{height:100%;width:0;left:50%}.mat-slider-vertical .mat-slider-thumb{-webkit-backface-visibility:hidden;backface-visibility:hidden}.mat-slider-vertical .mat-slider-thumb-label{bottom:-14px;left:-40px;transform:translateX(26px) scale(0.01) rotate(-45deg)}.mat-slider-vertical .mat-slider-thumb-label-text{transform:rotate(45deg)}.mat-slider-vertical.cdk-focused .mat-slider-thumb-label{transform:rotate(-45deg)}[dir=rtl] .mat-slider-wrapper::after{left:0;right:auto}[dir=rtl] .mat-slider-horizontal .mat-slider-track-fill{transform-origin:100% 100%}[dir=rtl] .mat-slider-horizontal .mat-slider-track-background{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-fill{transform-origin:0 0}[dir=rtl] .mat-slider-horizontal.mat-slider-axis-inverted .mat-slider-track-background{transform-origin:100% 100%}.mat-slider._mat-animation-noopable .mat-slider-track-fill,.mat-slider._mat-animation-noopable .mat-slider-track-background,.mat-slider._mat-animation-noopable .mat-slider-ticks,.mat-slider._mat-animation-noopable .mat-slider-thumb-container,.mat-slider._mat-animation-noopable .mat-slider-focus-ring,.mat-slider._mat-animation-noopable .mat-slider-thumb,.mat-slider._mat-animation-noopable .mat-slider-thumb-label,.mat-slider._mat-animation-noopable .mat-slider-thumb-label-text,.mat-slider._mat-animation-noopable .mat-slider-has-ticks .mat-slider-wrapper::after{transition:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { change: [{\n            type: Output\n        }], input: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], invert: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], min: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], step: [{\n            type: Input\n        }], thumbLabel: [{\n            type: Input\n        }], tickInterval: [{\n            type: Input\n        }], vertical: [{\n            type: Input\n        }], displayWith: [{\n            type: Input\n        }], _sliderWrapper: [{\n            type: ViewChild,\n            args: ['sliderWrapper']\n        }] }); })();\n/** Returns whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/** Gets the coordinates of a touch or mouse event relative to the viewport. */\nfunction getPointerPositionOnPage(event) {\n    // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n    const point = isTouchEvent(event) ? (event.touches[0] || event.changedTouches[0]) : event;\n    return { x: point.clientX, y: point.clientY };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSliderModule {\n}\nMatSliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSliderModule });\nMatSliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSliderModule_Factory(t) { return new (t || MatSliderModule)(); }, imports: [[CommonModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSliderModule, { declarations: function () { return [MatSlider]; }, imports: function () { return [CommonModule, MatCommonModule]; }, exports: function () { return [MatSlider, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSliderModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, MatCommonModule],\n                exports: [MatSlider, MatCommonModule],\n                declarations: [MatSlider]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDER_VALUE_ACCESSOR, MatSlider, MatSliderChange, MatSliderModule };\n\n//# sourceMappingURL=slider.js.map","import { CdkAccordionItem, CdkAccordion, CdkAccordionModule } from '@angular/cdk/accordion';\nimport { TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, TemplateRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, SkipSelf, Inject, ChangeDetectorRef, ViewContainerRef, Input, Output, ContentChild, ViewChild, Host, ElementRef, QueryList, ContentChildren, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { FocusMonitor, FocusKeyManager } from '@angular/cdk/a11y';\nimport { distinctUntilChanged, startWith, filter, take } from 'rxjs/operators';\nimport { ENTER, hasModifierKey, SPACE } from '@angular/cdk/keycodes';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, EMPTY, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Token used to provide a `MatAccordion` to `MatExpansionPanel`.\n * Used primarily to avoid circular imports between `MatAccordion` and `MatExpansionPanel`.\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nimport * as ɵngcc2 from '@angular/cdk/portal';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\nimport * as ɵngcc4 from '@angular/common';\n\nconst _c0 = [\"body\"];\nfunction MatExpansionPanel_ng_template_5_Template(rf, ctx) { }\nconst _c1 = [[[\"mat-expansion-panel-header\"]], \"*\", [[\"mat-action-row\"]]];\nconst _c2 = [\"mat-expansion-panel-header\", \"*\", \"mat-action-row\"];\nfunction MatExpansionPanelHeader_span_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 2);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@indicatorRotate\", ctx_r0._getExpandedState());\n} }\nconst _c3 = [[[\"mat-panel-title\"]], [[\"mat-panel-description\"]], \"*\"];\nconst _c4 = [\"mat-panel-title\", \"mat-panel-description\", \"*\"];\nconst MAT_ACCORDION = new InjectionToken('MAT_ACCORDION');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Time and timing curve for expansion panel animations. */\n// Note: Keep this in sync with the Sass variable for the panel header animation.\nconst EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\n/**\n * Animations used by the Material expansion panel.\n *\n * A bug in angular animation's `state` when ViewContainers are moved using ViewContainerRef.move()\n * causes the animation state of moved components to become `void` upon exit, and not update again\n * upon reentry into the DOM.  This can lead a to situation for the expansion panel where the state\n * of the panel is `expanded` or `collapsed` but the animation state is `void`.\n *\n * To correctly handle animating to the next state, we animate between `void` and `collapsed` which\n * are defined to have the same styles. Since angular animates from the current styles to the\n * destination state's style definition, in situations where we are moving from `void`'s styles to\n * `collapsed` this acts a noop since no style values change.\n *\n * In the case where angular's animation state is out of sync with the expansion panel's state, the\n * expansion panel being `expanded` and angular animations being `void`, the animation from the\n * `expanded`'s effective styles (though in a `void` animation state) to the collapsed state will\n * occur as expected.\n *\n * Angular Bug: https://github.com/angular/angular/issues/18847\n *\n * @docs-private\n */\nconst matExpansionAnimations = {\n    /** Animation that rotates the indicator arrow. */\n    indicatorRotate: trigger('indicatorRotate', [\n        state('collapsed, void', style({ transform: 'rotate(0deg)' })),\n        state('expanded', style({ transform: 'rotate(180deg)' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ]),\n    /** Animation that expands and collapses the panel content. */\n    bodyExpansion: trigger('bodyExpansion', [\n        state('collapsed, void', style({ height: '0px', visibility: 'hidden' })),\n        state('expanded', style({ height: '*', visibility: 'visible' })),\n        transition('expanded <=> collapsed, void => collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Expansion panel content that will be rendered lazily\n * after the panel is opened for the first time.\n */\nclass MatExpansionPanelContent {\n    constructor(_template) {\n        this._template = _template;\n    }\n}\nMatExpansionPanelContent.ɵfac = function MatExpansionPanelContent_Factory(t) { return new (t || MatExpansionPanelContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatExpansionPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelContent, selectors: [[\"ng-template\", \"matExpansionPanelContent\", \"\"]] });\nMatExpansionPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matExpansionPanelContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Counter for generating unique element ids. */\nlet uniqueId = 0;\n/**\n * Injection token that can be used to configure the defalt\n * options for the expansion panel component.\n */\nconst MAT_EXPANSION_PANEL_DEFAULT_OPTIONS = new InjectionToken('MAT_EXPANSION_PANEL_DEFAULT_OPTIONS');\nconst ɵ0 = undefined;\n/**\n * This component can be used as a single element to show expandable content, or as one of\n * multiple children of an element with the MatAccordion directive attached.\n */\nclass MatExpansionPanel extends CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _uniqueSelectionDispatcher, _viewContainerRef, _document, _animationMode, defaultOptions) {\n        super(accordion, _changeDetectorRef, _uniqueSelectionDispatcher);\n        this._viewContainerRef = _viewContainerRef;\n        this._animationMode = _animationMode;\n        this._hideToggle = false;\n        /** An event emitted after the body's expansion animation happens. */\n        this.afterExpand = new EventEmitter();\n        /** An event emitted after the body's collapse animation happens. */\n        this.afterCollapse = new EventEmitter();\n        /** Stream that emits for changes in `@Input` properties. */\n        this._inputChanges = new Subject();\n        /** ID for the associated header element. Used for a11y labelling. */\n        this._headerId = `mat-expansion-panel-header-${uniqueId++}`;\n        /** Stream of body animation done events. */\n        this._bodyAnimationDone = new Subject();\n        this.accordion = accordion;\n        this._document = _document;\n        // We need a Subject with distinctUntilChanged, because the `done` event\n        // fires twice on some browsers. See https://github.com/angular/angular/issues/24084\n        this._bodyAnimationDone.pipe(distinctUntilChanged((x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        })).subscribe(event => {\n            if (event.fromState !== 'void') {\n                if (event.toState === 'expanded') {\n                    this.afterExpand.emit();\n                }\n                else if (event.toState === 'collapsed') {\n                    this.afterCollapse.emit();\n                }\n            }\n        });\n        if (defaultOptions) {\n            this.hideToggle = defaultOptions.hideToggle;\n        }\n    }\n    /** Whether the toggle indicator should be hidden. */\n    get hideToggle() {\n        return this._hideToggle || (this.accordion && this.accordion.hideToggle);\n    }\n    set hideToggle(value) {\n        this._hideToggle = coerceBooleanProperty(value);\n    }\n    /** The position of the expansion indicator. */\n    get togglePosition() {\n        return this._togglePosition || (this.accordion && this.accordion.togglePosition);\n    }\n    set togglePosition(value) {\n        this._togglePosition = value;\n    }\n    /** Determines whether the expansion panel should have spacing between it and its siblings. */\n    _hasSpacing() {\n        if (this.accordion) {\n            return this.expanded && this.accordion.displayMode === 'default';\n        }\n        return false;\n    }\n    /** Gets the expanded state string. */\n    _getExpandedState() {\n        return this.expanded ? 'expanded' : 'collapsed';\n    }\n    /** Toggles the expanded state of the expansion panel. */\n    toggle() {\n        this.expanded = !this.expanded;\n    }\n    /** Sets the expanded state of the expansion panel to false. */\n    close() {\n        this.expanded = false;\n    }\n    /** Sets the expanded state of the expansion panel to true. */\n    open() {\n        this.expanded = true;\n    }\n    ngAfterContentInit() {\n        if (this._lazyContent) {\n            // Render the content as soon as the panel becomes open.\n            this.opened.pipe(startWith(null), filter(() => this.expanded && !this._portal), take(1)).subscribe(() => {\n                this._portal = new TemplatePortal(this._lazyContent._template, this._viewContainerRef);\n            });\n        }\n    }\n    ngOnChanges(changes) {\n        this._inputChanges.next(changes);\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._bodyAnimationDone.complete();\n        this._inputChanges.complete();\n    }\n    /** Checks whether the expansion panel's content contains the currently-focused element. */\n    _containsFocus() {\n        if (this._body) {\n            const focusedElement = this._document.activeElement;\n            const bodyElement = this._body.nativeElement;\n            return focusedElement === bodyElement || bodyElement.contains(focusedElement);\n        }\n        return false;\n    }\n}\nMatExpansionPanel.ɵfac = function MatExpansionPanel_Factory(t) { return new (t || MatExpansionPanel)(ɵngcc0.ɵɵdirectiveInject(MAT_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8)); };\nMatExpansionPanel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanel, selectors: [[\"mat-expansion-panel\"]], contentQueries: function MatExpansionPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelContent, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lazyContent = _t.first);\n    } }, viewQuery: function MatExpansionPanel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._body = _t.first);\n    } }, hostAttrs: [1, \"mat-expansion-panel\"], hostVars: 6, hostBindings: function MatExpansionPanel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx.expanded)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-expansion-panel-spacing\", ctx._hasSpacing());\n    } }, inputs: { disabled: \"disabled\", expanded: \"expanded\", hideToggle: \"hideToggle\", togglePosition: \"togglePosition\" }, outputs: { opened: \"opened\", closed: \"closed\", expandedChange: \"expandedChange\", afterExpand: \"afterExpand\", afterCollapse: \"afterCollapse\" }, exportAs: [\"matExpansionPanel\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n            // to the same accordion.\n            { provide: MAT_ACCORDION, useValue: ɵ0 },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c2, decls: 7, vars: 4, consts: [[\"role\", \"region\", 1, \"mat-expansion-panel-content\", 3, \"id\"], [\"body\", \"\"], [1, \"mat-expansion-panel-body\"], [3, \"cdkPortalOutlet\"]], template: function MatExpansionPanel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c1);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@bodyExpansion.done\", function MatExpansionPanel_Template_div_animation_bodyExpansion_done_1_listener($event) { return ctx._bodyAnimationDone.next($event); });\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵtemplate(5, MatExpansionPanel_ng_template_5_Template, 0, 0, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"@bodyExpansion\", ctx._getExpandedState())(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx._headerId);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", ctx._portal);\n    } }, directives: [ɵngcc2.CdkPortalOutlet], styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"], encapsulation: 2, data: { animation: [matExpansionAnimations.bodyExpansion] }, changeDetection: 0 });\nMatExpansionPanel.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: SkipSelf }, { type: Inject, args: [MAT_ACCORDION,] }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] }\n];\nMatExpansionPanel.propDecorators = {\n    hideToggle: [{ type: Input }],\n    togglePosition: [{ type: Input }],\n    afterExpand: [{ type: Output }],\n    afterCollapse: [{ type: Output }],\n    _lazyContent: [{ type: ContentChild, args: [MatExpansionPanelContent,] }],\n    _body: [{ type: ViewChild, args: ['body',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanel, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel',\n                exportAs: 'matExpansionPanel',\n                template: \"<ng-content select=\\\"mat-expansion-panel-header\\\"></ng-content>\\n<div class=\\\"mat-expansion-panel-content\\\"\\n     role=\\\"region\\\"\\n     [@bodyExpansion]=\\\"_getExpandedState()\\\"\\n     (@bodyExpansion.done)=\\\"_bodyAnimationDone.next($event)\\\"\\n     [attr.aria-labelledby]=\\\"_headerId\\\"\\n     [id]=\\\"id\\\"\\n     #body>\\n  <div class=\\\"mat-expansion-panel-body\\\">\\n    <ng-content></ng-content>\\n    <ng-template [cdkPortalOutlet]=\\\"_portal\\\"></ng-template>\\n  </div>\\n  <ng-content select=\\\"mat-action-row\\\"></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                inputs: ['disabled', 'expanded'],\n                outputs: ['opened', 'closed', 'expandedChange'],\n                animations: [matExpansionAnimations.bodyExpansion],\n                providers: [\n                    // Provide MatAccordion as undefined to prevent nested expansion panels from registering\n                    // to the same accordion.\n                    { provide: MAT_ACCORDION, useValue: ɵ0 },\n                ],\n                host: {\n                    'class': 'mat-expansion-panel',\n                    '[class.mat-expanded]': 'expanded',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-expansion-panel-spacing]': '_hasSpacing()'\n                },\n                styles: [\".mat-expansion-panel{box-sizing:content-box;display:block;margin:0;border-radius:4px;overflow:hidden;transition:margin 225ms cubic-bezier(0.4, 0, 0.2, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);position:relative}.mat-accordion .mat-expansion-panel:not(.mat-expanded),.mat-accordion .mat-expansion-panel:not(.mat-expansion-panel-spacing){border-radius:0}.mat-accordion .mat-expansion-panel:first-of-type{border-top-right-radius:4px;border-top-left-radius:4px}.mat-accordion .mat-expansion-panel:last-of-type{border-bottom-right-radius:4px;border-bottom-left-radius:4px}.cdk-high-contrast-active .mat-expansion-panel{outline:solid 1px}.mat-expansion-panel.ng-animate-disabled,.ng-animate-disabled .mat-expansion-panel,.mat-expansion-panel._mat-animation-noopable{transition:none}.mat-expansion-panel-content{display:flex;flex-direction:column;overflow:visible}.mat-expansion-panel-body{padding:0 24px 16px}.mat-expansion-panel-spacing{margin:16px 0}.mat-accordion>.mat-expansion-panel-spacing:first-child,.mat-accordion>*:first-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-top:0}.mat-accordion>.mat-expansion-panel-spacing:last-child,.mat-accordion>*:last-child:not(.mat-expansion-panel) .mat-expansion-panel-spacing{margin-bottom:0}.mat-action-row{border-top-style:solid;border-top-width:1px;display:flex;flex-direction:row;justify-content:flex-end;padding:16px 8px 16px 24px}.mat-action-row button.mat-button-base,.mat-action-row button.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-action-row button.mat-button-base,[dir=rtl] .mat-action-row button.mat-mdc-button-base{margin-left:0;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }, {\n                type: Inject,\n                args: [MAT_ACCORDION]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }]; }, { afterExpand: [{\n            type: Output\n        }], afterCollapse: [{\n            type: Output\n        }], hideToggle: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], _lazyContent: [{\n            type: ContentChild,\n            args: [MatExpansionPanelContent]\n        }], _body: [{\n            type: ViewChild,\n            args: ['body']\n        }] }); })();\n/**\n * Actions of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelActionRow {\n}\nMatExpansionPanelActionRow.ɵfac = function MatExpansionPanelActionRow_Factory(t) { return new (t || MatExpansionPanelActionRow)(); };\nMatExpansionPanelActionRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelActionRow, selectors: [[\"mat-action-row\"]], hostAttrs: [1, \"mat-action-row\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelActionRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-action-row',\n                host: {\n                    class: 'mat-action-row'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header element of a `<mat-expansion-panel>`.\n */\nclass MatExpansionPanelHeader {\n    constructor(panel, _element, _focusMonitor, _changeDetectorRef, defaultOptions, _animationMode) {\n        this.panel = panel;\n        this._element = _element;\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        this._parentChangeSubscription = Subscription.EMPTY;\n        const accordionHideToggleChange = panel.accordion ?\n            panel.accordion._stateChanges.pipe(filter(changes => !!(changes['hideToggle'] || changes['togglePosition']))) :\n            EMPTY;\n        // Since the toggle state depends on an @Input on the panel, we\n        // need to subscribe and trigger change detection manually.\n        this._parentChangeSubscription =\n            merge(panel.opened, panel.closed, accordionHideToggleChange, panel._inputChanges.pipe(filter(changes => {\n                return !!(changes['hideToggle'] ||\n                    changes['disabled'] ||\n                    changes['togglePosition']);\n            })))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        // Avoids focus being lost if the panel contained the focused element and was closed.\n        panel.closed\n            .pipe(filter(() => panel._containsFocus()))\n            .subscribe(() => _focusMonitor.focusVia(_element, 'program'));\n        if (defaultOptions) {\n            this.expandedHeight = defaultOptions.expandedHeight;\n            this.collapsedHeight = defaultOptions.collapsedHeight;\n        }\n    }\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled() {\n        return this.panel.disabled;\n    }\n    /** Toggles the expanded state of the panel. */\n    _toggle() {\n        if (!this.disabled) {\n            this.panel.toggle();\n        }\n    }\n    /** Gets whether the panel is expanded. */\n    _isExpanded() {\n        return this.panel.expanded;\n    }\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState() {\n        return this.panel._getExpandedState();\n    }\n    /** Gets the panel id. */\n    _getPanelId() {\n        return this.panel.id;\n    }\n    /** Gets the toggle position for the header. */\n    _getTogglePosition() {\n        return this.panel.togglePosition;\n    }\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle() {\n        return !this.panel.hideToggle && !this.panel.disabled;\n    }\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight() {\n        const isExpanded = this._isExpanded();\n        if (isExpanded && this.expandedHeight) {\n            return this.expandedHeight;\n        }\n        else if (!isExpanded && this.collapsedHeight) {\n            return this.collapsedHeight;\n        }\n        return null;\n    }\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event) {\n        switch (event.keyCode) {\n            // Toggle for space and enter keys.\n            case SPACE:\n            case ENTER:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this._toggle();\n                }\n                break;\n            default:\n                if (this.panel.accordion) {\n                    this.panel.accordion._handleHeaderKeydown(event);\n                }\n                return;\n        }\n    }\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin = 'program', options) {\n        this._focusMonitor.focusVia(this._element, origin, options);\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._element).subscribe(origin => {\n            if (origin && this.panel.accordion) {\n                this.panel.accordion._handleHeaderFocus(this);\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._parentChangeSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._element);\n    }\n}\nMatExpansionPanelHeader.ɵfac = function MatExpansionPanelHeader_Factory(t) { return new (t || MatExpansionPanelHeader)(ɵngcc0.ɵɵdirectiveInject(MatExpansionPanel, 1), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatExpansionPanelHeader.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatExpansionPanelHeader, selectors: [[\"mat-expansion-panel-header\"]], hostAttrs: [\"role\", \"button\", 1, \"mat-expansion-panel-header\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatExpansionPanelHeader_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatExpansionPanelHeader_click_HostBindingHandler() { return ctx._toggle(); })(\"keydown\", function MatExpansionPanelHeader_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.panel._headerId)(\"tabindex\", ctx.disabled ? -1 : 0)(\"aria-controls\", ctx._getPanelId())(\"aria-expanded\", ctx._isExpanded())(\"aria-disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx._getHeaderHeight());\n        ɵngcc0.ɵɵclassProp(\"mat-expanded\", ctx._isExpanded())(\"mat-expansion-toggle-indicator-after\", ctx._getTogglePosition() === \"after\")(\"mat-expansion-toggle-indicator-before\", ctx._getTogglePosition() === \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { expandedHeight: \"expandedHeight\", collapsedHeight: \"collapsedHeight\" }, ngContentSelectors: _c4, decls: 5, vars: 1, consts: [[1, \"mat-content\"], [\"class\", \"mat-expansion-indicator\", 4, \"ngIf\"], [1, \"mat-expansion-indicator\"]], template: function MatExpansionPanelHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵprojection(2, 1);\n        ɵngcc0.ɵɵprojection(3, 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, MatExpansionPanelHeader_span_4_Template, 1, 1, \"span\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._showToggle());\n    } }, directives: [ɵngcc4.NgIf], styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"], encapsulation: 2, data: { animation: [\n            matExpansionAnimations.indicatorRotate,\n        ] }, changeDetection: 0 });\nMatExpansionPanelHeader.ctorParameters = () => [\n    { type: MatExpansionPanel, decorators: [{ type: Host }] },\n    { type: ElementRef },\n    { type: FocusMonitor },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatExpansionPanelHeader.propDecorators = {\n    expandedHeight: [{ type: Input }],\n    collapsedHeight: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-expansion-panel-header',\n                template: \"<span class=\\\"mat-content\\\">\\n  <ng-content select=\\\"mat-panel-title\\\"></ng-content>\\n  <ng-content select=\\\"mat-panel-description\\\"></ng-content>\\n  <ng-content></ng-content>\\n</span>\\n<span [@indicatorRotate]=\\\"_getExpandedState()\\\" *ngIf=\\\"_showToggle()\\\"\\n      class=\\\"mat-expansion-indicator\\\"></span>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                animations: [\n                    matExpansionAnimations.indicatorRotate,\n                ],\n                host: {\n                    'class': 'mat-expansion-panel-header mat-focus-indicator',\n                    'role': 'button',\n                    '[attr.id]': 'panel._headerId',\n                    '[attr.tabindex]': 'disabled ? -1 : 0',\n                    '[attr.aria-controls]': '_getPanelId()',\n                    '[attr.aria-expanded]': '_isExpanded()',\n                    '[attr.aria-disabled]': 'panel.disabled',\n                    '[class.mat-expanded]': '_isExpanded()',\n                    '[class.mat-expansion-toggle-indicator-after]': `_getTogglePosition() === 'after'`,\n                    '[class.mat-expansion-toggle-indicator-before]': `_getTogglePosition() === 'before'`,\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[style.height]': '_getHeaderHeight()',\n                    '(click)': '_toggle()',\n                    '(keydown)': '_keydown($event)'\n                },\n                styles: [\".mat-expansion-panel-header{display:flex;flex-direction:row;align-items:center;padding:0 24px;border-radius:inherit;transition:height 225ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-expansion-panel-header._mat-animation-noopable{transition:none}.mat-expansion-panel-header:focus,.mat-expansion-panel-header:hover{outline:none}.mat-expansion-panel-header.mat-expanded:focus,.mat-expansion-panel-header.mat-expanded:hover{background:inherit}.mat-expansion-panel-header:not([aria-disabled=true]){cursor:pointer}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before{flex-direction:row-reverse}.mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 16px 0 0}[dir=rtl] .mat-expansion-panel-header.mat-expansion-toggle-indicator-before .mat-expansion-indicator{margin:0 0 0 16px}.mat-content{display:flex;flex:1;flex-direction:row;overflow:hidden}.mat-expansion-panel-header-title,.mat-expansion-panel-header-description{display:flex;flex-grow:1;margin-right:16px}[dir=rtl] .mat-expansion-panel-header-title,[dir=rtl] .mat-expansion-panel-header-description{margin-right:0;margin-left:16px}.mat-expansion-panel-header-description{flex-grow:2}.mat-expansion-indicator::after{border-style:solid;border-width:0 2px 2px 0;content:\\\"\\\";display:inline-block;padding:3px;transform:rotate(45deg);vertical-align:middle}\\n\"]\n            }]\n    }], function () { return [{ type: MatExpansionPanel, decorators: [{\n                type: Host\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc3.FocusMonitor }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_EXPANSION_PANEL_DEFAULT_OPTIONS]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { expandedHeight: [{\n            type: Input\n        }], collapsedHeight: [{\n            type: Input\n        }] }); })();\n/**\n * Description element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelDescription {\n}\nMatExpansionPanelDescription.ɵfac = function MatExpansionPanelDescription_Factory(t) { return new (t || MatExpansionPanelDescription)(); };\nMatExpansionPanelDescription.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelDescription, selectors: [[\"mat-panel-description\"]], hostAttrs: [1, \"mat-expansion-panel-header-description\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelDescription, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-description',\n                host: {\n                    class: 'mat-expansion-panel-header-description'\n                }\n            }]\n    }], null, null); })();\n/**\n * Title element of a `<mat-expansion-panel-header>`.\n */\nclass MatExpansionPanelTitle {\n}\nMatExpansionPanelTitle.ɵfac = function MatExpansionPanelTitle_Factory(t) { return new (t || MatExpansionPanelTitle)(); };\nMatExpansionPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatExpansionPanelTitle, selectors: [[\"mat-panel-title\"]], hostAttrs: [1, \"mat-expansion-panel-header-title\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionPanelTitle, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-panel-title',\n                host: {\n                    class: 'mat-expansion-panel-header-title'\n                }\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive for a Material Design Accordion.\n */\nclass MatAccordion extends CdkAccordion {\n    constructor() {\n        super(...arguments);\n        /** Headers belonging to this accordion. */\n        this._ownHeaders = new QueryList();\n        this._hideToggle = false;\n        /**\n         * Display mode used for all expansion panels in the accordion. Currently two display\n         * modes exist:\n         *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n         *     panel at a different elevation from the rest of the accordion.\n         *  flat - no spacing is placed around expanded panels, showing all panels at the same\n         *     elevation.\n         */\n        this.displayMode = 'default';\n        /** The position of the expansion indicator. */\n        this.togglePosition = 'after';\n    }\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle() { return this._hideToggle; }\n    set hideToggle(show) { this._hideToggle = coerceBooleanProperty(show); }\n    ngAfterContentInit() {\n        this._headers.changes\n            .pipe(startWith(this._headers))\n            .subscribe((headers) => {\n            this._ownHeaders.reset(headers.filter(header => header.panel.accordion === this));\n            this._ownHeaders.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._ownHeaders).withWrap().withHomeAndEnd();\n    }\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event) {\n        this._keyManager.onKeydown(event);\n    }\n    _handleHeaderFocus(header) {\n        this._keyManager.updateActiveItem(header);\n    }\n}\nMatAccordion.ɵfac = function MatAccordion_Factory(t) { return ɵMatAccordion_BaseFactory(t || MatAccordion); };\nMatAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatAccordion, selectors: [[\"mat-accordion\"]], contentQueries: function MatAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatExpansionPanelHeader, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._headers = _t);\n    } }, hostAttrs: [1, \"mat-accordion\"], hostVars: 2, hostBindings: function MatAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-accordion-multi\", ctx.multi);\n    } }, inputs: { multi: \"multi\", displayMode: \"displayMode\", togglePosition: \"togglePosition\", hideToggle: \"hideToggle\" }, exportAs: [\"matAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_ACCORDION,\n                useExisting: MatAccordion\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatAccordion.propDecorators = {\n    _headers: [{ type: ContentChildren, args: [MatExpansionPanelHeader, { descendants: true },] }],\n    hideToggle: [{ type: Input }],\n    displayMode: [{ type: Input }],\n    togglePosition: [{ type: Input }]\n};\nconst ɵMatAccordion_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatAccordion);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-accordion',\n                exportAs: 'matAccordion',\n                inputs: ['multi'],\n                providers: [{\n                        provide: MAT_ACCORDION,\n                        useExisting: MatAccordion\n                    }],\n                host: {\n                    class: 'mat-accordion',\n                    // Class binding which is only used by the test harness as there is no other\n                    // way for the harness to detect if multiple panel support is enabled.\n                    '[class.mat-accordion-multi]': 'this.multi'\n                }\n            }]\n    }], null, { displayMode: [{\n            type: Input\n        }], togglePosition: [{\n            type: Input\n        }], hideToggle: [{\n            type: Input\n        }], _headers: [{\n            type: ContentChildren,\n            args: [MatExpansionPanelHeader, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatExpansionModule {\n}\nMatExpansionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatExpansionModule });\nMatExpansionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatExpansionModule_Factory(t) { return new (t || MatExpansionModule)(); }, imports: [[CommonModule, CdkAccordionModule, PortalModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatExpansionModule, { declarations: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; }, imports: function () { return [CommonModule, CdkAccordionModule, PortalModule]; }, exports: function () { return [MatAccordion, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelHeader, MatExpansionPanelTitle, MatExpansionPanelDescription, MatExpansionPanelContent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatExpansionModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, CdkAccordionModule, PortalModule],\n                exports: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ],\n                declarations: [\n                    MatAccordion,\n                    MatExpansionPanel,\n                    MatExpansionPanelActionRow,\n                    MatExpansionPanelHeader,\n                    MatExpansionPanelTitle,\n                    MatExpansionPanelDescription,\n                    MatExpansionPanelContent,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { EXPANSION_PANEL_ANIMATION_TIMING, MAT_ACCORDION, MAT_EXPANSION_PANEL_DEFAULT_OPTIONS, MatAccordion, MatExpansionModule, MatExpansionPanel, MatExpansionPanelActionRow, MatExpansionPanelContent, MatExpansionPanelDescription, MatExpansionPanelHeader, MatExpansionPanelTitle, matExpansionAnimations, ɵ0 };\n\n//# sourceMappingURL=expansion.js.map","import { SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event object emitted by MatChip when selected or deselected. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nclass MatChipSelectionChange {\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n// Boilerplate for applying mixins to MatChip.\n/** @docs-private */\nclass MatChipBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' },\n                providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }]\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * @docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }])] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' },\n                providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }]\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, \n    // @breaking-change 8.0.0 `animationMode` parameter to become required.\n    animationMode, \n    // @breaking-change 9.0.0 `_changeDetectorRef` parameter to become required.\n    _changeDetectorRef, tabIndex, \n    // @breaking-change 11.0.0 `_document` parameter to become required.\n    _document) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Whether the chip has focus. */\n        this._hasFocus = false;\n        /** Whether the chip list is selectable */\n        this.chipListSelectable = true;\n        /** Whether the chip list is in multi-selection mode. */\n        this._chipListMultiple = false;\n        /** Whether the chip list as a whole is disabled. */\n        this._chipListDisabled = false;\n        this._selected = false;\n        this._selectable = true;\n        this._disabled = false;\n        this._removable = true;\n        /** Emits when the chip is focused. */\n        this._onFocus = new Subject();\n        /** Emits when the chip is blured. */\n        this._onBlur = new Subject();\n        /** Emitted when the chip is selected or deselected. */\n        this.selectionChange = new EventEmitter();\n        /** Emitted when the chip is destroyed. */\n        this.destroyed = new EventEmitter();\n        /** Emitted when a chip is to be removed. */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = (_document || document).createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n    }\n    /** Whether the chip is selected. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /** Whether the chip is disabled. */\n    get disabled() { return this._chipListDisabled || this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    get removable() { return this._removable; }\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /** The ARIA selected applied to the chip. */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    _addHostClassName() {\n        const basicChipAttrName = 'mat-basic-chip';\n        const element = this._elementRef.nativeElement;\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /** Selects the chip. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /** Deselects the chip. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._markForCheck();\n        }\n    }\n    /** Select this chip and emit selected event */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._markForCheck();\n        }\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._markForCheck();\n        return this.selected;\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Handles click events on the chip. */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /** Handle custom key presses. */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() => {\n            this._ngZone.run(() => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            });\n        });\n    }\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n    _markForCheck() {\n        // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8)); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", disabled: \"disabled\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: ChangeDetectorRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MAT_CHIP_AVATAR,] }],\n    trailingIcon: [{ type: ContentChild, args: [MAT_CHIP_TRAILING_ICON,] }],\n    removeIcon: [{ type: ContentChild, args: [MAT_CHIP_REMOVE,] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    disabled: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MAT_CHIP_AVATAR]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_TRAILING_ICON]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_REMOVE]\n        }] }); })();\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    constructor(_parentChip, \n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef) {\n        this._parentChip = _parentChip;\n        // @breaking-change 11.0.0 Remove null check for `elementRef`.\n        if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /** Calls the parent chip's public `remove()` method if applicable. */\n    _handleClick(event) {\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }])] });\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                },\n                providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }]\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatChipList.\n/** @docs-private */\nclass MatChipListBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n/** Change event object that is emitted when the chip list value has changed. */\nclass MatChipListChange {\n    constructor(\n    /** Chip list that emitted the event. */\n    source, \n    /** Value of the chip list when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, \n    /** @docs-private */\n    ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Uid of the chip list */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /** Tab index for the chip list. */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /** Function when touched */\n        this._onTouched = () => { };\n        /** Function when changed */\n        this._onChange = () => { };\n        this._multiple = false;\n        this._compareWith = (o1, o2) => o1 === o2;\n        this._required = false;\n        this._disabled = false;\n        /** Orientation of the chip list. */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /** Event emitted when the selected chip list value has been changed by the user. */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /** The array of selected chips inside chip list. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The ARIA role applied to the chip list. */\n    get role() { return this.empty ? null : 'listbox'; }\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._value; }\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && (!this.chips || this.chips.length === 0);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     */\n    get selectable() { return this._selectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach(chip => chip.chipListSelectable = this._selectable);\n        }\n    }\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map(chip => chip.selectionChange));\n    }\n    /** Combined stream of all of the child chips' focus change events. */\n    get chipFocusChanges() {\n        return merge(...this.chips.map(chip => chip._onFocus));\n    }\n    /** Combined stream of all of the child chips' blur change events. */\n    get chipBlurChanges() {\n        return merge(...this.chips.map(chip => chip._onBlur));\n    }\n    /** Combined stream of all of the child chips' remove change events. */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map(chip => chip.destroyed));\n    }\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHomeAndEnd()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(dir => this._keyManager.withHorizontalOrientation(dir));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => {\n                    this._syncChipsState();\n                });\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        });\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            if (this.ngControl.disabled !== this._disabled) {\n                this.disabled = !!this.ngControl.disabled;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /** Associates an HTML input element with this chip list. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        // We use this attribute to match the chip list to its input in test harnesses.\n        // Set the attribute directly here to avoid \"changed after checked\" errors.\n        this._elementRef.nativeElement.setAttribute('data-mat-chip-input', inputElement.id);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /** Attempt to focus an input if we have one. */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    _keydown(event) {\n        const target = event.target;\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            this._keyManager.onKeydown(event);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            let input = element;\n            return !input.value;\n        }\n        return false;\n    }\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach(chip => chip.deselect());\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n            this._sortValues();\n        }\n        else {\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        const correspondingChip = this.chips.find(chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        });\n    }\n    /**\n     * Deselects every chip in the list.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach(chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip list. */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout(() => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                });\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout(() => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach(chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        });\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n    }\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\n            const chip = event.chip;\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        });\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this.chips && this.chips.some(chip => chip._hasFocus);\n    }\n    /** Syncs the list's state with the individual chips. */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach(chip => {\n                chip._chipListDisabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            });\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids.\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /** Whether the control is focused. */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /** Emitted when a chip is to be added. */\n        this.chipEnd = new EventEmitter();\n        /** The input's placeholder text. */\n        this.placeholder = '';\n        /** Unique id for the input. */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = this._elementRef.nativeElement;\n    }\n    /** Register input for chip list */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /** Whether the input is disabled. */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Whether the input is empty. */\n    get empty() { return !this._inputElement.value; }\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = {\n    separatorKeyCodes: [ENTER]\n};\nclass MatChipsModule {\n}\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); }, providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ɵ0\n        }\n    ] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon], exports: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ɵ0\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule, ɵ0 };\n\n//# sourceMappingURL=chips.js.map","import { InjectionToken, Directive, Input, EventEmitter, Optional, Inject, SkipSelf, ChangeDetectorRef, Output, NgModule } from '@angular/core';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/collections';\nlet nextId = 0;\n/**\n * Injection token that can be used to reference instances of `CdkAccordion`. It serves\n * as alternative token to the actual `CdkAccordion` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_ACCORDION = new InjectionToken('CdkAccordion');\n/**\n * Directive whose purpose is to manage the expanded state of CdkAccordionItem children.\n */\nclass CdkAccordion {\n    constructor() {\n        /** Emits when the state of the accordion changes */\n        this._stateChanges = new Subject();\n        /** Stream that emits true/false when openAll/closeAll is triggered. */\n        this._openCloseAllActions = new Subject();\n        /** A readonly id value to use for unique selection coordination. */\n        this.id = `cdk-accordion-${nextId++}`;\n        this._multi = false;\n    }\n    /** Whether the accordion should allow multiple expanded accordion items simultaneously. */\n    get multi() { return this._multi; }\n    set multi(multi) { this._multi = coerceBooleanProperty(multi); }\n    /** Opens all enabled accordion items in an accordion where multi is enabled. */\n    openAll() {\n        this._openCloseAll(true);\n    }\n    /** Closes all enabled accordion items in an accordion where multi is enabled. */\n    closeAll() {\n        this._openCloseAll(false);\n    }\n    ngOnChanges(changes) {\n        this._stateChanges.next(changes);\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    _openCloseAll(expanded) {\n        if (this.multi) {\n            this._openCloseAllActions.next(expanded);\n        }\n    }\n}\nCdkAccordion.ɵfac = function CdkAccordion_Factory(t) { return new (t || CdkAccordion)(); };\nCdkAccordion.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordion, selectors: [[\"cdk-accordion\"], [\"\", \"cdkAccordion\", \"\"]], inputs: { multi: \"multi\" }, exportAs: [\"cdkAccordion\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]), ɵngcc0.ɵɵNgOnChangesFeature] });\nCdkAccordion.propDecorators = {\n    multi: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordion, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion, [cdkAccordion]',\n                exportAs: 'cdkAccordion',\n                providers: [{ provide: CDK_ACCORDION, useExisting: CdkAccordion }]\n            }]\n    }], function () { return []; }, { multi: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Used to generate unique ID for each accordion item. */\nlet nextId$1 = 0;\nconst ɵ0 = undefined;\n/**\n * An basic directive expected to be extended and decorated as a component.  Sets up all\n * events and attributes needed to be managed by a CdkAccordion parent.\n */\nclass CdkAccordionItem {\n    constructor(accordion, _changeDetectorRef, _expansionDispatcher) {\n        this.accordion = accordion;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._expansionDispatcher = _expansionDispatcher;\n        /** Subscription to openAll/closeAll events. */\n        this._openCloseAllSubscription = Subscription.EMPTY;\n        /** Event emitted every time the AccordionItem is closed. */\n        this.closed = new EventEmitter();\n        /** Event emitted every time the AccordionItem is opened. */\n        this.opened = new EventEmitter();\n        /** Event emitted when the AccordionItem is destroyed. */\n        this.destroyed = new EventEmitter();\n        /**\n         * Emits whenever the expanded state of the accordion changes.\n         * Primarily used to facilitate two-way binding.\n         * @docs-private\n         */\n        this.expandedChange = new EventEmitter();\n        /** The unique AccordionItem id. */\n        this.id = `cdk-accordion-child-${nextId$1++}`;\n        this._expanded = false;\n        this._disabled = false;\n        /** Unregister function for _expansionDispatcher. */\n        this._removeUniqueSelectionListener = () => { };\n        this._removeUniqueSelectionListener =\n            _expansionDispatcher.listen((id, accordionId) => {\n                if (this.accordion && !this.accordion.multi &&\n                    this.accordion.id === accordionId && this.id !== id) {\n                    this.expanded = false;\n                }\n            });\n        // When an accordion item is hosted in an accordion, subscribe to open/close events.\n        if (this.accordion) {\n            this._openCloseAllSubscription = this._subscribeToOpenCloseAllActions();\n        }\n    }\n    /** Whether the AccordionItem is expanded. */\n    get expanded() { return this._expanded; }\n    set expanded(expanded) {\n        expanded = coerceBooleanProperty(expanded);\n        // Only emit events and update the internal value if the value changes.\n        if (this._expanded !== expanded) {\n            this._expanded = expanded;\n            this.expandedChange.emit(expanded);\n            if (expanded) {\n                this.opened.emit();\n                /**\n                 * In the unique selection dispatcher, the id parameter is the id of the CdkAccordionItem,\n                 * the name value is the id of the accordion.\n                 */\n                const accordionId = this.accordion ? this.accordion.id : this.id;\n                this._expansionDispatcher.notify(this.id, accordionId);\n            }\n            else {\n                this.closed.emit();\n            }\n            // Ensures that the animation will run when the value is set outside of an `@Input`.\n            // This includes cases like the open, close and toggle methods.\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the AccordionItem is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(disabled) { this._disabled = coerceBooleanProperty(disabled); }\n    /** Emits an event for the accordion item being destroyed. */\n    ngOnDestroy() {\n        this.opened.complete();\n        this.closed.complete();\n        this.destroyed.emit();\n        this.destroyed.complete();\n        this._removeUniqueSelectionListener();\n        this._openCloseAllSubscription.unsubscribe();\n    }\n    /** Toggles the expanded state of the accordion item. */\n    toggle() {\n        if (!this.disabled) {\n            this.expanded = !this.expanded;\n        }\n    }\n    /** Sets the expanded state of the accordion item to false. */\n    close() {\n        if (!this.disabled) {\n            this.expanded = false;\n        }\n    }\n    /** Sets the expanded state of the accordion item to true. */\n    open() {\n        if (!this.disabled) {\n            this.expanded = true;\n        }\n    }\n    _subscribeToOpenCloseAllActions() {\n        return this.accordion._openCloseAllActions.subscribe(expanded => {\n            // Only change expanded state if item is enabled\n            if (!this.disabled) {\n                this.expanded = expanded;\n            }\n        });\n    }\n}\nCdkAccordionItem.ɵfac = function CdkAccordionItem_Factory(t) { return new (t || CdkAccordionItem)(ɵngcc0.ɵɵdirectiveInject(CDK_ACCORDION, 12), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.UniqueSelectionDispatcher)); };\nCdkAccordionItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkAccordionItem, selectors: [[\"cdk-accordion-item\"], [\"\", \"cdkAccordionItem\", \"\"]], inputs: { expanded: \"expanded\", disabled: \"disabled\" }, outputs: { closed: \"closed\", opened: \"opened\", destroyed: \"destroyed\", expandedChange: \"expandedChange\" }, exportAs: [\"cdkAccordionItem\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n            // registering to the same accordion.\n            { provide: CDK_ACCORDION, useValue: ɵ0 },\n        ])] });\nCdkAccordionItem.ctorParameters = () => [\n    { type: CdkAccordion, decorators: [{ type: Optional }, { type: Inject, args: [CDK_ACCORDION,] }, { type: SkipSelf }] },\n    { type: ChangeDetectorRef },\n    { type: UniqueSelectionDispatcher }\n];\nCdkAccordionItem.propDecorators = {\n    closed: [{ type: Output }],\n    opened: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    expandedChange: [{ type: Output }],\n    expanded: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionItem, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-accordion-item, [cdkAccordionItem]',\n                exportAs: 'cdkAccordionItem',\n                providers: [\n                    // Provide `CDK_ACCORDION` as undefined to prevent nested accordion items from\n                    // registering to the same accordion.\n                    { provide: CDK_ACCORDION, useValue: ɵ0 },\n                ]\n            }]\n    }], function () { return [{ type: CdkAccordion, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CDK_ACCORDION]\n            }, {\n                type: SkipSelf\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.UniqueSelectionDispatcher }]; }, { closed: [{\n            type: Output\n        }], opened: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], expandedChange: [{\n            type: Output\n        }], expanded: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass CdkAccordionModule {\n}\nCdkAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: CdkAccordionModule });\nCdkAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function CdkAccordionModule_Factory(t) { return new (t || CdkAccordionModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkAccordionModule, { declarations: [CdkAccordion, CdkAccordionItem], exports: [CdkAccordion, CdkAccordionItem] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkAccordionModule, [{\n        type: NgModule,\n        args: [{\n                exports: [CdkAccordion, CdkAccordionItem],\n                declarations: [CdkAccordion, CdkAccordionItem]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkAccordion, CdkAccordionItem, CdkAccordionModule, CDK_ACCORDION as ɵangular_material_src_cdk_accordion_accordion_a };\n\n//# sourceMappingURL=accordion.js.map","import { Directive, NgZone, ElementRef, Renderer2, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { AriaDescriber, A11yModule } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nlet nextId = 0;\n// Boilerplate for applying mixins to MatBadge.\n/** @docs-private */\nclass MatBadgeBase {\n}\nconst _MatBadgeMixinBase = mixinDisabled(MatBadgeBase);\n/** Directive to display a text badge. */\nclass MatBadge extends _MatBadgeMixinBase {\n    constructor(_ngZone, _elementRef, _ariaDescriber, _renderer, _animationMode) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        this._renderer = _renderer;\n        this._animationMode = _animationMode;\n        /** Whether the badge has any content. */\n        this._hasContent = false;\n        this._color = 'primary';\n        this._overlap = true;\n        /**\n         * Position the badge should reside.\n         * Accepts any combination of 'above'|'below' and 'before'|'after'\n         */\n        this.position = 'above after';\n        /** Size of the badge. Can be 'small', 'medium', or 'large'. */\n        this.size = 'medium';\n        /** Unique id for the badge */\n        this._id = nextId++;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            const nativeElement = _elementRef.nativeElement;\n            if (nativeElement.nodeType !== nativeElement.ELEMENT_NODE) {\n                throw Error('matBadge must be attached to an element node.');\n            }\n        }\n    }\n    /** The color of the badge. Can be `primary`, `accent`, or `warn`. */\n    get color() { return this._color; }\n    set color(value) {\n        this._setColor(value);\n        this._color = value;\n    }\n    /** Whether the badge should overlap its contents or not */\n    get overlap() { return this._overlap; }\n    set overlap(val) {\n        this._overlap = coerceBooleanProperty(val);\n    }\n    /** Message used to describe the decorated element via aria-describedby */\n    get description() { return this._description; }\n    set description(newDescription) {\n        if (newDescription !== this._description) {\n            const badgeElement = this._badgeElement;\n            this._updateHostAriaDescription(newDescription, this._description);\n            this._description = newDescription;\n            if (badgeElement) {\n                newDescription ? badgeElement.setAttribute('aria-label', newDescription) :\n                    badgeElement.removeAttribute('aria-label');\n            }\n        }\n    }\n    /** Whether the badge is hidden. */\n    get hidden() { return this._hidden; }\n    set hidden(val) {\n        this._hidden = coerceBooleanProperty(val);\n    }\n    /** Whether the badge is above the host or not */\n    isAbove() {\n        return this.position.indexOf('below') === -1;\n    }\n    /** Whether the badge is after the host or not */\n    isAfter() {\n        return this.position.indexOf('before') === -1;\n    }\n    ngOnChanges(changes) {\n        const contentChange = changes['content'];\n        if (contentChange) {\n            const value = contentChange.currentValue;\n            this._hasContent = value != null && `${value}`.trim().length > 0;\n            this._updateTextContent();\n        }\n    }\n    ngOnDestroy() {\n        const badgeElement = this._badgeElement;\n        if (badgeElement) {\n            if (this.description) {\n                this._ariaDescriber.removeDescription(badgeElement, this.description);\n            }\n            // When creating a badge through the Renderer, Angular will keep it in an index.\n            // We have to destroy it ourselves, otherwise it'll be retained in memory.\n            if (this._renderer.destroyNode) {\n                this._renderer.destroyNode(badgeElement);\n            }\n        }\n    }\n    /**\n     * Gets the element into which the badge's content is being rendered.\n     * Undefined if the element hasn't been created (e.g. if the badge doesn't have content).\n     */\n    getBadgeElement() {\n        return this._badgeElement;\n    }\n    /** Injects a span element into the DOM with the content. */\n    _updateTextContent() {\n        if (!this._badgeElement) {\n            this._badgeElement = this._createBadgeElement();\n        }\n        else {\n            this._badgeElement.textContent = this._stringifyContent();\n        }\n        return this._badgeElement;\n    }\n    /** Creates the badge element */\n    _createBadgeElement() {\n        const badgeElement = this._renderer.createElement('span');\n        const activeClass = 'mat-badge-active';\n        const contentClass = 'mat-badge-content';\n        // Clear any existing badges which may have persisted from a server-side render.\n        this._clearExistingBadges(contentClass);\n        badgeElement.setAttribute('id', `mat-badge-content-${this._id}`);\n        badgeElement.classList.add(contentClass);\n        badgeElement.textContent = this._stringifyContent();\n        if (this._animationMode === 'NoopAnimations') {\n            badgeElement.classList.add('_mat-animation-noopable');\n        }\n        if (this.description) {\n            badgeElement.setAttribute('aria-label', this.description);\n        }\n        this._elementRef.nativeElement.appendChild(badgeElement);\n        // animate in after insertion\n        if (typeof requestAnimationFrame === 'function' && this._animationMode !== 'NoopAnimations') {\n            this._ngZone.runOutsideAngular(() => {\n                requestAnimationFrame(() => {\n                    badgeElement.classList.add(activeClass);\n                });\n            });\n        }\n        else {\n            badgeElement.classList.add(activeClass);\n        }\n        return badgeElement;\n    }\n    /** Sets the aria-label property on the element */\n    _updateHostAriaDescription(newDescription, oldDescription) {\n        // ensure content available before setting label\n        const content = this._updateTextContent();\n        if (oldDescription) {\n            this._ariaDescriber.removeDescription(content, oldDescription);\n        }\n        if (newDescription) {\n            this._ariaDescriber.describe(content, newDescription);\n        }\n    }\n    /** Adds css theme class given the color to the component host */\n    _setColor(colorPalette) {\n        if (colorPalette !== this._color) {\n            const classList = this._elementRef.nativeElement.classList;\n            if (this._color) {\n                classList.remove(`mat-badge-${this._color}`);\n            }\n            if (colorPalette) {\n                classList.add(`mat-badge-${colorPalette}`);\n            }\n        }\n    }\n    /** Clears any existing badges that might be left over from server-side rendering. */\n    _clearExistingBadges(cssClass) {\n        const element = this._elementRef.nativeElement;\n        let childCount = element.children.length;\n        // Use a reverse while, because we'll be removing elements from the list as we're iterating.\n        while (childCount--) {\n            const currentChild = element.children[childCount];\n            if (currentChild.classList.contains(cssClass)) {\n                element.removeChild(currentChild);\n            }\n        }\n    }\n    /** Gets the string representation of the badge content. */\n    _stringifyContent() {\n        // Convert null and undefined to an empty string which is consistent\n        // with how Angular handles them in inside template interpolations.\n        const content = this.content;\n        return content == null ? '' : `${content}`;\n    }\n}\nMatBadge.ɵfac = function MatBadge_Factory(t) { return new (t || MatBadge)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.AriaDescriber), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatBadge.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatBadge, selectors: [[\"\", \"matBadge\", \"\"]], hostAttrs: [1, \"mat-badge\"], hostVars: 20, hostBindings: function MatBadge_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-badge-overlap\", ctx.overlap)(\"mat-badge-above\", ctx.isAbove())(\"mat-badge-below\", !ctx.isAbove())(\"mat-badge-before\", !ctx.isAfter())(\"mat-badge-after\", ctx.isAfter())(\"mat-badge-small\", ctx.size === \"small\")(\"mat-badge-medium\", ctx.size === \"medium\")(\"mat-badge-large\", ctx.size === \"large\")(\"mat-badge-hidden\", ctx.hidden || !ctx._hasContent)(\"mat-badge-disabled\", ctx.disabled);\n    } }, inputs: { disabled: [\"matBadgeDisabled\", \"disabled\"], position: [\"matBadgePosition\", \"position\"], size: [\"matBadgeSize\", \"size\"], color: [\"matBadgeColor\", \"color\"], overlap: [\"matBadgeOverlap\", \"overlap\"], description: [\"matBadgeDescription\", \"description\"], hidden: [\"matBadgeHidden\", \"hidden\"], content: [\"matBadge\", \"content\"] }, features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature] });\nMatBadge.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: AriaDescriber },\n    { type: Renderer2 },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatBadge.propDecorators = {\n    color: [{ type: Input, args: ['matBadgeColor',] }],\n    overlap: [{ type: Input, args: ['matBadgeOverlap',] }],\n    position: [{ type: Input, args: ['matBadgePosition',] }],\n    content: [{ type: Input, args: ['matBadge',] }],\n    description: [{ type: Input, args: ['matBadgeDescription',] }],\n    size: [{ type: Input, args: ['matBadgeSize',] }],\n    hidden: [{ type: Input, args: ['matBadgeHidden',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadge, [{\n        type: Directive,\n        args: [{\n                selector: '[matBadge]',\n                inputs: ['disabled: matBadgeDisabled'],\n                host: {\n                    'class': 'mat-badge',\n                    '[class.mat-badge-overlap]': 'overlap',\n                    '[class.mat-badge-above]': 'isAbove()',\n                    '[class.mat-badge-below]': '!isAbove()',\n                    '[class.mat-badge-before]': '!isAfter()',\n                    '[class.mat-badge-after]': 'isAfter()',\n                    '[class.mat-badge-small]': 'size === \"small\"',\n                    '[class.mat-badge-medium]': 'size === \"medium\"',\n                    '[class.mat-badge-large]': 'size === \"large\"',\n                    '[class.mat-badge-hidden]': 'hidden || !_hasContent',\n                    '[class.mat-badge-disabled]': 'disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc1.AriaDescriber }, { type: ɵngcc0.Renderer2 }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { position: [{\n            type: Input,\n            args: ['matBadgePosition']\n        }], size: [{\n            type: Input,\n            args: ['matBadgeSize']\n        }], color: [{\n            type: Input,\n            args: ['matBadgeColor']\n        }], overlap: [{\n            type: Input,\n            args: ['matBadgeOverlap']\n        }], description: [{\n            type: Input,\n            args: ['matBadgeDescription']\n        }], hidden: [{\n            type: Input,\n            args: ['matBadgeHidden']\n        }], content: [{\n            type: Input,\n            args: ['matBadge']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatBadgeModule {\n}\nMatBadgeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatBadgeModule });\nMatBadgeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatBadgeModule_Factory(t) { return new (t || MatBadgeModule)(); }, imports: [[\n            A11yModule,\n            MatCommonModule\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatBadgeModule, { declarations: function () { return [MatBadge]; }, imports: function () { return [A11yModule,\n        MatCommonModule]; }, exports: function () { return [MatBadge, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatBadgeModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    A11yModule,\n                    MatCommonModule\n                ],\n                exports: [MatBadge, MatCommonModule],\n                declarations: [MatBadge]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatBadge, MatBadgeModule };\n\n//# sourceMappingURL=badge.js.map","import { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { _getShadowRoot, Platform } from '@angular/cdk/platform';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base reference size of the spinner.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/common';\n\nfunction MatProgressSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatProgressSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"animation-name\", \"mat-progress-spinner-stroke-rotate-\" + ctx_r0._spinnerAnimationLabel)(\"stroke-dashoffset\", ctx_r0._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r0._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r0._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r0._getCircleRadius());\n} }\nfunction MatSpinner__svg_circle_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelement(0, \"circle\", 3);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"stroke-dashoffset\", ctx_r1._getStrokeDashOffset(), \"px\")(\"stroke-dasharray\", ctx_r1._getStrokeCircumference(), \"px\")(\"stroke-width\", ctx_r1._getCircleStrokeWidth(), \"%\");\n    ɵngcc0.ɵɵattribute(\"r\", ctx_r1._getCircleRadius());\n} }\nconst _c0 = \".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\";\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n * @docs-private\n */\nconst BASE_STROKE_WIDTH = 10;\n// Boilerplate for applying mixins to MatProgressSpinner.\n/** @docs-private */\nclass MatProgressSpinnerBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatProgressSpinnerMixinBase = mixinColor(MatProgressSpinnerBase, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n// .0001 percentage difference is necessary in order to avoid unwanted animation frames\n// for example because the animation duration is 4 seconds, .1% accounts to 4ms\n// which are enough to see the flicker described in\n// https://github.com/angular/components/issues/8984\nconst INDETERMINATE_ANIMATION_TEMPLATE = `\n @keyframes mat-progress-spinner-stroke-rotate-DIAMETER {\n    0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n    12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n    12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n    25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n\n    25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n    37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n    37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n    50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n\n    50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n    62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n    62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n    75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n\n    75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n    87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n    87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n    100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n  }\n`;\n/**\n * `<mat-progress-spinner>` component.\n */\nclass MatProgressSpinner extends _MatProgressSpinnerMixinBase {\n    constructor(_elementRef, platform, _document, animationMode, defaults) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._document = _document;\n        this._diameter = BASE_SIZE;\n        this._value = 0;\n        this._fallbackAnimation = false;\n        /** Mode of the progress circle */\n        this.mode = 'determinate';\n        const trackedDiameters = MatProgressSpinner._diameters;\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // The base size is already inserted via the component's structural styles. We still\n        // need to track it so we don't end up adding the same styles again.\n        if (!trackedDiameters.has(_document.head)) {\n            trackedDiameters.set(_document.head, new Set([BASE_SIZE]));\n        }\n        this._fallbackAnimation = platform.EDGE || platform.TRIDENT;\n        this._noopAnimations = animationMode === 'NoopAnimations' &&\n            (!!defaults && !defaults._forceAnimations);\n        if (defaults) {\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() { return this._diameter; }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n        this._spinnerAnimationLabel = this._getSpinnerAnimationLabel();\n        // If this is set before `ngOnInit`, the style root may not have been resolved yet.\n        if (!this._fallbackAnimation && this._styleRoot) {\n            this._attachStyleNode();\n        }\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth || this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** Value of the progress circle. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(newValue) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(newValue)));\n    }\n    ngOnInit() {\n        const element = this._elementRef.nativeElement;\n        // Note that we need to look up the root node in ngOnInit, rather than the constructor, because\n        // Angular seems to create the element outside the shadow root and then moves it inside, if the\n        // node is inside an `ngIf` and a ShadowDom-encapsulated component.\n        this._styleRoot = _getShadowRoot(element) || this._document.head;\n        this._attachStyleNode();\n        // On IE and Edge, we can't animate the `stroke-dashoffset`\n        // reliably so we fall back to a non-spec animation.\n        const animationClass = `mat-progress-spinner-indeterminate${this._fallbackAnimation ? '-fallback' : ''}-animation`;\n        element.classList.add(animationClass);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _getCircleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _getViewBox() {\n        const viewBox = this._getCircleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _getStrokeCircumference() {\n        return 2 * Math.PI * this._getCircleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _getStrokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return this._getStrokeCircumference() * (100 - this._value) / 100;\n        }\n        // In fallback mode set the circle to 80% and rotate it with CSS.\n        if (this._fallbackAnimation && this.mode === 'indeterminate') {\n            return this._getStrokeCircumference() * 0.2;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _getCircleStrokeWidth() {\n        return this.strokeWidth / this.diameter * 100;\n    }\n    /** Dynamically generates a style tag containing the correct animation for this diameter. */\n    _attachStyleNode() {\n        const styleRoot = this._styleRoot;\n        const currentDiameter = this._diameter;\n        const diameters = MatProgressSpinner._diameters;\n        let diametersForElement = diameters.get(styleRoot);\n        if (!diametersForElement || !diametersForElement.has(currentDiameter)) {\n            const styleTag = this._document.createElement('style');\n            styleTag.setAttribute('mat-spinner-animation', this._spinnerAnimationLabel);\n            styleTag.textContent = this._getAnimationText();\n            styleRoot.appendChild(styleTag);\n            if (!diametersForElement) {\n                diametersForElement = new Set();\n                diameters.set(styleRoot, diametersForElement);\n            }\n            diametersForElement.add(currentDiameter);\n        }\n    }\n    /** Generates animation styles adjusted for the spinner's diameter. */\n    _getAnimationText() {\n        const strokeCircumference = this._getStrokeCircumference();\n        return INDETERMINATE_ANIMATION_TEMPLATE\n            // Animation should begin at 5% and end at 80%\n            .replace(/START_VALUE/g, `${0.95 * strokeCircumference}`)\n            .replace(/END_VALUE/g, `${0.2 * strokeCircumference}`)\n            .replace(/DIAMETER/g, `${this._spinnerAnimationLabel}`);\n    }\n    /** Returns the circle diameter formatted for use with the animation-name CSS property. */\n    _getSpinnerAnimationLabel() {\n        // The string of a float point number will include a period ‘.’ character,\n        // which is not valid for a CSS animation-name.\n        return this.diameter.toString().replace('.', '_');\n    }\n}\nMatProgressSpinner.ɵfac = function MatProgressSpinner_Factory(t) { return new (t || MatProgressSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatProgressSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatProgressSpinner, selectors: [[\"mat-progress-spinner\"]], hostAttrs: [\"role\", \"progressbar\", 1, \"mat-progress-spinner\"], hostVars: 10, hostBindings: function MatProgressSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemin\", ctx.mode === \"determinate\" ? 0 : null)(\"aria-valuemax\", ctx.mode === \"determinate\" ? 100 : null)(\"aria-valuenow\", ctx.mode === \"determinate\" ? ctx.value : null)(\"mode\", ctx.mode);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\", mode: \"mode\", diameter: \"diameter\", strokeWidth: \"strokeWidth\", value: \"value\" }, exportAs: [\"matProgressSpinner\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatProgressSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatProgressSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatProgressSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\n/**\n * Tracks diameters of existing instances to de-dupe generated styles (default d = 100).\n * We need to keep track of which elements the diameters were attached to, because for\n * elements in the Shadow DOM the style tags are attached to the shadow root, rather\n * than the document head.\n */\nMatProgressSpinner._diameters = new WeakMap();\nMatProgressSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\nMatProgressSpinner.propDecorators = {\n    diameter: [{ type: Input }],\n    strokeWidth: [{ type: Input }],\n    mode: [{ type: Input }],\n    value: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-progress-spinner',\n                exportAs: 'matProgressSpinner',\n                host: {\n                    'role': 'progressbar',\n                    'class': 'mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter',\n                    '[attr.aria-valuemin]': 'mode === \"determinate\" ? 0 : null',\n                    '[attr.aria-valuemax]': 'mode === \"determinate\" ? 100 : null',\n                    '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                    '[attr.mode]': 'mode'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, { mode: [{\n            type: Input\n        }], diameter: [{\n            type: Input\n        }], strokeWidth: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }] }); })();\n/**\n * `<mat-spinner>` component.\n *\n * This is a component definition to be used as a convenience reference to create an\n * indeterminate `<mat-progress-spinner>` instance.\n */\nclass MatSpinner extends MatProgressSpinner {\n    constructor(elementRef, platform, document, animationMode, defaults) {\n        super(elementRef, platform, document, animationMode, defaults);\n        this.mode = 'indeterminate';\n    }\n}\nMatSpinner.ɵfac = function MatSpinner_Factory(t) { return new (t || MatSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS)); };\nMatSpinner.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSpinner, selectors: [[\"mat-spinner\"]], hostAttrs: [\"role\", \"progressbar\", \"mode\", \"indeterminate\", 1, \"mat-spinner\", \"mat-progress-spinner\"], hostVars: 6, hostBindings: function MatSpinner_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._noopAnimations);\n    } }, inputs: { color: \"color\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 8, consts: [[\"preserveAspectRatio\", \"xMidYMid meet\", \"focusable\", \"false\", 3, \"ngSwitch\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"animation-name\", \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\", 3, \"stroke-dashoffset\", \"stroke-dasharray\", \"stroke-width\", 4, \"ngSwitchCase\"], [\"cx\", \"50%\", \"cy\", \"50%\"]], template: function MatSpinner_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(0, \"svg\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatSpinner__svg_circle_1_Template, 1, 9, \"circle\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatSpinner__svg_circle_2_Template, 1, 7, \"circle\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.diameter, \"px\")(\"height\", ctx.diameter, \"px\");\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx.mode === \"indeterminate\");\n        ɵngcc0.ɵɵattribute(\"viewBox\", ctx._getViewBox());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n    } }, directives: [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase], styles: [_c0], encapsulation: 2, changeDetection: 0 });\nMatSpinner.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSpinner, [{\n        type: Component,\n        args: [{\n                selector: 'mat-spinner',\n                host: {\n                    'role': 'progressbar',\n                    'mode': 'indeterminate',\n                    'class': 'mat-spinner mat-progress-spinner',\n                    '[class._mat-animation-noopable]': `_noopAnimations`,\n                    '[style.width.px]': 'diameter',\n                    '[style.height.px]': 'diameter'\n                },\n                inputs: ['color'],\n                template: \"<!--\\n  preserveAspectRatio of xMidYMid meet as the center of the viewport is the circle's\\n  center. The center of the circle will remain at the center of the mat-progress-spinner\\n  element containing the SVG. `focusable=\\\"false\\\"` prevents IE from allowing the user to\\n  tab into the SVG element.\\n-->\\n\\n<svg\\n  [style.width.px]=\\\"diameter\\\"\\n  [style.height.px]=\\\"diameter\\\"\\n  [attr.viewBox]=\\\"_getViewBox()\\\"\\n  preserveAspectRatio=\\\"xMidYMid meet\\\"\\n  focusable=\\\"false\\\"\\n  [ngSwitch]=\\\"mode === 'indeterminate'\\\">\\n\\n  <!--\\n    Technically we can reuse the same `circle` element, however Safari has an issue that breaks\\n    the SVG rendering in determinate mode, after switching between indeterminate and determinate.\\n    Using a different element avoids the issue. An alternative to this is adding `display: none`\\n    for a split second and then removing it when switching between modes, but it's hard to know\\n    for how long to hide the element and it can cause the UI to blink.\\n  -->\\n  <circle\\n    *ngSwitchCase=\\\"true\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.animation-name]=\\\"'mat-progress-spinner-stroke-rotate-' + _spinnerAnimationLabel\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n\\n  <circle\\n    *ngSwitchCase=\\\"false\\\"\\n    cx=\\\"50%\\\"\\n    cy=\\\"50%\\\"\\n    [attr.r]=\\\"_getCircleRadius()\\\"\\n    [style.stroke-dashoffset.px]=\\\"_getStrokeDashOffset()\\\"\\n    [style.stroke-dasharray.px]=\\\"_getStrokeCircumference()\\\"\\n    [style.stroke-width.%]=\\\"_getCircleStrokeWidth()\\\"></circle>\\n</svg>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".mat-progress-spinner{display:block;position:relative}.mat-progress-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}.mat-progress-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}._mat-animation-noopable.mat-progress-spinner circle{transition:none;animation:none}.cdk-high-contrast-active .mat-progress-spinner circle{stroke:currentColor}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{animation:mat-progress-spinner-linear-rotate 2000ms linear infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition-property:stroke;animation-duration:4000ms;animation-timing-function:cubic-bezier(0.35, 0, 0.25, 1);animation-iteration-count:infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-animation[mode=indeterminate] circle{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{animation:mat-progress-spinner-stroke-rotate-fallback 10000ms cubic-bezier(0.87, 0.03, 0.33, 1) infinite}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate]{transition:none;animation:none}.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition-property:stroke}._mat-animation-noopable.mat-progress-spinner.mat-progress-spinner-indeterminate-fallback-animation[mode=indeterminate] circle{transition:none;animation:none}@keyframes mat-progress-spinner-linear-rotate{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}@keyframes mat-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.606171575px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.606171575px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.606171575px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.606171575px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.606171575px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes mat-progress-spinner-stroke-rotate-fallback{0%{transform:rotate(0deg)}25%{transform:rotate(1170deg)}50%{transform:rotate(2340deg)}75%{transform:rotate(3510deg)}100%{transform:rotate(4680deg)}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatProgressSpinnerModule {\n}\nMatProgressSpinnerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatProgressSpinnerModule });\nMatProgressSpinnerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatProgressSpinnerModule_Factory(t) { return new (t || MatProgressSpinnerModule)(); }, imports: [[MatCommonModule, CommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatProgressSpinnerModule, { declarations: function () { return [MatProgressSpinner, MatSpinner]; }, imports: function () { return [MatCommonModule, CommonModule]; }, exports: function () { return [MatProgressSpinner, MatSpinner, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatProgressSpinnerModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule, CommonModule],\n                exports: [\n                    MatProgressSpinner,\n                    MatSpinner,\n                    MatCommonModule\n                ],\n                declarations: [\n                    MatProgressSpinner,\n                    MatSpinner\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n\n//# sourceMappingURL=progress-spinner.js.map"]}