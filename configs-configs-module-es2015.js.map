{"version":3,"sources":["./src/app/configs/warehousetype/warehousetype.component.ts","./src/app/configs/warehousetype/warehousetype.component.html","./src/app/configs/warehouses/warehouses.component.ts","./src/app/configs/warehouses/warehouses.component.html","./src/app/configs/configs.module.ts","./src/app/configs/racks/racks.component.ts","./src/app/configs/racks/racks.component.html","./src/app/configs/configs.component.ts"],"names":[],"mappings":"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","file":"configs-configs-module-es2015.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\n\n@Component({\n  selector: 'app-warehousetype',\n  templateUrl: './warehousetype.component.html',\n  styleUrls: ['./warehousetype.component.sass']\n})\nexport class WarehousetypeComponent implements OnInit {\n\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'type' }\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'type' }\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  type: any;\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n      type: new FormControl(),\n\n    });\n  }\n  ngOnInit() {\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      type: [''],\n      id: [''],\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', 'http://localhost:3000/warehouse_type');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      type: row.type,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n      type: this.type\n    });\n  }\n  deleteRow(row) {\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n    this.data = this.arrayRemove(this.data, row.id);\n    this.http.delete('http://localhost:3000/warehouse_type/'+row.id).subscribe();\n    this.showNotification(\n      'bg-red',\n      'Delete Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.type = form.value.type;\n      }\n      let empdata = {\n        'type' : form.value.type,\n\n\n      }\n      this.http.put('http://localhost:3000/warehouse_type/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post('http://localhost:3000/warehouse_type', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  type: String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>WareHouse Type</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <ngx-datatable-column name=\"id\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"type\" [width]=\"130\"></ngx-datatable-column>\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              New Warehouse Type</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Warehouse Type</mat-label>\n                                                              <input matInput formControlName=\"type\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('type').hasError('required')\">\n                                                              type  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.type}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Type</mat-label>\n                                                              <input matInput formControlName=\"type\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('type').hasError('required')\">\n                                                                 typeis required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\n\n@Component({\n  selector: 'app-warehouses',\n  templateUrl: './warehouses.component.html',\n  styleUrls: ['./warehouses.component.sass']\n})\nexport class WarehousesComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'latitude' },\n    { name: 'longitude' },\n    { name: 'location' },\n    { name: 'name' },\n    { name: 'whtype' },\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'latitude' },\n    { name: 'longitude' },\n    { name: 'location' },\n    { name: 'name' },\n    { name: 'whtype' },\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  type: any;\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n      latitude: new FormControl(),\n      longitude: new FormControl(),\n      location: new FormControl(),\n      name: new FormControl(),\n      whtype: new FormControl(),\n\n    });\n  }\n  ngOnInit() {\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      latitude: [''],\n      id: [''],\n      longitude: [''],\n      location: [''],\n      name: [''],\n      whtype: [''],\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', 'http://localhost:3000/warehouse');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      latitude: row.latitude,\n      longitude: row.longitude,\n      location: row.location,\n      name: row.name,\n      whtype: row.whtype,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n      type: this.type\n    });\n  }\n  deleteRow(row) {\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n    this.data = this.arrayRemove(this.data, row.id);\n    this.http.delete('http://localhost:3000/warehouse/'+row.id).subscribe();\n    this.showNotification(\n      'bg-red',\n      'Delete Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.type = form.value.type;\n      }\n      let empdata = {\n        'latitude' : form.value.latitude,\n        'longitude' : form.value.longitude,\n        'location' : form.value.location,\n        'name' : form.value.name,\n        'whtype' : form.value.whtype,\n\n      }\n      this.http.put('http://localhost:3000/warehouse/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post('http://localhost:3000/warehouse', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n\n  latitude : String;\n        longitude : String;\n        location : String;\n        name : String;\n        whtype : String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>WareHouse </strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <ngx-datatable-column name=\"id\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"latitude\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"location\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"longitude\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"name\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"whtype\" [width]=\"130\"></ngx-datatable-column>\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              New Warehouse </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Warehouse name</mat-label>\n                                                              <input matInput formControlName=\"name\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('name').hasError('required')\">\n                                                              name  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>location</mat-label>\n                                                            <input matInput formControlName=\"location\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('location').hasError('required')\">\n                                                            location  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>face</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>latitude</mat-label>\n                                                          <input matInput formControlName=\"latitude\">\n                                                          <mat-error\n                                                          *ngIf=\"register.get('latitude').hasError('required')\">\n                                                          latitude  is required\n                                                      </mat-error>\n                                                          <mat-icon matSuffix>face</mat-icon>\n                                                      </mat-form-field>\n                                                  </div>\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>longitude</mat-label>\n                                                        <input matInput formControlName=\"longitude\">\n                                                        <mat-error\n                                                        *ngIf=\"register.get('longitude').hasError('required')\">\n                                                        longitude  is required\n                                                    </mat-error>\n                                                        <mat-icon matSuffix>face</mat-icon>\n                                                    </mat-form-field>\n                                                </div>\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>whtype</mat-label>\n                                                      <input matInput formControlName=\"whtype\">\n                                                      <mat-error\n                                                      *ngIf=\"register.get('whtype').hasError('required')\">\n                                                      whtype  is required\n                                                  </mat-error>\n                                                      <mat-icon matSuffix>face</mat-icon>\n                                                  </mat-form-field>\n                                              </div>\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.name}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>name</mat-label>\n                                                              <input matInput formControlName=\"name\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('name').hasError('required')\">\n                                                                  name required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>location</mat-label>\n                                                            <input matInput formControlName=\"location\" required>\n                                                            <mat-icon matSuffix>face</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('location').hasError('required')\">\n                                                                location required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>latitude</mat-label>\n                                                          <input matInput formControlName=\"latitude\" required>\n                                                          <mat-icon matSuffix>face</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('latitude').hasError('required')\">\n                                                              latitude required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>longitude</mat-label>\n                                                        <input matInput formControlName=\"longitude\" required>\n                                                        <mat-icon matSuffix>face</mat-icon>\n                                                        <mat-error\n                                                            *ngIf=\"editForm.get('longitude').hasError('required')\">\n                                                            longitude required\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>whtype</mat-label>\n                                                      <input matInput formControlName=\"whtype\" required>\n                                                      <mat-icon matSuffix>face</mat-icon>\n                                                      <mat-error\n                                                          *ngIf=\"editForm.get('whtype').hasError('required')\">\n                                                          whtype required\n                                                      </mat-error>\n                                                  </mat-form-field>\n                                              </div>\n\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { ChannelsComponent } from './channels/channels.component';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfigsComponent } from './configs.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AutocompleteLibModule } from 'angular-ng-autocomplete';\n\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { WarehousetypeComponent } from './warehousetype/warehousetype.component';\nimport { WarehousesComponent } from './warehouses/warehouses.component';\nimport { CategoryComponent } from './category/category.component';\nimport { RacksComponent } from './racks/racks.component';\nimport { ProductsComponent } from './products/products.component';\nimport { ProductmasterComponent } from './productmaster/productmaster.component';\n\n// tslint:disable-next-line: import-spacing\nimport {configsRoutingModule} from './configs.routing.module';\nimport { ReasonappComponent } from './reasonapp/reasonapp.component';\n\n@NgModule({\n  // tslint:disable-next-line: max-line-length\n  declarations: [ConfigsComponent, WarehousetypeComponent, WarehousesComponent, CategoryComponent, RacksComponent, ProductsComponent, ProductmasterComponent, ChannelsComponent, ReasonappComponent],\n  imports: [\n    AutocompleteLibModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    configsRoutingModule,\n    NgxDatatableModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MaterialFileInputModule,\n    MatRadioModule,\n    MatMenuModule\n  ]\n})\nexport class ConfigsModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\n\n@Component({\n  selector: 'app-racks',\n  templateUrl: './racks.component.html',\n  styleUrls: ['./racks.component.sass']\n})\nexport class RacksComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'location' },\n    { name: 'tag' }\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'location' },\n    { name: 'tag' }\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n\n\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n\n      location: new FormControl(),\n      tag: new FormControl(),\n\n    });\n  }\n  ngOnInit() {\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      location: [''],\n      id: [''],\n      tag: [''],\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', 'http://localhost:3000/rack');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      tag: row.tag,\n      location: row.location,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n\n      // location: this.location\n    });\n  }\n  deleteRow(row) {\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n    this.data = this.arrayRemove(this.data, row.id);\n    this.http.delete('http://localhost:3000/rack/'+row.id).subscribe();\n    this.showNotification(\n      'bg-red',\n      'Delete Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.type = form.value.type;\n      }\n      let empdata = {\n        'type' : form.value.type,\n\n\n      }\n      this.http.put('http://localhost:3000/rack/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post('http://localhost:3000/rack', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  tag: String;\n  location: String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Rack</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <ngx-datatable-column name=\"id\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"location\" [width]=\"130\"></ngx-datatable-column>\n                                  <ngx-datatable-column name=\"tag\" [width]=\"130\"></ngx-datatable-column>\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              Racks</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>location</mat-label>\n                                                              <input matInput formControlName=\"location\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('location').hasError('required')\">\n                                                              location  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>tag</mat-label>\n                                                            <input matInput formControlName=\"tag\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('tag').hasError('required')\">\n                                                            tag  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>face</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.location}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>location</mat-label>\n                                                              <input matInput formControlName=\"location\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('location').hasError('required')\">\n                                                                  location required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>tag</mat-label>\n                                                            <input matInput formControlName=\"tag\" required>\n                                                            <mat-icon matSuffix>face</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('tag').hasError('required')\">\n                                                               tag required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-configs',\n  templateUrl: './configs.component.html',\n  styleUrls: ['./configs.component.sass']\n})\nexport class ConfigsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n"],"sourceRoot":"webpack:///"}