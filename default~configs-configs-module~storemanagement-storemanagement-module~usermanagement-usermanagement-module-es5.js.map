{"version":3,"sources":["webpack:///src/app/configs/category/category.component.ts","webpack:///src/app/configs/category/category.component.html","webpack:///src/app/configs/products/products.component.ts","webpack:///src/app/configs/products/products.component.html","webpack:///src/app/configs/productmaster/productmaster.component.ts","webpack:///src/app/configs/productmaster/productmaster.component.html","webpack:///src/app/configs/channels/channels.component.ts","webpack:///src/app/configs/channels/channels.component.html","webpack:///src/app/configs/reasonapp/reasonapp.component.ts","webpack:///src/app/configs/reasonapp/reasonapp.component.html","webpack:///src/app/configs/configs.routing.module.ts"],"names":["CategoryComponent","fb","_snackBar","http","rows","data","filteredData","columns","name","tb2columns","tb2data","tb2filteredData","editForm","group","id","category","units","mainurl","localStorage","getItem","fetch","tb2fetch","register","cb","req","XMLHttpRequest","open","onload","JSON","parse","response","send","event","val","target","value","toLowerCase","colsAmt","length","keys","Object","filter","item","i","toString","indexOf","table2","offset","row","rowIndex","setValue","selectedRowData","patchValue","type","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","arrayRemove","subscribe","showNotification","dismiss","DismissReason","cancel","array","element","form","key","empdata","put","closeEditModal","nativeElement","click","push","post","reset","closeAddModal","table","min","max","Math","floor","random","message","duration","verticalPosition","horizontalPosition","panelClass","colorName","placementFrom","placementAlign","filterDatatable","addRow","onAddRowSave","onEditSave","selector","templateUrl","styleUrls","roleTemplate","ProductsComponent","router","hide","agree","productdata","getchannel","productcode","description","description1","description2","totalorders","minstock","totalcostordered","purchasecost","rack","rol","livestock","safestock","itemsdata","today","Date","searchMoviesCtrl","isLoading","productdataname","productdatadic1","productdatadic2","productdatacode","keycode","key1","key2","keyword","totalcost","console","log","get","res","userid","tag","confirmButtonColor","cancelButtonColor","isConfirmed","navigate","tagresponce","arg0","arg1","arg2","arg3","Error","itemDetails","itemcodefroms","e","onRegister","selectEvent","onChangeSearch","onFocused","ProductmasterComponent","files","serverUrl","myFiles","categorydata","rackdata","formData","reportProgress","observe","file","FormData","append","inProgress","sendFormData","fileUpload","forEach","sendFile","onchange","index","progress","sendFiles","getdatareason","getdatarack","receivedFile","isFileupload","alert","reader","FileReader","readAsText","csv","code","count","refreshData","onClick","ChannelsComponent","ReasonappComponent","reason","details","routes","path","redirectTo","pathMatch","component","configsRoutingModule","forChild","imports","exports"],"mappings":"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","file":"default~configs-configs-module~storemanagement-storemanagement-module~usermanagement-usermanagement-module-es5.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.sass']\n})\nexport class CategoryComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'units' },\n    { name: 'category' }\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'units' },\n    { name: 'category' }\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  type: any;\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n      category: new FormControl(),\n      units: new FormControl(),\n\n\n    });\n  }\n  mainurl;\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      units: [''],\n      id: [''],\n      category: [''],\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl+ 'category');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      category: row.category,\n      units :row.units\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n      type: this.type\n\n    });\n  }\n\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl+ 'category/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted.',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted :)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n\n\n\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.category = form.value.category;\n        value.units = form.value.units;\n\n      }\n      let empdata = {\n        'category' : form.value.category,\n        'units' : form.value.units,\n\n\n\n      }\n      this.http.put(this.mainurl+ 'category/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl+ 'category', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  units: String;\n  category: String;\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Category</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"category\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Category</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"units\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Units</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                            Category</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Category</mat-label>\n                                                              <input matInput formControlName=\"category\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('category').hasError('required')\">\n                                                              category  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Units</mat-label>\n                                                            <input matInput formControlName=\"units\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('units').hasError('required')\">\n                                                            units  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.id}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Category</mat-label>\n                                                              <input matInput formControlName=\"category\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('category').hasError('required')\">\n                                                                  category required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Units</mat-label>\n                                                            <input matInput formControlName=\"units\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('units').hasError('required')\">\n                                                                units required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.sass']\n})\nexport class ProductsComponent implements OnInit {\n  register: FormGroup;\n  hide = true;\n  agree = false;\n  customForm: FormGroup;\n  empdata: any = {};\n  productdata: any = {};\n  getchannel: any = {};\n  form: FormGroup = new FormGroup({\n    id: new FormControl(),\n      productcode: new FormControl(),\n      name: new FormControl(),\n      description: new FormControl(),\n      description1: new FormControl(),\n      description2: new FormControl(),\n      category: new FormControl(),\n      totalorders: new FormControl(),\n      minstock: new FormControl(),\n      totalcostordered: new FormControl(),\n      purchasecost: new FormControl(),\n      rack: new FormControl(),\n      units: new FormControl(),\n      rol: new FormControl(),\n      livestock: new FormControl(),\n      safestock: new FormControl(),\n\n\n  });\n\n  itemsdata: any = {};\n  totalcost: number;\n  today= new Date();\n  jstoday;\n  data: any[];\n  closeAddModal: any;\n  constructor(private fb: FormBuilder , private http: HttpClient , private router : Router ) {\n\n      this.form = this.fb.group({\n        id: [''],\n        productcode: [''],\n        name: [''],\n        description: [''],\n        description1: [''],\n        description2: [''],\n        category: [''],\n        totalorders: [''],\n        minstock: [''],\n        totalcostordered: [''],\n        purchasecost: [''],\n        rack: [''],\n        units: [''],\n        rol: [''],\n        livestock: [''],\n        safestock: [''],\n\n      });\n\n  }\n  searchMoviesCtrl = new FormControl();\n  filteredMovies: any;\n  isLoading = false;\n  errorMsg: string;\n  onChangeEvent(event: any){\n    this.totalcost = event.target.value * this.itemsdata.purchasecost;\n    console.log(this.itemsdata.purchasecost);\n    console.log(this.totalcost);\n\n  }\n  itemDetails(id){\n\n    this.http.get(this.mainurl + 'product/'+id).subscribe(res => {\n      this.itemsdata = res;\n      console.log(\"all data for the request\", this.itemsdata);\n    });\n\n  }\n  productdataname : any ={};\n  productdatadic1 : any ={};\n  productdatadic2 : any ={};\n  productdatacode : any ={};\nkeycode = 'productcode';\nuserid;\nmainurl;\n\n  ngOnInit(): void {\n    this.userid = localStorage.getItem('userid');\n    this.mainurl = localStorage.getItem('mainurl');\n\n    this.http.get(this.mainurl + 'productcode').subscribe(res => {\n      this.productdatacode = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n      console.log(\"all names\", this.productdatacode);\n    });\n    this.http.get(this.mainurl + 'emp/'+this.userid).subscribe(res => {\n      this.empdata = res;\n      console.log(\"all data\", this.empdata);\n    });\n    this.http.get(this.mainurl + 'product').subscribe(res => {\n      this.productdata = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n      console.log(\"all data\", this.productdata);\n    });\n    this.http.get(this.mainurl + 'productname').subscribe(res => {\n      this.productdataname = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n      console.log(\"all names\", this.productdataname);\n    });\n    this.http.get(this.mainurl + 'productdis1').subscribe(res => {\n      this.productdatadic1 = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n      console.log(\"all names\", this.productdatadic1);\n    });\n    this.http.get(this.mainurl + 'productdis2').subscribe(res => {\n      this.productdatadic2 = res;\n     // localStorage.setItem('productdetails', JSON.stringify(this.productdata));\n      console.log(\"all names\", this.productdatadic2);\n    });\n    this.http.get(this.mainurl + 'channel').subscribe(res => {\n      this.getchannel = res;\n      console.log(\"all data\", this.getchannel);\n    });\n  }\n\nkey1 = 'description1';\nkey2 = 'description2';\n\n  getdatasearch(){}\n  // successAlertNotification(tag){\n  //   Swal.fire('Hi', 'Congrats! operation successfull', tag)\n  // }\n\n  successAlertNotification(tag){\n\n    // Swal.fire( 'new request came',dataget)\n    Swal.fire({\n      title: 'New Request Received' +tag,\n      text: tag,\n      icon: 'info',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, Acknowledge it!'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        this.router.navigate(['/storemng/main']);\n\n      }\n    })\n  }\n\n  tagresponce : any ;\n\n  onEditSave() {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'You want to edit the selected Item!',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, edit it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        console.log('Form Value', this.form.value);\n    this.http.put(this.mainurl+ 'product/'+this.form.value.id, this.form.value).subscribe();\n    this.form.setValue({\n      id: '',\n      productcode: '',\n      name:'',\n      description: '',\n      description1: '',\n      description2: '',\n      category: '',\n      totalorders: '',\n      minstock: '',\n      totalcostordered: '',\n      purchasecost: '',\n      rack: '',\n      units: '',\n      rol: '',\n      livestock: '',\n      safestock: '',\n\n    });\n        Swal.fire(\n          'Updated!',\n\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n\n          'error'\n        )\n      }\n    })\n\n\n\n  //   this.router.navigateByUrl('/stockupdate', { skipLocationChange: true }).then(() => {\n  //     this.router.navigate(['/stockupdate']);\n  // });\n\n    return true;\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n\n\n  onRegister() {\n      console.log('Form Value', this.form.value);\nthis.onEditSave()\n\n      this.http.post(this.mainurl + 'emprequest', this.form.value).subscribe(\n        (val) => {\n            console.log(\"POST call successful value returned in body\",\n\n                        val);\n          this.tagresponce =val\n                        //  alert(this.tagresponce.message);\n\n                          // Swal.fire( this.tagresponce.message)\n                          // Swal.fire({\n                          //   title: 'New Request Received' +this.tagresponce.message,\n                          //   text: '',\n                          //   icon: 'info',\n                          //   showCancelButton: true,\n                          //   confirmButtonColor: '#3085d6',\n                          //   cancelButtonColor: '#d33',\n                          //   confirmButtonText: 'Yes, Acknowledge it!'\n                          // }).then((result) => {\n                          //   if (result.isConfirmed) {\n                          //     // this.router.navigate(['/config/updateitem']);\n\n                          //   }\n                          // })\n\n        },\n\n        response => {\n\n\n\n\n        },\n        () => {\n            console.log(\"The POST observable is now completed.\");\n        });\n      this.data = [...this.data];\n\n\n\n      // console.log(this.data);\n      this.form.reset();\n      this.closeAddModal.nativeElement.click();\n      this.showNotification(\n        'bg-green',\n        'Add Record Successfully',\n        'bottom',\n        'right'\n      );\n\n  }\n  showNotification(arg0: string, arg1: string, arg2: string, arg3: string) {\n    throw new Error('Method not implemented.');\n  }\n\nitemcodefroms ;\n\n  selectEvent(item) {\n    if(item){\n    console.log(item.id);\n    this.itemDetails(item.id);\n this.itemcodefroms =item.id\nconsole.log('this is code',this.itemcodefroms);\n    }\n    // do something with selected item\n  }\n\n  onChangeSearch(val: string) {\n    // fetch remote data from here\n    // And reassign the 'data' which is binded to 'data' property.\n  }\n\n  onFocused(e){\n    if(e){\n    console.log('this is selected',e.id);\n    this.itemDetails(e.id);\n    this.itemcodefroms =e.id\n    console.log('this is code',this.itemcodefroms);\n    }\n  }\n  keyword = 'name';\n\n\n\n  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}\n","\n\n\n<section class=\"content\">\n  <div class=\"container-fluid\">\n    <!-- Basic Validation -->\n    <div class=\"row clearfix\">\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n        <div class=\"card\">\n          <div class=\"header\">\n            <h2>\n              <strong>Update Item</strong> Form</h2>\n            <ul class=\"header-dropdown m-r--5\">\n              <li class=\"dropdown\">\n                <a href=\"#\" onClick=\"return false;\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\"\n                  aria-expanded=\"false\">\n                  <i class=\"material-icons\">more_vert</i>\n                </a>\n\n              </li>\n            </ul>\n          </div>\n          <div class=\"body\">\n            <form class=\"register-form m-4\" [formGroup]=\"form\" (ngSubmit)=\"onRegister()\">\n              <div class=\"row\">\n\n              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                <div class=\"example-full-width\" class=\"ng-autocomplete\">\n                  <ng-autocomplete\n                    [data]=\"productdataname\"\n                    placeHolder=\"Enter the Item Name\"\n                    [searchKeyword]=\"keyword\"\n                    (selected)='selectEvent($event)'\n                    (inputChanged)='onChangeSearch($event)'\n                    (inputFocused)='onFocused($event)'\n                    [itemTemplate]=\"itemTemplate\"\n                    [notFoundTemplate]=\"notFoundTemplate\">\n                  </ng-autocomplete>\n\n                  <ng-template #itemTemplate let-item>\n                  <a [innerHTML]=\"item.name\"></a>\n                  </ng-template>\n\n                  <ng-template #notFoundTemplate let-notFound>\n                  <div [innerHTML]=\"notFound\"></div>\n                  </ng-template>\n                  </div>\n\n\n            </div>\n            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n              <div class=\"example-full-width\" class=\"ng-autocomplete\">\n                <ng-autocomplete\n                  [data]=\"productdatadic1\"\n                  [searchKeyword]=\"key1\"\n                  placeHolder=\"Enter the Item Description 1\"\n                  (selected)='selectEvent($event)'\n                  (inputChanged)='onChangeSearch($event)'\n                  (inputFocused)='onFocused($event)'\n                  [itemTemplate]=\"itemTemplates\"\n                  [notFoundTemplate]=\"notFoundTemplates\">\n                </ng-autocomplete>\n\n                <ng-template #itemTemplates let-item>\n                <a [innerHTML]=\"item.description1\"></a>\n                </ng-template>\n\n                <ng-template #notFoundTemplates let-notFound>\n                <div [innerHTML]=\"notFound\"></div>\n                </ng-template>\n                </div>\n\n\n          </div>\n          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n            <div class=\"example-full-width\" class=\"ng-autocomplete\">\n              <ng-autocomplete\n                [data]=\"productdatadic2\"\n                placeHolder=\"Enter the item Description 2\"\n                [searchKeyword]=\"key2\"\n                (selected)='selectEvent($event)'\n                (inputChanged)='onChangeSearch($event)'\n                (inputFocused)='onFocused($event)'\n                [itemTemplate]=\"itemTemplates2\"\n                [notFoundTemplate]=\"notFoundTemplates2\">\n              </ng-autocomplete>\n\n              <ng-template #itemTemplates2 let-item>\n              <a [innerHTML]=\"item.description2\"></a>\n              </ng-template>\n\n              <ng-template #notFoundTemplates2 let-notFound>\n              <div [innerHTML]=\"notFound\"></div>\n              </ng-template>\n              </div>\n\n\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\" >\n          <div class=\"example-full-width\" class=\"ng-autocomplete\">\n            <ng-autocomplete\n              [data]=\"productdatacode\"\n              placeHolder=\"Enter the Item Code\"\n              [searchKeyword]=\"keycode\"\n              (selected)='selectEvent($event)'\n              (inputChanged)='onChangeSearch($event)'\n              (inputFocused)='onFocused($event)'\n              [itemTemplate]=\"itemTemplatescode\"\n              [notFoundTemplate]=\"notFoundTemplatescode\">\n            </ng-autocomplete>\n\n            <ng-template #itemTemplatescode let-item>\n            <a [innerHTML]=\"item.productcode\"></a>\n            </ng-template>\n\n            <ng-template #notFoundTemplatescode let-notFound>\n            <div [innerHTML]=\"notFound\"></div>\n            </ng-template>\n            </div>\n\n\n      </div>\n          <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n            <div class=\"example-full-width\" class=\"ng-autocomplete\">\n              <ng-autocomplete\n                [data]=\"productdatadic2\"\n                [searchKeyword]=\"key2\"\n                (selected)='selectEvent($event)'\n                (inputChanged)='onChangeSearch($event)'\n                (inputFocused)='onFocused($event)'\n                [itemTemplate]=\"itemTemplate\"\n                [notFoundTemplate]=\"notFoundTemplate\">\n              </ng-autocomplete>\n\n              <ng-template #itemTemplate let-item>\n              <a [innerHTML]=\"item.description1\"></a>\n              </ng-template>\n\n              <ng-template #notFoundTemplate let-notFound>\n              <div [innerHTML]=\"notFound\"></div>\n              </ng-template>\n              </div>\n\n\n        </div>\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n          <div class=\"example-full-width\" class=\"ng-autocomplete\">\n            <ng-autocomplete\n              [data]=\"productdataname\"\n              [searchKeyword]=\"keyword\"\n              (selected)='selectEvent($event)'\n              (inputChanged)='onChangeSearch($event)'\n              (inputFocused)='onFocused($event)'\n              [itemTemplate]=\"itemTemplate\"\n              [notFoundTemplate]=\"notFoundTemplate\">\n            </ng-autocomplete>\n\n            <ng-template #itemTemplate let-item>\n            <a [innerHTML]=\"item.name\"></a>\n            </ng-template>\n\n            <ng-template #notFoundTemplate let-notFound>\n            <div [innerHTML]=\"notFound\"></div>\n            </ng-template>\n            </div>\n\n\n      </div> -->\n\n\n\n      </div>\n\n      <div class=\"row\">\n\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Item Code</mat-label>\n\n            <!-- <input matInput placeholder =\"itemcode\"    [value]=\"itemsdata.productcode\" > -->\n            <input matInput  formControlName=\"productcode\"   [(ngModel)]=\"itemsdata.productcode\" value = \"{{itemsdata.productcode}}\" [readonly]=\"true\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Item Name</mat-label>\n\n            <input matInput placeholder =\"Ex. John\"  [(ngModel)]=\"itemsdata.name\" formControlName=\"name\" [value]=\"itemsdata.name\" [readonly]=\"true\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Item Category</mat-label>\n\n            <input matInput placeholder =\"Ex. John\"  [(ngModel)]=\"itemsdata.category\" formControlName=\"category\" [value]=\"itemsdata.category\"  [readonly]=\"true\">\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Description </mat-label>\n\n\n            <input matInput  formControlName=\"description\"   [(ngModel)]=\"itemsdata.description\" value = \"{{itemsdata.description}}\" [readonly]=\"true\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Description 1</mat-label>\n\n            <input matInput formControlName=\"description1\"  [(ngModel)]=\"itemsdata.description1\"  [value]=\"itemsdata.description1\" [readonly]=\"true\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Description 2</mat-label>\n\n            <input matInput formControlName=\"description2\"   [(ngModel)]=\"itemsdata.description2\"  [value]=\"itemsdata.description2\"  [readonly]=\"true\">\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Live Stock</mat-label>\n\n            <input matInput formControlName=\"livestock\"  [(ngModel)]=\"itemsdata.livestock\"  [value]=\"itemsdata.livestock\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Min Stock</mat-label>\n\n            <input matInput formControlName=\"minstock\"  [(ngModel)]=\"itemsdata.minstock\"  [value]=\"itemsdata.minstock\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Safe Stock</mat-label>\n\n            <input matInput formControlName=\"safestock\"  [(ngModel)]=\"itemsdata.safestock\"  [value]=\"itemsdata.safestock\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Rol Stock</mat-label>\n\n            <input matInput formControlName=\"rol\"  [(ngModel)]=\"itemsdata.rol\"  [value]=\"itemsdata.rol\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Units</mat-label>\n\n            <input matInput formControlName=\"units\"  [(ngModel)]=\"itemsdata.units\"  [value]=\"itemsdata.units\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Ref. ID</mat-label>\n\n            <input matInput formControlName=\"id\"  [(ngModel)]=\"itemsdata.id\"  [value]=\"itemsdata.id\" [readonly]=\"true\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Rack</mat-label>\n\n            <input matInput formControlName=\"rack\"  [(ngModel)]=\"itemsdata.rack\"   [value]=\"itemsdata.rack\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Total Price Ordered Till</mat-label>\n\n            <input matInput formControlName=\"totalcostordered\"  [(ngModel)]=\"itemsdata.totalcostordered\"  [value]=\"itemsdata.totalcostordered\" >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n        <div class=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mb-2\">\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n            <mat-label>Total Quantity Ordered Till</mat-label>\n\n            <input matInput formControlName=\"totalorders\"  [(ngModel)]=\"itemsdata.totalorders\"  [value]=\"itemsdata.totalorders\"  >\n            <mat-icon matSuffix>star</mat-icon>\n\n          </mat-form-field>\n        </div>\n      </div>\n\n\n              <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                  <button class=\"mr-3\" mat-raised-button color=\"primary\">Submit</button>\n                  <button type=\"button\" mat-button>Cancel</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- #END# Basic Validation -->\n  </div>\n</section>\n","//import { HttpClient } from '@angular/common/http';\nimport { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport { delay } from 'rxjs/operators';\nimport * as XLSX from 'xlsx';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType } from  '@angular/common/http';\nimport { map } from  'rxjs/operators';\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-productmaster',\n  templateUrl: './productmaster.component.html',\n  styleUrls: ['./productmaster.component.sass']\n})\n\nexport class ProductmasterComponent implements OnInit {\n\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  @ViewChild(\"fileUpload\", {static: false}) fileUpload: ElementRef;\n    files  = [];\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  mainurl;\n  serverUrl: string = \"http://163.157.20.76:2020/uploadernew\";\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  empdata : any ={};\n  columns = [\n    { name: 'id' },\n    { name: 'productcode' },\n    { name: 'name' },\n    { name: 'description' },\n    { name: 'description1' },\n    { name: 'description2' },\n    { name: 'category' },\n    { name: 'totalorders' }  ,\n    { name: 'minstock' },\n    { name: 'totalcostordered' },\n    { name: 'purchasecost' },\n    { name: 'rack' },\n    { name: 'units' },\n    { name: 'rol' },\n    { name: 'livestock' },\n    { name: 'safestock' },\n\n\n  ];\n  public sendFormData(formData) {\n    return this.http.post<any>(this.serverUrl, formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n}\nsendFile(file) {\n  const formData = new FormData();\n  formData.append('file', file.data);\n  file.inProgress = true;\n  this.sendFormData(formData).subscribe((event: any) => {\n      if (typeof (event) === 'object') {\n        // console.log(event.body);\n      }\n    });\n}\nprivate sendFiles() {\n  this.fileUpload.nativeElement.value = '';\n  this.files.forEach(file => {\n    this.sendFile(file);\n  });\n}\nonClick() {\n  const fileUpload = this.fileUpload.nativeElement;fileUpload.onchange = () => {\n  for (let index = 0; index < fileUpload.files.length; index++)\n  {\n   const file = fileUpload.files[index];\n   this.files.push({ data: file, inProgress: false, progress: 0});\n  }\n    this.sendFiles();\n  };\n  fileUpload.click();\n}\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'productcode' },\n    { name: 'name' },\n    { name: 'description' },\n    { name: 'description1' },\n    { name: 'description2' },\n    { name: 'category' },\n    { name: 'totalorders' }  ,\n    { name: 'minstock' },\n    { name: 'totalcostordered' },\n    { name: 'purchasecost' },\n    { name: 'rack' },\n    { name: 'units' },\n    { name: 'rol' },\n    { name: 'livestock' },\n    { name: 'safestock' },\n\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  type: any;\n  name: any;\n  code: any;\n  receivedFile: File;\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n      productcode: new FormControl(),\n      name: new FormControl(),\n      description: new FormControl(),\n      description1: new FormControl(),\n      description2: new FormControl(),\n      category: new FormControl(),\n      totalorders: new FormControl(),\n      minstock: new FormControl(),\n      totalcostordered: new FormControl(),\n      purchasecost: new FormControl(),\n      rack: new FormControl(),\n      units: new FormControl(),\n      rol: new FormControl(),\n      livestock: new FormControl(),\n      safestock: new FormControl(),\n    });\n  }\n  myFiles = [];\n\n  categorydata : any ={};\n  rackdata :  any ={};\n  getdatareason(){\n    this.http.get(this.mainurl + 'category').subscribe(res => {\n      this.categorydata = res;\n      // console.log('this is reason ',  this.categorydata );\n\n    });\n\n  }\n  getdatarack(){\n    this.http.get(this.mainurl + 'rack').subscribe(res => {\n      this.rackdata = res;\n      // console.log('this is reason ',  this.rackdata );\n\n    });\n\n  }\n\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this.getdatareason();\n    this.getdatarack();\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      id: [''],\n      productcode: [''],\n      name: [''],\n      description: [''],\n      description1: [''],\n      description2: [''],\n      category: [''],\n      totalorders: [''],\n      minstock: [''],\n      totalcostordered: [''],\n      purchasecost: [''],\n      rack: [''],\n      units: [''],\n      rol: [''],\n      livestock: [''],\n      safestock: [''],\n\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl + 'product');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  handleFileInput(files: FileList) {\n    // // console.log('Inside File upload function\\nFile uploaded');\n    this.receivedFile = files.item(0);\n    const isFileupload = true;\n    // // console.log(` Received File: ${this.receivedFile}`);\n    if (isFileupload) {\n      alert('Csv uploaded');\n    }\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      productcode: row.productcode,\n      name: row.name,\n      description: row.description,\n      description1: row.description1,\n      description2: row.description2,\n      category: row.category,\n      totalorders: row.totalorders,\n      minstock: row.minstock,\n      totalcostordered: row.totalcostordered,\n      purchasecost: row.purchasecost,\n      rack: row.rack,\n      units: row.units,\n      rol: row.rol,\n      livestock: row.livestock,\n      safestock: row.safestock,\n\n    });\n    this.selectedRowData = row;\n  }\n\n//   onFileChange(event: any) {\n\n//     for (var i = 0; i < event.target.files.length; i++) {\n//       this.myFiles.push(event.target.files[i]);\n//     }\n//     /* wire up file reader */\n//     const frmData = new FormData();\n\n//     // tslint:disable-next-line: prefer-for-of\n//     for (var i = 0; i < this.myFiles.length; i++) {\n//       frmData.append('fileUpload', this.myFiles[i]);\n//     }\n\n\n//     const target: DataTransfer = (event.target) as DataTransfer;\n//     if (target.files.length !== 1) {\n//       throw new Error('Cannot use multiple files');\n//     }\n//     const reader: FileReader = new FileReader();\n//     reader.readAsBinaryString(target.files[0]);\n//     reader.onload = (e: any) => {\n//       /* create workbook */\n//       const binarystr: string = e.target.result;\n//       const wb: XLSX.WorkBook = XLSX.read(binarystr, { type: 'binary' });\n\n//       /* selected the first sheet */\n//       const wsname: string = wb.SheetNames[0];\n//       const ws: XLSX.WorkSheet = wb.Sheets[wsname];\n\n//       /* save data */\n//       const data = XLSX.utils.sheet_to_json(ws); // to get 2d array pass 2nd parameter as object {header: 1}\n//       // console.log('data length')\n//       // console.log((data.length));\n//       // this.http.post(this.mainurl + 'fileupload', frmData).subscribe();\n\n//       // tslint:disable-next-line: prefer-for-of\n//       for (var i = 0; i < data.length; i++) {\n//         var eachItems =\n//                      {\n//                        category: data[i]['Item Class'],\n//                         productcode: data[i]['Item'],\n//                         description2: data[i]['Extended description 2'],\n//                         description1: data[i]['Extended description 1'],\n//                         name: data[i]['Description'],\n//                         purchasecost: data[i]['Std Cost'],\n//                         safestock: data[i]['SAFETY_STK'],\n//                         minstock: data[i]['MIN'],\n//                         rol: data[i]['ROL'],\n//                         livestock: data[i]['livestock'],\n\n\n//                         // category: data[i]['Item_Class']\n//                      };\n//                      this.http.post(this.mainurl + 'uploadproduct', eachItems).subscribe();\n//         // var eachItem =\n//         //              {\n//         //                  Whs: data[i]['Whs'],\n//         //                  Item: data[i]['Item'],\n//         //                  Extended_description_2: data[i]['Extended description 2'],\n//         //                  Extended_description_1: data[i]['Extended description 1'],\n//         //                  Description: data[i]['Description'],\n//         //                  On_hand: data[i]['On-hand'],\n//         //                  On_order: data[i]['On-order'],\n//         //                  Std_Cost: data[i]['Std Cost'],\n//         //                  Item_Class: data[i]['Item Class'],\n//         //              };\n//       // this.http.post(this.mainurl + 'fileupload', eachItem).subscribe();\n//       }\n\n//       // console.log(data[0]); // Data will be logged in array format containing objects\n\n//     };\n//  }\npublic changeListener(files: FileList){\n  // console.log(files);\n  if(files && files.length > 0) {\n     let file : File = files.item(0);\n       // console.log(file.name);\n       // console.log(file.size);\n       // console.log(file.type);\n       let reader: FileReader = new FileReader();\n       reader.readAsText(file);\n       reader.onload = (e) => {\n          let csv: string = reader.result as string;\n          // console.log(csv);\n       }\n    }\n}\n\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n      name: this.name,\n      code: this.code\n    });\n  }\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl + 'product/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted :)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n       //  value.id= form.value.code;\n        value.productcode= form.value.productcode;\n        value.name= form.value.name;\n        value.description= form.value.description;\n        value.description1= form.value.description1;\n        value.description2= form.value.description2;\n        value.category= form.value.category;\n        value.totalorders= form.value.totalorders;\n        value.minstock= form.value.minstock;\n        value.totalcostordered= form.value.totalcostordered;\n        value.purchasecost= form.value.purchasecost;\n        value.rack= form.value.rack;\n        value.units= form.value.units;\n        value.rol= form.value.rol;\n        value.livestock= form.value.livestock;\n        value.safestock= form.value.safestock;\n\n      }\n    });\n\n      let count = 1;\n       this.empdata = {\n           //  'id': form.value.code,\n      'productcode': form.value.productcode,\n      'name': form.value.name,\n      'description': form.value.description,\n      'description1': form.value.description1,\n      'description2': form.value.description2,\n      'category': form.value.category,\n      'totalorders': form.value.totalorders,\n      'minstock': form.value.minstock,\n      'totalcostordered': form.value.totalcostordered,\n      'purchasecost': form.value.purchasecost,\n      'rack': form.value.rack,\n      'units': form.value.units,\n      'rol': form.value.rol,\n      'livestock': form.value.livestock,\n      'safestock': form.value.safestock,\n\n      }\n      // if(count == 1){\n      this.http.put(this.mainurl + 'product/'+form.value.id, this.empdata).subscribe(\n        result => {\n          // console.log(\"put request\", result);\n          this.refreshData();\n        }\n      )\n\n      this.closeEditModal.nativeElement.click();\n      // count = count +1;\n\n\n      // }\n\n\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n\n    return true;\n\n\n  }\n\n  refreshData(){\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl + 'product', form.value).subscribe();\n    this.data = [...this.data];\n    // // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl + 'filterproduct/'+event);\n    req.onload = () => {\n      this.data  = JSON.parse(req.response);\n\n    };\n\n\n\n    req.send();\n\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n\n\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  productcode: String;\n  name: String;\n  description: String;\n  description1: String;\n  description2: String;\n  category: String;\n  totalorders: String;\n  minstock: String;\n  totalcostordered: String;\n  purchasecost: String;\n  rack: String;\n  units: String;\n  rol: String;\n  livestock: String;\n  safestock: String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Items</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                              <!-- <input id=\"my-file-selector\" type=\"file\" (change)=\"onFileChange($event)\" name=\"uploadExcel\"> -->\n\n                                          </div>\n                                      </li>\n                                  </ul>\n                                  <ul>\n                                    <li>\n\n                                    </li>\n                                  </ul>\n\n                              </div>\n                                <div>\n                                <div>\n                                    <ul>\n                                    <li *ngFor=\"let file of files\">\n\n                                        <span id=\"file-label\">\n                                            {{file.data.name}}\n                                        </span>\n                                    </li>\n                                </ul>\n\n                                <button (click)=\"onClick()\">\n                                    Upload\n                                </button>\n                                <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" accept=\"image/*\" style=\"display:none;\" />\n                                </div>\n                                </div>\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"name\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Name</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"productcode\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Code</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                            Items</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Name</mat-label>\n                                                              <input matInput formControlName=\"name\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('name').hasError('required')\">\n                                                              Name  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Code</mat-label>\n                                                            <input matInput formControlName=\"productcode\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('productcode').hasError('required')\">\n                                                            code  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                  </div>\n                                                  <div class=\"row\">\n\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Description</mat-label>\n                                                            <input matInput formControlName=\"description\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('description').hasError('required')\">\n                                                            description  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Description 1</mat-label>\n                                                          <input matInput formControlName=\"description1\">\n                                                          <mat-error\n                                                          *ngIf=\"register.get('description1').hasError('required')\">\n                                                          description1  is required\n                                                      </mat-error>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                      </mat-form-field>\n                                                  </div>\n                                                </div>\n                                                <div class=\"row\">\n\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Description 2</mat-label>\n                                                          <input matInput formControlName=\"description2\">\n                                                          <mat-error\n                                                          *ngIf=\"register.get('description2').hasError('required')\">\n                                                          description2  is required\n                                                      </mat-error>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                      </mat-form-field>\n                                                  </div>\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Category</mat-label>\n                                                        <mat-select formControlName=\"category\"   >\n                                                          <mat-option *ngFor=\"let option of categorydata\"   [(ngModel)]=\"option.category\"  value=\"{{option.category}}\">{{ option.category }}</mat-option>\n                                                        </mat-select>\n                                                        <mat-error\n                                                        *ngIf=\"register.get('category').hasError('required')\">\n                                                        category  is required\n                                                    </mat-error>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                    </mat-form-field>\n                                                </div>\n                                              </div>\n                                              <div class=\"row\">\n\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Purchasecost</mat-label>\n                                                        <input matInput formControlName=\"purchasecost\">\n                                                        <mat-error\n                                                        *ngIf=\"register.get('purchasecost').hasError('required')\">\n                                                        Purchasecost  is required\n                                                    </mat-error>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                    </mat-form-field>\n                                                </div>\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>Units</mat-label>\n                                                      <input matInput formControlName=\"units\">\n                                                      <mat-error\n                                                      *ngIf=\"register.get('units').hasError('required')\">\n                                                      Units  is required\n                                                  </mat-error>\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                  </mat-form-field>\n                                              </div>\n                                            </div>\n                                            <div class=\"row\">\n\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>ROL</mat-label>\n                                                      <input matInput formControlName=\"rol\">\n                                                      <mat-error\n                                                      *ngIf=\"register.get('rol').hasError('required')\">\n                                                      ROL  is required\n                                                  </mat-error>\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                  </mat-form-field>\n                                              </div>\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\"\n                                                    appearance=\"outline\">\n                                                    <mat-label>Safe Stock</mat-label>\n                                                    <input matInput formControlName=\"safestock\">\n                                                    <mat-error\n                                                    *ngIf=\"register.get('safestock').hasError('required')\">\n                                                    Safe Stock  is required\n                                                </mat-error>\n                                                    <mat-icon matSuffix>star</mat-icon>\n                                                </mat-form-field>\n                                            </div>\n                                          </div>\n                                          <div class=\"row\">\n\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\"\n                                                    appearance=\"outline\">\n                                                    <mat-label>Min Stock</mat-label>\n                                                    <input matInput formControlName=\"minstock\">\n                                                    <mat-error\n                                                    *ngIf=\"register.get('minstock').hasError('required')\">\n                                                    Min Stock  is required\n                                                </mat-error>\n                                                    <mat-icon matSuffix>star</mat-icon>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                              <mat-form-field class=\"example-full-width\"\n                                                  appearance=\"outline\">\n                                                  <mat-label>Live Stock</mat-label>\n                                                  <input matInput formControlName=\"livestock\">\n                                                  <mat-error\n                                                  *ngIf=\"register.get('livestock').hasError('required')\">\n                                                  Live Stock  is required\n                                              </mat-error>\n                                                  <mat-icon matSuffix>star</mat-icon>\n                                              </mat-form-field>\n                                          </div>\n\n                                        </div>\n                                        <div class=\"row\">\n\n                                          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                              <mat-form-field class=\"example-full-width\"\n                                                  appearance=\"outline\">\n                                                  <mat-label>Rack</mat-label>\n                                                  <input matInput formControlName=\"rack\">\n                                                  <mat-error\n                                                  *ngIf=\"register.get('rack').hasError('required')\">\n                                                  Rack  is required\n                                              </mat-error>\n                                                  <mat-icon matSuffix>star</mat-icon>\n                                              </mat-form-field>\n                                          </div>\n                                          <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                            <mat-form-field class=\"example-full-width\"\n                                                appearance=\"outline\">\n                                                <mat-label>livestock</mat-label>\n                                                <input matInput formControlName=\"livestock\">\n                                                <mat-error\n                                                *ngIf=\"register.get('livestock').hasError('required')\">\n                                                livestock  is required\n                                            </mat-error>\n                                                <mat-icon matSuffix>star</mat-icon>\n                                            </mat-form-field>\n                                        </div> -->\n\n                                      </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.id}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Name</mat-label>\n                                                              <input matInput formControlName=\"name\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('name').hasError('required')\">\n                                                                  Name required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Productcode</mat-label>\n                                                            <input matInput formControlName=\"productcode\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('productcode').hasError('required')\">\n                                                                Productcode required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n                                                  <div class=\"row\">\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Description</mat-label>\n                                                            <input matInput formControlName=\"description\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('description').hasError('required')\">\n                                                                Description required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Description 1</mat-label>\n                                                          <input matInput formControlName=\"description1\" required>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('description1').hasError('required')\">\n                                                              Description1 required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n\n                                                </div>\n                                                <div class=\"row\">\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Description 2</mat-label>\n                                                          <input matInput formControlName=\"description2\" required>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('description2').hasError('required')\">\n                                                              Description2 required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Category</mat-label>\n                                                        <mat-select formControlName=\"category\"   >\n                                                          <mat-option *ngFor=\"let option of categorydata\"   [(ngModel)]=\"option.category\"  value=\"{{option.category}}\">{{ option.category }}</mat-option>\n                                                        </mat-select>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                        <mat-error\n                                                            *ngIf=\"editForm.get('category').hasError('required')\">\n                                                            Category required\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n\n                                              </div>\n                                              <div class=\"row\">\n                                                <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>totalorders</mat-label>\n                                                        <input matInput formControlName=\"totalorders\" required>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                        <mat-error\n                                                            *ngIf=\"editForm.get('totalorders').hasError('required')\">\n                                                            totalorders required\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div> -->\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>Min Stock</mat-label>\n                                                      <input matInput formControlName=\"minstock\" required>\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                      <mat-error\n                                                          *ngIf=\"editForm.get('minstock').hasError('required')\">\n                                                          Min Stock required\n                                                      </mat-error>\n                                                  </mat-form-field>\n                                              </div>\n\n\n\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\"\n                                                    appearance=\"outline\">\n                                                    <mat-label>Unit Cost</mat-label>\n                                                    <input matInput formControlName=\"purchasecost\" required>\n                                                    <mat-icon matSuffix>star</mat-icon>\n                                                    <mat-error\n                                                        *ngIf=\"editForm.get('purchasecost').hasError('required')\">\n                                                        purchasecost required\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n\n                                          </div>\n                                          <div class=\"row\">\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\"\n                                                    appearance=\"outline\">\n                                                    <mat-label>Rack</mat-label>\n                                                    <input matInput formControlName=\"rack\" required>\n                                                    <mat-icon matSuffix>star</mat-icon>\n                                                    <mat-error\n                                                        *ngIf=\"editForm.get('rack').hasError('required')\">\n                                                        Rack required\n                                                    </mat-error>\n                                                </mat-form-field>\n                                            </div>\n                                            <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                              <mat-form-field class=\"example-full-width\"\n                                                  appearance=\"outline\">\n                                                  <mat-label>Units</mat-label>\n                                                  <input matInput formControlName=\"units\" required>\n                                                  <mat-icon matSuffix>star</mat-icon>\n                                                  <mat-error\n                                                      *ngIf=\"editForm.get('units').hasError('required')\">\n                                                      Units required\n                                                  </mat-error>\n                                              </mat-form-field>\n                                          </div>\n\n                                        </div>\n                                        <div class=\"row\">\n                                          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                              <mat-form-field class=\"example-full-width\"\n                                                  appearance=\"outline\">\n                                                  <mat-label>ROL</mat-label>\n                                                  <input matInput formControlName=\"rol\" required>\n                                                  <mat-icon matSuffix>star</mat-icon>\n                                                  <mat-error\n                                                      *ngIf=\"editForm.get('rol').hasError('required')\">\n                                                      ROL required\n                                                  </mat-error>\n                                              </mat-form-field>\n                                          </div>\n                                          <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                            <mat-form-field class=\"example-full-width\"\n                                                appearance=\"outline\">\n                                                <mat-label>Live Stock</mat-label>\n                                                <input matInput formControlName=\"livestock\" required>\n                                                <mat-icon matSuffix>star</mat-icon>\n                                                <mat-error\n                                                    *ngIf=\"editForm.get('livestock').hasError('required')\">\n                                                    Live Stock required\n                                                </mat-error>\n                                            </mat-form-field>\n                                        </div>\n\n                                      </div>\n                                      <div class=\"row\">\n\n                                        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                          <mat-form-field class=\"example-full-width\"\n                                              appearance=\"outline\">\n                                              <mat-label>Safe Stock</mat-label>\n                                              <input matInput formControlName=\"safestock\" required>\n                                              <mat-icon matSuffix>star</mat-icon>\n                                              <mat-error\n                                                  *ngIf=\"editForm.get('safestock').hasError('required')\">\n                                                  Safe Stock required\n                                              </mat-error>\n                                          </mat-form-field>\n                                      </div>\n\n                                    </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-channels',\n  templateUrl: './channels.component.html',\n  styleUrls: ['./channels.component.sass']\n})\nexport class ChannelsComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'name' },\n    { name: 'code' }\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'name' },\n    { name: 'code' }\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  type: any;\n  name: any;\n  code: any;\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n      code: new FormControl(),\n      name: new FormControl(),\n\n\n    });\n  }\n mainurl;\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      name: [''],\n      id: [''],\n      code: [''],\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl+ 'channel');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      name: row.name,\n      code: row.code,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n      name: this.name,\n      code: this.code\n    });\n  }\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl+ 'channel/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted :)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.code = form.value.code;\n        value.name = form.value.name;\n      }\n      let empdata = {\n        'code' : form.value.code,\n        'name' : form.value.name,\n\n\n\n      }\n      this.http.put(this.mainurl+ 'channel/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl+ 'channel', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  name: String;\n  code: String;\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Channels</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"name\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Name</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"code\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Code</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                            Channels</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Name</mat-label>\n                                                              <input matInput formControlName=\"name\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('name').hasError('required')\">\n                                                              Name  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Code</mat-label>\n                                                            <input matInput formControlName=\"code\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('code').hasError('required')\">\n                                                            Code  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.name}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>name</mat-label>\n                                                              <input matInput formControlName=\"name\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('name').hasError('required')\">\n                                                                  name required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>code</mat-label>\n                                                            <input matInput formControlName=\"code\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('code').hasError('required')\">\n                                                                code required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-reasonapp',\n  templateUrl: './reasonapp.component.html',\n  styleUrls: ['./reasonapp.component.sass']\n})\nexport class ReasonappComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'reason' },\n    { name: 'Deatils' },\n\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'reason' },\n    { name: 'Deatils' },\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n\n\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n\n      reason: new FormControl(),\n      details: new FormControl(),\n\n    });\n  }\n  mainurl;\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      reason: [''],\n      details: [''],\n      id: ['']\n\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl+ 'rejectcategory');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n\n      reason: row.reason,\n      details: row.details,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n\n      // role: this.role\n    });\n  }\n\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl+ 'rejectcategory/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted :)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.reason = form.value.reason;\n        value.details = form.value.details;\n      }\n      let empdata = {\n        'reason' : form.value.reason,\n\n        'details' : form.value.details,\n\n\n      }\n      this.http.put(this.mainurl+ 'rejectcategory/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl+ 'rejectcategory', form.value).subscribe();\n    this.data = [...this.data];\n   console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n\n  reason: String;\n  details: String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Rejection Code</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"reason\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Reason Code</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"details\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Details</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              Reason Code</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Reason Code</mat-label>\n                                                              <input matInput formControlName=\"reason\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('reason').hasError('required')\">\n                                                              Reason Code  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                       <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Details</mat-label>\n                                                              <input matInput formControlName=\"details\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('details').hasError('required')\">\n                                                              details  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.reason}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Reason Code</mat-label>\n                                                            <input matInput formControlName=\"reason\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('reason').hasError('required')\">\n                                                               reason required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Details</mat-label>\n                                                          <input matInput formControlName=\"details\" required>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('details').hasError('required')\">\n                                                              details required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { ReasonappComponent } from './reasonapp/reasonapp.component';\r\nimport { ChannelsComponent } from './channels/channels.component';\r\nimport { RacksComponent } from './racks/racks.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { ProductmasterComponent } from './productmaster/productmaster.component';\r\nimport { CategoryComponent } from './category/category.component';\r\nimport { WarehousesComponent } from './warehouses/warehouses.component';\r\nimport { WarehousetypeComponent } from './warehousetype/warehousetype.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'pm',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'updateitem',\r\n     component: ProductsComponent\r\n  },\r\n\r\n  {\r\n    path: 'category',\r\n    component: CategoryComponent\r\n  },\r\n  {\r\n    path: 'pm',\r\n    component: ProductmasterComponent\r\n  },\r\n  {\r\n    path: 'reason',\r\n    component: ReasonappComponent\r\n  },\r\n\r\n  {\r\n    path: 'channel',\r\n    component: ChannelsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n// tslint:disable-next-line: class-name\r\nexport class configsRoutingModule {}\r\n"]}