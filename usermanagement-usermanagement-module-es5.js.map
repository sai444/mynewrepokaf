{"version":3,"sources":["webpack:///src/app/usermanagement/usermanagement.module.ts","webpack:///src/app/usermanagement/emp/emp.component.ts","webpack:///src/app/usermanagement/emp/emp.component.html","webpack:///src/app/usermanagement/role/role.component.ts","webpack:///src/app/usermanagement/role/role.component.html","webpack:///src/app/usermanagement/dep/dep.component.ts","webpack:///src/app/usermanagement/dep/dep.component.html","webpack:///src/app/usermanagement/user-routing.module.ts"],"names":["UsermanagementModule","declarations","imports","EmpComponent","fb","_snackBar","http","files","rows","serverUrl","data","filteredData","columns","name","tb2columns","tb2data","tb2filteredData","resondata","deptdata","editForm","group","id","empname","empnid","empnuid","dept","groups","category","location","role","password","get","mainurl","subscribe","res","console","log","localStorage","getItem","getdatareason","getdataDEPT","fetch","tb2fetch","register","cb","req","XMLHttpRequest","open","onload","JSON","parse","response","send","event","val","target","value","toLowerCase","colsAmt","length","keys","Object","filter","item","i","toString","indexOf","table2","offset","row","rowIndex","setValue","selectedRowData","patchValue","formData","post","reportProgress","observe","file","FormData","append","inProgress","sendFormData","fileUpload","nativeElement","forEach","sendFile","onchange","index","push","progress","sendFiles","click","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","result","arrayRemove","showNotification","dismiss","DismissReason","cancel","array","element","form","key","type","empdata","put","closeEditModal","reset","closeAddModal","table","min","max","Math","floor","random","message","duration","verticalPosition","horizontalPosition","panelClass","colorName","placementFrom","placementAlign","filterDatatable","addRow","onClick","onFileChange","onAddRowSave","onEditSave","selector","templateUrl","styleUrls","roleTemplate","RoleComponent","DepComponent","loc","routes","path","redirectTo","pathMatch","component","usersRoutingModule","forChild","exports"],"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","file":"usermanagement-usermanagement-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmpComponent } from './emp/emp.component';\nimport { DepComponent } from './dep/dep.component';\nimport { RoleComponent } from './role/role.component';\nimport { usersRoutingModule } from './user-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { configsRoutingModule } from '../configs/configs.routing.module';\n\n\n\n@NgModule({\n  declarations: [EmpComponent, DepComponent, RoleComponent],\n  imports: [\n    CommonModule,\n    usersRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    configsRoutingModule,\n    NgxDatatableModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MaterialFileInputModule,\n    MatRadioModule,\n    MatMenuModule,\n\n  ]\n})\nexport class UsermanagementModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-emp',\n  templateUrl: './emp.component.html',\n  styleUrls: ['./emp.component.sass']\n})\nexport class EmpComponent implements OnInit {\n\n\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n    @ViewChild(\"fileUpload\", {static: false}) fileUpload: ElementRef;\n    files  = [];\n  // rows = [];\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  serverUrl: string = \"http://localhost:2020/empupload\";\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'empname' },\n    { name: 'empnid' },\n    { name: 'empnuid' },\n    { name: 'dept' },\n    { name: 'groups' },\n    { name: 'category' },\n    { name: 'location' },\n    { name: 'role' },\n    { name: 'password' }\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'empname' },\n    { name: 'empnid' },\n    { name: 'empnuid' },\n    { name: 'dept' },\n    { name: 'groups' },\n    { name: 'category' },\n    { name: 'location' },\n    { name: 'role' },\n    { name: 'password' }\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  resondata: any ={};\n  deptdata : any ={};\n\n\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n\n\n      empname: new FormControl(),\n      empnid: new FormControl(),\n      empnuid: new FormControl(),\n      dept: new FormControl(),\n      groups: new FormControl(),\n      category: new FormControl(),\n      location: new FormControl(),\n      role: new FormControl(),\n      password: new FormControl(),\n\n    });\n  }\n  getdatareason(){\n\n    this.http.get(this.mainurl + 'dep').subscribe(res => {\n      this.deptdata = res;\n      console.log('this is reason ',  this.deptdata );\n\n    });\n\n  }\n  getdataDEPT(){\n    this.http.get(this.mainurl + 'role').subscribe(res => {\n      this.resondata = res;\n      console.log('this is reason ',  this.resondata );\n\n    });\n\n  }\n  mainurl;\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this. getdatareason();\n    this. getdataDEPT();\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      id: [''],\n      empname: [''],\n      empnid: [''],\n      empnuid: [''],\n      dept: [''],\n      groups: [''],\n      category: [''],\n      location: [''],\n      role: [''],\n      password: [''],\n\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl + 'emp');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n      console.log(data);\n\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id:  row.id,\n      empname:  row.empname,\n      empnid:  row.empnid,\n      empnuid:  row.empnuid,\n      dept:  row.dept,\n      groups:  row.groups,\n      category:  row.category,\n      location:  row.location,\n      role:  row.role,\n      password:  row.password,\n\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n\n      // loc: this.loc\n    });\n  }\n\npublic sendFormData(formData) {\n    return this.http.post<any>(this.serverUrl, formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n}\nsendFile(file) {\n  const formData = new FormData();\n  formData.append('file', file.data);\n  file.inProgress = true;\n  this.sendFormData(formData).subscribe((event: any) => {\n      if (typeof (event) === 'object') {\n        // console.log(event.body);\n      }\n    });\n}\nprivate sendFiles() {\n  this.fileUpload.nativeElement.value = '';\n  this.files.forEach(file => {\n    this.sendFile(file);\n  });\n}\nonClick() {\n  const fileUpload = this.fileUpload.nativeElement;fileUpload.onchange = () => {\n  for (let index = 0; index < fileUpload.files.length; index++)\n  {\n   const file = fileUpload.files[index];\n   this.files.push({ data: file, inProgress: false, progress: 0});\n  }\n    this.sendFiles();\n  };\n  fileUpload.click();\n}\n\n\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl + 'emp/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted:)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onFileChange(event){\n\n  }\n\n\n \n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.type = form.value.type;\n        value.empname = form.value.empname;\n        value.empnid = form.value.empnid;\n        value.empnuid = form.value.empnuid;\n        value.groups = form.value.groups;\n        value.category = form.value.category;\n        value.location = form.value.location;\n        value.role = form.value.role;\n        value.password = form.value.password  ;\n\n      }\n      let empdata = {\n\n        'empname': form.value.empname,\n        'empnid': form.value.empnid,\n        'empnuid': form.value.empnuid,\n        'dept': form.value.dept,\n        'groups': form.value.groups,\n        'category': form.value.category,\n        'location': form.value.location,\n        'role': form.value.role,\n        'password': form.value.password,\n\n\n      }\n      console.log('this is id' , empdata);\n\n      this.http.put(this.mainurl + 'emp/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl + 'emp', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n\n  empname: String;\n  empnid: String;\n  empnuid: String;\n  dept: String;\n  groups: String;\n  category: String;\n  location: String;\n  role: String;\n  password: String;\n\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>EMPLOYEE</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                      <li>\n                                      <button (click)=\"onClick()\">Upload</button>\n                                        <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" accept=\"image/*\" style=\"display:none;\" />\n                                        <input id=\"my-file-selector\" type=\"file\" (change)=\"onFileChange($event)\" name=\"uploadExcel\">\n                                      </li>\n                                  </ul>\n                              </div>\n<!-- <div>\n  <div>\n    <ul>\n      <li *ngFor=\"let file of files\">\n\n          <span id=\"file-label\">\n              {{file.data.name}}\n          </span>\n      </li>\n  </ul> -->\n\n  <!-- <button (click)=\"onClick()\">\n      Upload\n  </button> -->\n  <!-- <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\"  style=\"display:none;\" />\n  </div>\n</div> -->\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"empname\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Emp Name</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <!-- <ngx-datatable-column name=\"empnid\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Emp ID</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"empnuid\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>EMP RFID</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"dept\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Department</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <!-- <ngx-datatable-column name=\"groups\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Groups</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <!-- <ngx-datatable-column name=\"category\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Category</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <!-- <ngx-datatable-column name=\"location\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Location</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"role\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Role</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"password\" [width]=\"130\"></ngx-datatable-column>\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                            EMPLOYEE</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Emp Name</mat-label>\n                                                              <input matInput formControlName=\"empname\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('empname').hasError('required')\">\n                                                              empname  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Emp ID</mat-label>\n                                                            <input matInput formControlName=\"empnid\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('empnid').hasError('required')\">\n                                                            empnid  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n                                                  <div class=\"row\">\n\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Emp UID</mat-label>\n                                                            <input matInput formControlName=\"empnuid\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('empnuid').hasError('required')\">\n                                                            empnuid  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n\n\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Department</mat-label>\n\n                                                    <mat-select formControlName=\"dept\"   >\n                                                      <mat-option *ngFor=\"let option of deptdata\"   [(ngModel)]=\"deptdata.dept\"  value=\"{{option.dept}}\">{{ option.dept }}</mat-option>\n                                                    </mat-select>\n                                                    <mat-icon matSuffix>star</mat-icon>\n\n                                                  </mat-form-field>\n                                                </div>\n\n\n                                                </div>\n                                                <div class=\"row\">\n\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Location</mat-label>\n                                                          <input matInput formControlName=\"location\">\n                                                          <mat-error\n                                                          *ngIf=\"register.get('location').hasError('required')\">\n                                                          location  is required\n                                                      </mat-error>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                      </mat-form-field>\n                                                  </div>\n\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Role</mat-label>\n\n                                                    <mat-select formControlName=\"role\"   >\n                                                      <mat-option *ngFor=\"let option of resondata\"   [(ngModel)]=\"option.role\"  value=\"{{option.role}}\">{{ option.role }}</mat-option>\n                                                    </mat-select>\n                                                    <mat-icon matSuffix>star</mat-icon>\n\n                                                  </mat-form-field>\n                                                </div>\n\n\n                                              </div>\n\n                                              <div class=\"row\">\n\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Group</mat-label>\n                                                        <input matInput formControlName=\"groups\">\n                                                        <mat-error\n                                                        *ngIf=\"register.get('groups').hasError('required')\">\n                                                        groups  is required\n                                                    </mat-error>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                    </mat-form-field>\n                                                </div>\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>Category</mat-label>\n                                                      <input matInput formControlName=\"category\">\n                                                      <mat-error\n                                                      *ngIf=\"register.get('category').hasError('required')\">\n                                                      category  is required\n                                                  </mat-error>\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                  </mat-form-field>\n                                              </div>\n\n                                            </div>\n\n\n                                            <div class=\"row\">\n\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>Password</mat-label>\n                                                      <input matInput formControlName=\"password\">\n                                                      <mat-error\n                                                      *ngIf=\"register.get('password').hasError('required')\">\n                                                      password  is required\n                                                  </mat-error>\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                  </mat-form-field>\n                                              </div>\n\n\n                                          </div>\n\n\n\n\n\n\n\n\n\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.empname}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Emp Name</mat-label>\n                                                              <input matInput formControlName=\"empname\" required>\n                                                              <mat-icon matSuffix>empname</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('empname').hasError('required')\">\n                                                                  empname required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Emp ID</mat-label>\n                                                            <input matInput formControlName=\"empnid\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('empnid').hasError('required')\">\n                                                                empnid required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                      </div>\n\n                                                   </div>\n                                                   <div class=\"row\">\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Emp RFID</mat-label>\n                                                            <input matInput formControlName=\"empnuid\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('empnuid').hasError('required')\">\n                                                                empnuid required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Department</mat-label>\n                                                          <mat-select formControlName=\"dept\"   >\n                                                            <mat-option *ngFor=\"let option of deptdata\"   [(ngModel)]=\"deptdata.dept\"  value=\"{{option.dept}}\">{{ option.dept }}</mat-option>\n                                                          </mat-select>\n                                                          <mat-icon matSuffix>star</mat-icon>\n\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('dept').hasError('required')\">\n                                                             dept required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                    </div>\n\n\n\n\n                                                 </div>\n                                                 <div class=\"row\">\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Groups</mat-label>\n                                                          <input matInput formControlName=\"groups\" required>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('groups').hasError('required')\">\n                                                              groups required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Category</mat-label>\n                                                        <input matInput formControlName=\"category\" required>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                        <mat-error\n                                                            *ngIf=\"editForm.get('category').hasError('required')\">\n                                                            category required\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                  </div>\n\n                                               </div>\n                                               <div class=\"row\">\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Location</mat-label>\n                                                        <input matInput formControlName=\"location\" required>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                        <mat-error\n                                                            *ngIf=\"editForm.get('location').hasError('required')\">\n                                                            location required\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>Role</mat-label>\n                                                      <mat-select formControlName=\"role\"   >\n                                                        <mat-option *ngFor=\"let option of resondata\"   [(ngModel)]=\"option.role\"  value=\"{{option.role}}\">{{ option.role }}</mat-option>\n                                                      </mat-select>\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                      <mat-error\n                                                          *ngIf=\"editForm.get('role').hasError('required')\">\n                                                          role required\n                                                      </mat-error>\n                                                  </mat-form-field>\n                                                </div>\n\n                                             </div>\n                                               <div class=\"row\">\n\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\"\n                                                    appearance=\"outline\">\n                                                    <mat-label>Password</mat-label>\n                                                    <input matInput formControlName=\"password\" required>\n                                                    <mat-icon matSuffix>star</mat-icon>\n                                                    <mat-error\n                                                        *ngIf=\"editForm.get('password').hasError('required')\">\n                                                        password required\n                                                    </mat-error>\n                                                </mat-form-field>\n                                              </div>\n\n                                           </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.sass']\n})\nexport class RoleComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'role' },\n\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'role' },\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n\n\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n\n      role: new FormControl(),\n\n\n    });\n  }\n  mainurl\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      role: [''],\n      id: ['']\n\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl + 'role');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n\n      role: row.role,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n\n      // role: this.role\n    });\n  }\n\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl + 'role/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted:)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.role = form.value.role;\n      }\n      let empdata = {\n        'role' : form.value.role,\n\n\n      }\n      this.http.put(this.mainurl + 'role/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl + 'role', form.value).subscribe();\n    this.data = [...this.data];\n   console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n\n  role: String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Role</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"role\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Role</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <!-- <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button> -->\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              Role</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Role</mat-label>\n                                                              <input matInput formControlName=\"role\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('role').hasError('required')\">\n                                                              role  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.role}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Role</mat-label>\n                                                            <input matInput formControlName=\"role\" required>\n                                                            <mat-icon matSuffix>face</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('role').hasError('required')\">\n                                                               role required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-dep',\n  templateUrl: './dep.component.html',\n  styleUrls: ['./dep.component.sass']\n})\nexport class DepComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'loc' },\n    { name: 'dept' }\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'loc' },\n    { name: 'dept' }\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n\n\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n\n      loc: new FormControl(),\n      dept: new FormControl(),\n\n    });\n  }\n  mainurl;\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      loc: [''],\n      id: [''],\n      dept: [''],\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl + 'dep');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      dept: row.dept,\n      loc: row.loc,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n\n      // loc: this.loc\n    });\n  }\n\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl + 'dep/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted:)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.dept = form.value.dept;\n        value.loc = form.value.loc;\n      }\n      let empdata = {\n        'dept' : form.value.dept,\n        'loc' : form.value.loc,\n      }\n      this.http.put(this.mainurl + 'dep/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl + 'dep', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  dept: String;\n  loc: String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Department</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"loc\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Location</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"dept\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Department</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              Department</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Location</mat-label>\n                                                              <input matInput formControlName=\"loc\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('loc').hasError('required')\">\n                                                              loc  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Department</mat-label>\n                                                            <input matInput formControlName=\"dept\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('dept').hasError('required')\">\n                                                            dept  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n\n\n\n\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.id}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Location</mat-label>\n                                                              <input matInput formControlName=\"loc\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('loc').hasError('required')\">\n                                                                  loc required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Department</mat-label>\n                                                            <input matInput formControlName=\"dept\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('dept').hasError('required')\">\n                                                               dept required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { EmpComponent } from './emp/emp.component';\r\nimport { RoleComponent } from './role/role.component';\r\nimport { DepComponent } from './dep/dep.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'emp',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'dep',\r\n    component: DepComponent\r\n  },\r\n  {\r\n    path: 'role',\r\n    component: RoleComponent\r\n  },\r\n  {\r\n    path: 'emp',\r\n    component: EmpComponent\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class usersRoutingModule {}\r\n"]}