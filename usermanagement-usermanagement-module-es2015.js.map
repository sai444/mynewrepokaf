{"version":3,"sources":["./src/app/usermanagement/usermanagement.module.ts","./src/app/usermanagement/emp/emp.component.ts","./src/app/usermanagement/emp/emp.component.html","./src/app/usermanagement/role/role.component.ts","./src/app/usermanagement/role/role.component.html","./src/app/usermanagement/dep/dep.component.ts","./src/app/usermanagement/dep/dep.component.html","./src/app/usermanagement/user-routing.module.ts"],"names":[],"mappings":"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","file":"usermanagement-usermanagement-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmpComponent } from './emp/emp.component';\nimport { DepComponent } from './dep/dep.component';\nimport { RoleComponent } from './role/role.component';\nimport { usersRoutingModule } from './user-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\nimport { configsRoutingModule } from '../configs/configs.routing.module';\n\n\n\n@NgModule({\n  declarations: [EmpComponent, DepComponent, RoleComponent],\n  imports: [\n    CommonModule,\n    usersRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    configsRoutingModule,\n    NgxDatatableModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSnackBarModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    MatCardModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatSortModule,\n    MatToolbarModule,\n    MatCheckboxModule,\n    MaterialFileInputModule,\n    MatRadioModule,\n    MatMenuModule,\n\n  ]\n})\nexport class UsermanagementModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-emp',\n  templateUrl: './emp.component.html',\n  styleUrls: ['./emp.component.sass']\n})\nexport class EmpComponent implements OnInit {\n\n\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n    @ViewChild(\"fileUpload\", {static: false}) fileUpload: ElementRef;\n    files  = [];\n  // rows = [];\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  serverUrl: string = \"http://localhost:2020/empupload\";\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'empname' },\n    { name: 'empnid' },\n    { name: 'empnuid' },\n    { name: 'dept' },\n    { name: 'groups' },\n    { name: 'category' },\n    { name: 'location' },\n    { name: 'role' },\n    { name: 'password' }\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'empname' },\n    { name: 'empnid' },\n    { name: 'empnuid' },\n    { name: 'dept' },\n    { name: 'groups' },\n    { name: 'category' },\n    { name: 'location' },\n    { name: 'role' },\n    { name: 'password' }\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n  resondata: any ={};\n  deptdata : any ={};\n\n\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n\n\n      empname: new FormControl(),\n      empnid: new FormControl(),\n      empnuid: new FormControl(),\n      dept: new FormControl(),\n      groups: new FormControl(),\n      category: new FormControl(),\n      location: new FormControl(),\n      role: new FormControl(),\n      password: new FormControl(),\n\n    });\n  }\n  getdatareason(){\n\n    this.http.get(this.mainurl + 'dep').subscribe(res => {\n      this.deptdata = res;\n      console.log('this is reason ',  this.deptdata );\n\n    });\n\n  }\n  getdataDEPT(){\n    this.http.get(this.mainurl + 'role').subscribe(res => {\n      this.resondata = res;\n      console.log('this is reason ',  this.resondata );\n\n    });\n\n  }\n  mainurl;\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this. getdatareason();\n    this. getdataDEPT();\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      id: [''],\n      empname: [''],\n      empnid: [''],\n      empnuid: [''],\n      dept: [''],\n      groups: [''],\n      category: [''],\n      location: [''],\n      role: [''],\n      password: [''],\n\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl + 'emp');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n      console.log(data);\n\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id:  row.id,\n      empname:  row.empname,\n      empnid:  row.empnid,\n      empnuid:  row.empnuid,\n      dept:  row.dept,\n      groups:  row.groups,\n      category:  row.category,\n      location:  row.location,\n      role:  row.role,\n      password:  row.password,\n\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n\n      // loc: this.loc\n    });\n  }\n\npublic sendFormData(formData) {\n    return this.http.post<any>(this.serverUrl, formData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n}\nsendFile(file) {\n  const formData = new FormData();\n  formData.append('file', file.data);\n  file.inProgress = true;\n  this.sendFormData(formData).subscribe((event: any) => {\n      if (typeof (event) === 'object') {\n        // console.log(event.body);\n      }\n    });\n}\nprivate sendFiles() {\n  this.fileUpload.nativeElement.value = '';\n  this.files.forEach(file => {\n    this.sendFile(file);\n  });\n}\nonClick() {\n  const fileUpload = this.fileUpload.nativeElement;fileUpload.onchange = () => {\n  for (let index = 0; index < fileUpload.files.length; index++)\n  {\n   const file = fileUpload.files[index];\n   this.files.push({ data: file, inProgress: false, progress: 0});\n  }\n    this.sendFiles();\n  };\n  fileUpload.click();\n}\n\n\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl + 'emp/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted:)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onFileChange(event){\n\n  }\n\n\n \n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.type = form.value.type;\n        value.empname = form.value.empname;\n        value.empnid = form.value.empnid;\n        value.empnuid = form.value.empnuid;\n        value.groups = form.value.groups;\n        value.category = form.value.category;\n        value.location = form.value.location;\n        value.role = form.value.role;\n        value.password = form.value.password  ;\n\n      }\n      let empdata = {\n\n        'empname': form.value.empname,\n        'empnid': form.value.empnid,\n        'empnuid': form.value.empnuid,\n        'dept': form.value.dept,\n        'groups': form.value.groups,\n        'category': form.value.category,\n        'location': form.value.location,\n        'role': form.value.role,\n        'password': form.value.password,\n\n\n      }\n      console.log('this is id' , empdata);\n\n      this.http.put(this.mainurl + 'emp/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl + 'emp', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n\n  empname: String;\n  empnid: String;\n  empnuid: String;\n  dept: String;\n  groups: String;\n  category: String;\n  location: String;\n  role: String;\n  password: String;\n\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>EMPLOYEE</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                      <li>\n                                      <button (click)=\"onClick()\">Upload</button>\n                                        <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" accept=\"image/*\" style=\"display:none;\" />\n                                        <input id=\"my-file-selector\" type=\"file\" (change)=\"onFileChange($event)\" name=\"uploadExcel\">\n                                      </li>\n                                  </ul>\n                              </div>\n<!-- <div>\n  <div>\n    <ul>\n      <li *ngFor=\"let file of files\">\n\n          <span id=\"file-label\">\n              {{file.data.name}}\n          </span>\n      </li>\n  </ul> -->\n\n  <!-- <button (click)=\"onClick()\">\n      Upload\n  </button> -->\n  <!-- <input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\"  style=\"display:none;\" />\n  </div>\n</div> -->\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"empname\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Emp Name</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <!-- <ngx-datatable-column name=\"empnid\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Emp ID</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"empnuid\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>EMP RFID</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"dept\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Department</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <!-- <ngx-datatable-column name=\"groups\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Groups</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <!-- <ngx-datatable-column name=\"category\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Category</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <!-- <ngx-datatable-column name=\"location\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Location</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"role\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Role</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"password\" [width]=\"130\"></ngx-datatable-column>\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                            EMPLOYEE</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Emp Name</mat-label>\n                                                              <input matInput formControlName=\"empname\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('empname').hasError('required')\">\n                                                              empname  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Emp ID</mat-label>\n                                                            <input matInput formControlName=\"empnid\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('empnid').hasError('required')\">\n                                                            empnid  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n                                                  <div class=\"row\">\n\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Emp UID</mat-label>\n                                                            <input matInput formControlName=\"empnuid\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('empnuid').hasError('required')\">\n                                                            empnuid  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n\n\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Department</mat-label>\n\n                                                    <mat-select formControlName=\"dept\"   >\n                                                      <mat-option *ngFor=\"let option of deptdata\"   [(ngModel)]=\"deptdata.dept\"  value=\"{{option.dept}}\">{{ option.dept }}</mat-option>\n                                                    </mat-select>\n                                                    <mat-icon matSuffix>star</mat-icon>\n\n                                                  </mat-form-field>\n                                                </div>\n\n\n                                                </div>\n                                                <div class=\"row\">\n\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Location</mat-label>\n                                                          <input matInput formControlName=\"location\">\n                                                          <mat-error\n                                                          *ngIf=\"register.get('location').hasError('required')\">\n                                                          location  is required\n                                                      </mat-error>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                      </mat-form-field>\n                                                  </div>\n\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                                                    <mat-label>Role</mat-label>\n\n                                                    <mat-select formControlName=\"role\"   >\n                                                      <mat-option *ngFor=\"let option of resondata\"   [(ngModel)]=\"option.role\"  value=\"{{option.role}}\">{{ option.role }}</mat-option>\n                                                    </mat-select>\n                                                    <mat-icon matSuffix>star</mat-icon>\n\n                                                  </mat-form-field>\n                                                </div>\n\n\n                                              </div>\n\n                                              <div class=\"row\">\n\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Group</mat-label>\n                                                        <input matInput formControlName=\"groups\">\n                                                        <mat-error\n                                                        *ngIf=\"register.get('groups').hasError('required')\">\n                                                        groups  is required\n                                                    </mat-error>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                    </mat-form-field>\n                                                </div>\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>Category</mat-label>\n                                                      <input matInput formControlName=\"category\">\n                                                      <mat-error\n                                                      *ngIf=\"register.get('category').hasError('required')\">\n                                                      category  is required\n                                                  </mat-error>\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                  </mat-form-field>\n                                              </div>\n\n                                            </div>\n\n\n                                            <div class=\"row\">\n\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>Password</mat-label>\n                                                      <input matInput formControlName=\"password\">\n                                                      <mat-error\n                                                      *ngIf=\"register.get('password').hasError('required')\">\n                                                      password  is required\n                                                  </mat-error>\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                  </mat-form-field>\n                                              </div>\n\n\n                                          </div>\n\n\n\n\n\n\n\n\n\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.empname}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Emp Name</mat-label>\n                                                              <input matInput formControlName=\"empname\" required>\n                                                              <mat-icon matSuffix>empname</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('empname').hasError('required')\">\n                                                                  empname required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Emp ID</mat-label>\n                                                            <input matInput formControlName=\"empnid\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('empnid').hasError('required')\">\n                                                                empnid required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                      </div>\n\n                                                   </div>\n                                                   <div class=\"row\">\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Emp RFID</mat-label>\n                                                            <input matInput formControlName=\"empnuid\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('empnuid').hasError('required')\">\n                                                                empnuid required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n                                                    <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Department</mat-label>\n                                                          <mat-select formControlName=\"dept\"   >\n                                                            <mat-option *ngFor=\"let option of deptdata\"   [(ngModel)]=\"deptdata.dept\"  value=\"{{option.dept}}\">{{ option.dept }}</mat-option>\n                                                          </mat-select>\n                                                          <mat-icon matSuffix>star</mat-icon>\n\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('dept').hasError('required')\">\n                                                             dept required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                    </div>\n\n\n\n\n                                                 </div>\n                                                 <div class=\"row\">\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                      <mat-form-field class=\"example-full-width\"\n                                                          appearance=\"outline\">\n                                                          <mat-label>Groups</mat-label>\n                                                          <input matInput formControlName=\"groups\" required>\n                                                          <mat-icon matSuffix>star</mat-icon>\n                                                          <mat-error\n                                                              *ngIf=\"editForm.get('groups').hasError('required')\">\n                                                              groups required\n                                                          </mat-error>\n                                                      </mat-form-field>\n                                                  </div>\n                                                  <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Category</mat-label>\n                                                        <input matInput formControlName=\"category\" required>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                        <mat-error\n                                                            *ngIf=\"editForm.get('category').hasError('required')\">\n                                                            category required\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                  </div>\n\n                                               </div>\n                                               <div class=\"row\">\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                    <mat-form-field class=\"example-full-width\"\n                                                        appearance=\"outline\">\n                                                        <mat-label>Location</mat-label>\n                                                        <input matInput formControlName=\"location\" required>\n                                                        <mat-icon matSuffix>star</mat-icon>\n                                                        <mat-error\n                                                            *ngIf=\"editForm.get('location').hasError('required')\">\n                                                            location required\n                                                        </mat-error>\n                                                    </mat-form-field>\n                                                </div>\n                                                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                  <mat-form-field class=\"example-full-width\"\n                                                      appearance=\"outline\">\n                                                      <mat-label>Role</mat-label>\n                                                      <mat-select formControlName=\"role\"   >\n                                                        <mat-option *ngFor=\"let option of resondata\"   [(ngModel)]=\"option.role\"  value=\"{{option.role}}\">{{ option.role }}</mat-option>\n                                                      </mat-select>\n                                                      <mat-icon matSuffix>star</mat-icon>\n                                                      <mat-error\n                                                          *ngIf=\"editForm.get('role').hasError('required')\">\n                                                          role required\n                                                      </mat-error>\n                                                  </mat-form-field>\n                                                </div>\n\n                                             </div>\n                                               <div class=\"row\">\n\n                                              <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                <mat-form-field class=\"example-full-width\"\n                                                    appearance=\"outline\">\n                                                    <mat-label>Password</mat-label>\n                                                    <input matInput formControlName=\"password\" required>\n                                                    <mat-icon matSuffix>star</mat-icon>\n                                                    <mat-error\n                                                        *ngIf=\"editForm.get('password').hasError('required')\">\n                                                        password required\n                                                    </mat-error>\n                                                </mat-form-field>\n                                              </div>\n\n                                           </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.sass']\n})\nexport class RoleComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'role' },\n\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'role' },\n\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n\n\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n\n      role: new FormControl(),\n\n\n    });\n  }\n  mainurl\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      role: [''],\n      id: ['']\n\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl + 'role');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n\n      role: row.role,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n\n      // role: this.role\n    });\n  }\n\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl + 'role/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted:)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.role = form.value.role;\n      }\n      let empdata = {\n        'role' : form.value.role,\n\n\n      }\n      this.http.put(this.mainurl + 'role/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl + 'role', form.value).subscribe();\n    this.data = [...this.data];\n   console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n\n  role: String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Role</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"role\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Role</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <!-- <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button> -->\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              Role</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>face</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Role</mat-label>\n                                                              <input matInput formControlName=\"role\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('role').hasError('required')\">\n                                                              role  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>face</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.role}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Role</mat-label>\n                                                            <input matInput formControlName=\"role\" required>\n                                                            <mat-icon matSuffix>face</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('role').hasError('required')\">\n                                                               role required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DatatableComponent } from '@swimlane/ngx-datatable';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-dep',\n  templateUrl: './dep.component.html',\n  styleUrls: ['./dep.component.sass']\n})\nexport class DepComponent implements OnInit {\n  @ViewChild('roleTemplate', { static: true }) roleTemplate: TemplateRef<any>;\n  @ViewChild(DatatableComponent, { static: false }) table: DatatableComponent;\n  @ViewChild('closeAddModal', { static: false }) closeAddModal;\n  @ViewChild('closeEditModal', { static: false }) closeEditModal;\n  rows = [];\n  selectedRowData: selectRowInterface;\n  // newUserImg = 'assets/images/user/user1.jpg';\n  data = [];\n  filteredData = [];\n  editForm: FormGroup;\n  register: FormGroup;\n  selectedOption: string;\n  columns = [\n    { name: 'id' },\n    { name: 'loc' },\n    { name: 'dept' }\n\n  ];\n  // Table 2\n  tb2columns = [\n    { name: 'id' },\n    { name: 'loc' },\n    { name: 'dept' }\n  ];\n  tb2data = [];\n  tb2filteredData = [];\n  @ViewChild(DatatableComponent, { static: false }) table2: DatatableComponent;\n\n\n  constructor(private fb: FormBuilder, private _snackBar: MatSnackBar , private http: HttpClient ) {\n    this.editForm = this.fb.group({\n      id: new FormControl(),\n\n      loc: new FormControl(),\n      dept: new FormControl(),\n\n    });\n  }\n  mainurl;\n  ngOnInit() {\n    this.mainurl = localStorage.getItem('mainurl');\n    this.fetch(data => {\n      this.data = data;\n      this.filteredData = data;\n    });\n    // Table 2\n    this.tb2fetch(data => {\n      this.tb2data = data;\n      this.tb2filteredData = data;\n    });\n    this.register = this.fb.group({\n      //\n      loc: [''],\n      id: [''],\n      dept: [''],\n\n    });\n  }\n  fetch(cb) {\n\n    const req = new XMLHttpRequest();\n    req.open('GET', this.mainurl + 'dep');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n\n\n\n    req.send();\n  }\n  // Table 2\n  tb2fetch(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', 'assets/data/ngx-data.json');\n    req.onload = () => {\n      const data = JSON.parse(req.response);\n      cb(data);\n    };\n    req.send();\n  }\n  // Table 2\n  tb2filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.tb2columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.tb2filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.tb2data = this.tb2filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table2.offset = 0;\n  }\n  editRow(row, rowIndex) {\n    this.editForm.setValue({\n      id: row.id,\n      dept: row.dept,\n      loc: row.loc,\n\n    });\n    this.selectedRowData = row;\n  }\n  addRow() {\n    this.register.patchValue({\n      // id: this.getId(10, 100),\n\n      // loc: this.loc\n    });\n  }\n\n  deleteRow(row) {\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Please check the dependency before deleted',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, delete it!',\n      cancelButtonText: 'No, keep it'\n    }).then((result) => {\n      if (result.value) {\n        this.data = this.arrayRemove(this.data, row.id);\n        this.http.delete(this.mainurl + 'dep/'+row.id).subscribe();\n        this.showNotification(\n          'bg-red',\n          'Delete Record Successfully',\n          'bottom',\n          'right'\n        );\n        Swal.fire(\n          'Deleted!',\n          'Seleted data is  been deleted..',\n          'success'\n        )\n      // For more information about handling dismissals please visit\n      // https://sweetalert2.github.io/#handling-dismissals\n      } else if (result.dismiss === Swal.DismissReason.cancel) {\n        Swal.fire(\n          'Cancelled',\n          'Seleted data is not deleted:)',\n          'error'\n        )\n      }\n    })\n    // this.data = this.arrayRemove(this.data, row.id);\n    // this.showNotification(\n    //   'bg-red',\n    //   'Delete Record Successfully',\n    //   'bottom',\n    //   'right'\n    // );\n\n  }\n\n  arrayRemove(array, id) {\n    return array.filter(function(element) {\n      return element.id != id;\n    });\n  }\n  onEditSave(form: FormGroup) {\n    // this.data = this.data.filter((value, key) => {\n    //   if (value.id == form.value.id) {\n    //     value.type = form.value.type;\n\n    //   }\n    //   this.closeEditModal.nativeElement.click();\n    //   return true;\n    // });\n    this.data = this.data.filter((value, key) => {\n      if (value.id == form.value.id) {\n        value.dept = form.value.dept;\n        value.loc = form.value.loc;\n      }\n      let empdata = {\n        'dept' : form.value.dept,\n        'loc' : form.value.loc,\n      }\n      this.http.put(this.mainurl + 'dep/'+form.value.id, empdata).subscribe();\n\n      this.closeEditModal.nativeElement.click();\n      return true;\n    });\n    this.showNotification(\n      'bg-black',\n      'Edit Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  onAddRowSave(form: FormGroup) {\n    this.data.push(form.value);\n    this.http.post(this.mainurl + 'dep', form.value).subscribe();\n    this.data = [...this.data];\n    // console.log(this.data);\n    form.reset();\n    this.closeAddModal.nativeElement.click();\n    this.showNotification(\n      'bg-green',\n      'Add Record Successfully',\n      'bottom',\n      'right'\n    );\n  }\n  filterDatatable(event) {\n    // get the value of the key pressed and make it lowercase\n    const val = event.target.value.toLowerCase();\n    // get the amount of columns in the table\n    const colsAmt = this.columns.length;\n    // get the key names of each column in the dataset\n    const keys = Object.keys(this.filteredData[0]);\n    // assign filtered matches to the active datatable\n    this.data = this.filteredData.filter(function(item) {\n      // iterate through each row's column data\n      for (let i = 0; i < colsAmt; i++) {\n        // check for a match\n        if (\n          item[keys[i]]\n            .toString()\n            .toLowerCase()\n            .indexOf(val) !== -1 ||\n          !val\n        ) {\n          // found match, return true to add to result set\n          return true;\n        }\n      }\n    });\n    // whenever the filter changes, always go back to the first page\n    this.table.offset = 0;\n  }\n  getId(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n  openSnackBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 2000,\n      verticalPosition: 'bottom',\n      horizontalPosition: 'right',\n      panelClass: ['bg-red']\n    });\n  }\n  showNotification(colorName, text, placementFrom, placementAlign) {\n    this._snackBar.open(text, '', {\n      duration: 2000,\n      verticalPosition: placementFrom,\n      horizontalPosition: placementAlign,\n      panelClass: colorName\n    });\n  }\n}\nexport interface selectRowInterface {\n  id: String;\n  dept: String;\n  loc: String;\n\n}\n","<section class=\"content\">\n  <div class=\"container-fluid\">\n      <!-- Basic Examples -->\n\n      <div class=\"row clearfix\">\n          <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\n              <div class=\"card\">\n                  <div class=\"body\">\n                      <div class=\"row\">\n                          <div class=\"col-sm-12\">\n                              <div class=\"ngxTableHeader\">\n                                  <ul class=\"header-buttons-left ml-0\">\n                                      <li class=\"dropdown\">\n                                          <h2>\n                                              <strong>Department</strong></h2>\n                                      </li>\n                                      <li class=\"dropdown m-l-20\">\n                                          <label for=\"search-input\"><i\n                                                  class=\"material-icons search-icon\">search</i></label>\n                                          <input placeholder=\"Search\" type=\"text\" class=\"browser-default search-field\"\n                                              (keyup)='filterDatatable($event)' aria-label=\"Search box\">\n                                      </li>\n                                  </ul>\n                                  <ul class=\"header-buttons m-r-20\">\n                                      <li>\n                                          <div class=\"icon-button-demo\">\n                                              <button mat-mini-fab color=\"primary\" data-toggle=\"modal\"\n                                                  data-target=\"#addModal\" (click)='addRow()'>\n                                                  <mat-icon class=\"col-white\">add</mat-icon>\n                                              </button>\n                                          </div>\n                                      </li>\n                                  </ul>\n                              </div>\n\n\n                              <ngx-datatable #table class=\"material\" [rows]=\"data\" [columns]=\"columns\"\n                                  [sortType]=\"'multi'\" [columnMode]=\"'force'\" [headerHeight]=\"50\" [footerHeight]=\"50\"\n                                  [rowHeight]=\"'60'\" [limit]=\"10\">\n                                  <!-- <ngx-datatable-column name=\"id\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>SI No</span>\n                                    </ng-template>\n                                  </ngx-datatable-column> -->\n                                  <ngx-datatable-column name=\"loc\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Location</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <ngx-datatable-column name=\"dept\" [width]=\"130\">\n                                    <ng-template let-column=\"column\" ngx-datatable-header-template>\n                                      <span>Department</span>\n                                    </ng-template>\n                                  </ngx-datatable-column>\n                                  <!-- action buttons -->\n                                  <ngx-datatable-column name=\"Actions\" sortable=\"false\" [width]=\"120\">\n                                      <ng-template let-value=\"value\" let-row=\"row\" let-rowIndex=\"rowIndex\"\n                                          ngx-datatable-cell-template>\n                                          <span>\n                                              <button class=\"btn tblActnBtn h-auto\" data-toggle=\"modal\"\n                                                  data-target=\"#editModal\" (click)='editRow(row, rowIndex)'>\n                                                  <i class=\"material-icons\">mode_edit</i>\n                                              </button>\n                                              <button class=\"btn tblActnBtn h-auto\" (click)='deleteRow(row)'>\n                                                  <i class=\"material-icons\">delete</i>\n                                              </button>\n                                          </span>\n                                      </ng-template>\n                                  </ngx-datatable-column>\n                              </ngx-datatable>\n\n                              <!-- Add Record Modal Window -->\n                              <div class=\"modal fade\" id=\"addModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='newUserImg' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              Department</div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeAddModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form class=\"register-form m-4\" [formGroup]=\"register\"\n                                                  (ngSubmit)=\"onAddRowSave(register)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <!-- <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"img\" class=\"form-control\" type=\"hidden\">\n                                                  </div> -->\n                                                  <div class=\"row\">\n                                                      <!-- <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>ID</mat-label>\n                                                              <input matInput formControlName=\"id\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n\n                                                          </mat-form-field>\n                                                      </div> -->\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Location</mat-label>\n                                                              <input matInput formControlName=\"loc\">\n                                                              <mat-error\n                                                              *ngIf=\"register.get('loc').hasError('required')\">\n                                                              loc  is required\n                                                          </mat-error>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Department</mat-label>\n                                                            <input matInput formControlName=\"dept\">\n                                                            <mat-error\n                                                            *ngIf=\"register.get('dept').hasError('required')\">\n                                                            dept  is required\n                                                        </mat-error>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                        </mat-form-field>\n                                                    </div>\n                                                  </div>\n\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                                                          <button class=\"mr-3\" [disabled]=\"!register.valid\"\n                                                              mat-raised-button color=\"primary\">Submit</button>\n                                                          <button type=\"button\" mat-button\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                              <!-- Edit Record Modal Window -->\n\n\n\n\n                              <div class=\"modal fade\" id=\"editModal\" tabindex=\"-1\" role=\"dialog\"\n                                  aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                                  <div class=\"modal-dialog\" role=\"document\">\n                                      <div class=\"modal-content\">\n                                          <div class=\"modal-header\">\n                                              <div class=\"editRowModal\">\n                                                  <div class=\"modal-header clearfix\">\n                                                      <!-- <img [src]='selectedRowData?.img' alt=\"avatar\"> -->\n                                                      <div class=\"modal-about\">\n                                                          <div class=\"font-weight-bold p-t-10 font-17\">\n                                                              {{selectedRowData?.id}}\n                                                            </div>\n                                                      </div>\n                                                  </div>\n                                              </div>\n                                              <button type=\"button\" #closeEditModal\n                                                  class=\"btn p-t-10 modal-close-button\" data-dismiss=\"modal\"\n                                                  aria-label=\"Close\">\n                                                  <i class=\"material-icons\">clear</i>\n                                              </button>\n                                          </div>\n                                          <div class=\"modal-body\">\n                                              <form [formGroup]=\"editForm\" (ngSubmit)=\"onEditSave(editForm)\">\n                                                  <div class=\"input-field col s12 d-none\">\n                                                      <input formControlName=\"id\" class=\"form-control\" type=\"hidden\">\n                                                  </div>\n                                                  <div class=\"row\">\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                          <mat-form-field class=\"example-full-width\"\n                                                              appearance=\"outline\">\n                                                              <mat-label>Location</mat-label>\n                                                              <input matInput formControlName=\"loc\" required>\n                                                              <mat-icon matSuffix>star</mat-icon>\n                                                              <mat-error\n                                                                  *ngIf=\"editForm.get('loc').hasError('required')\">\n                                                                  loc required\n                                                              </mat-error>\n                                                          </mat-form-field>\n                                                      </div>\n                                                      <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\n                                                        <mat-form-field class=\"example-full-width\"\n                                                            appearance=\"outline\">\n                                                            <mat-label>Department</mat-label>\n                                                            <input matInput formControlName=\"dept\" required>\n                                                            <mat-icon matSuffix>star</mat-icon>\n                                                            <mat-error\n                                                                *ngIf=\"editForm.get('dept').hasError('required')\">\n                                                               dept required\n                                                            </mat-error>\n                                                        </mat-form-field>\n                                                    </div>\n\n                                                  </div>\n\n                                                  <div class=\"modal-footer\">\n                                                      <div class=\"button-demo\">\n                                                          <button type=\"submit\"\n                                                              class=\"btn btn-outline-success btn-border-radius\">Save</button>\n                                                          <button type=\"button\"\n                                                              class=\"btn btn-outline-warning btn-border-radius\"\n                                                              data-dismiss=\"modal\">Cancel</button>\n                                                      </div>\n                                                  </div>\n                                              </form>\n                                          </div>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n  </div>\n</section>\n","import { EmpComponent } from './emp/emp.component';\r\nimport { RoleComponent } from './role/role.component';\r\nimport { DepComponent } from './dep/dep.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'emp',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'dep',\r\n    component: DepComponent\r\n  },\r\n  {\r\n    path: 'role',\r\n    component: RoleComponent\r\n  },\r\n  {\r\n    path: 'emp',\r\n    component: EmpComponent\r\n  },\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class usersRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}